#pragma region License
/*
 * This file is part of the Boomerang Decompiler.
 *
 * See the file "LICENSE.TERMS" for information on usage and
 * redistribution of this file, and for a DISCLAIMER OF ALL
 * WARRANTIES.
 */
#pragma endregion License
#pragma once


#include "boomerang/decomp/LivenessAnalyzer.h"

#include <list>
#include <set>


class BasicBlock;
class ProcCFG;
class ConnectionGraph;


/// Finds the interferences generated by more than one version
/// of a variable being live at the same program point
class InterferenceFinder
{
public:
    InterferenceFinder(ProcCFG *cfg);

public:
    void findInterferences(ConnectionGraph& interferences);

private:
    void appendBBs(std::list<BasicBlock *>& worklist, std::set<BasicBlock *>& workset);

    void updateWorkListRev(BasicBlock *currBB, std::list<BasicBlock *>& workList, std::set<BasicBlock *>& workSet);

private:
    ProcCFG *m_cfg;
    LivenessAnalyzer m_livenessAna;
};
