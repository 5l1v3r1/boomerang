COMPUTED JUMP at 0x4018f8, pDest = m[(r24 * 4) + 0x401ffa]
Unknown library function HeapReAlloc
proc9: before initialise
proc9: after initialise
proc9: before early
proc9: after early
proc9: before middle
proc9: before fixing call and phi refs
proc9: after fixing call and phi refs
proc9: before finding preserveds
proc9: after finding preserveds
proc9: before fixing call and phi refs
proc9: after fixing call and phi refs
proc9: before updating arguments
proc9: after updating arguments
proc9: before reversing strength reduction
proc9: after reversing strength reduction
proc9: before finding preserveds
proc9: after finding preserveds
proc9: before fixing call and phi refs
proc9: after fixing call and phi refs
proc9: before finding preserveds
proc9: after finding preserveds
proc9: before finding preserveds
proc9: after finding preserveds
proc9: before fixing call and phi refs
proc9: after fixing call and phi refs
proc9: before finding preserveds
proc9: after finding preserveds
proc9: before finding preserveds
proc9: after finding preserveds
proc9: before fixing call and phi refs
proc9: after fixing call and phi refs
proc9: before finding preserveds
proc9: after finding preserveds
proc9: before propagating statements
proc9: after propagating statements
proc9: before removing stack pointer assigns.
proc9: after removing stack pointer assigns.
proc9: before removing matching assigns (%pc).
proc9: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc9: before fixing call and phi refs
proc9: after fixing call and phi refs
proc9: before finding preserveds
proc9: after finding preserveds
proc9: after middle
proc9: before final
proc9: before adding implicit assigns
proc9: after adding implicit assigns
proc9: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc9 ###
proc9: before other uses of dfa type analysis
proc9: after dfa type analysis
proc9: before remUnusedStmtEtc
proc9: after remUnusedStmtEtc
proc9: before find final parameters.
finding final parameters for proc9
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r8
found new parameter r8
potential param r25
found new parameter r25
proc9: after find final parameters.
proc9: before updating arguments
proc9: after updating arguments
proc9: before branch analysis.
proc9: after branch analysis.
proc9: after final
proc21: before initialise
proc21: after initialise
proc21: before early
assgn   69 *32* %pc := m[0x407080]
is readonly
proc21: after early
proc21: before middle
proc21: before fixing call and phi refs
proc21: after fixing call and phi refs
proc21: before finding preserveds
proc21: after finding preserveds
proc21: before fixing call and phi refs
proc21: after fixing call and phi refs
proc21: before updating arguments
proc21: after updating arguments
proc21: before reversing strength reduction
proc21: after reversing strength reduction
proc21: before finding preserveds
proc21: after finding preserveds
proc21: before fixing call and phi refs
proc21: after fixing call and phi refs
proc21: before finding preserveds
proc21: after finding preserveds
proc21: before finding preserveds
proc21: after finding preserveds
proc21: before fixing call and phi refs
proc21: after fixing call and phi refs
proc21: before finding preserveds
proc21: after finding preserveds
proc21: before finding preserveds
proc21: after finding preserveds
proc21: before fixing call and phi refs
proc21: after fixing call and phi refs
proc21: before finding preserveds
proc21: after finding preserveds
proc21: before propagating statements
proc21: after propagating statements
proc21: before removing stack pointer assigns.
proc21: after removing stack pointer assigns.
proc21: before removing matching assigns (t[WILDSTR]).
proc21: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc21: before removing matching assigns (%pc).
proc21: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc21: before fixing call and phi refs
proc21: after fixing call and phi refs
proc21: before finding preserveds
proc21: after finding preserveds
proc21: after middle
proc21: before final
proc21: before adding implicit assigns
proc21: after adding implicit assigns
proc21: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc21 ###
proc21: before other uses of dfa type analysis
in proc proc21 adding addrExp r28{0} - 4 to local table
in proc proc21 adding addrExp r28{0} - 8 to local table
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 16 to local table
in proc proc21 adding addrExp r28{0} - 20 to local table
in proc proc21 adding addrExp r28{0} - 24 to local table
in proc proc21 adding addrExp r28{0} - 8 to local table
in proc proc21 adding addrExp r28{0} - 24 to local table
in proc proc21 adding addrExp r28{0} - 28 to local table
in proc proc21 adding addrExp r28{0} - 32 to local table
in proc proc21 adding addrExp r28{0} - 36 to local table
in proc proc21 adding addrExp r28{0} - 40 to local table
in proc proc21 adding addrExp r28{0} - 24 to local table
in proc proc21 adding addrExp r28{0} - 24 to local table
proc21: after dfa type analysis
proc21: before remUnusedStmtEtc
proc21: after remUnusedStmtEtc
proc21: before find final parameters.
finding final parameters for proc21
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc21: after find final parameters.
proc21: before updating arguments
proc21: after updating arguments
proc21: before branch analysis.
proc21: after branch analysis.
proc21: after final
proc22: before initialise
proc22: after initialise
proc22: before early
assgn    1 *32* r24 := m[0x40add8]
assgn    2 *32* r25 := m[0x40adc8]
assgn   18 *32* m[r28 - 4] := m[0x40addc]
assgn   22 *32* m[r28 - 4] := m[0x40ade4]
assgn   26 *32* %pc := m[0x407084]
is readonly
assgn   31 *32* tmp1 := m[0x40adc8]
assgn   35 *32* r24 := m[0x40add8]
assgn   36 *32* r25 := m[0x40addc]
assgn   42 *32* m[r28 - 4] := m[0x40ade4]
assgn   47 *32* %pc := m[0x40706c]
is readonly
assgn   63 *32* %pc := m[0x407080]
is readonly
assgn   73 *32* m[r28 - 4] := m[0x40ade4]
assgn   77 *32* %pc := m[0x407068]
is readonly
assgn   86 *32* tmp1 := m[0x40add8]
proc22: after early
proc22: before middle
proc22: before fixing call and phi refs
proc22: after fixing call and phi refs
proc22: before finding preserveds
proc22: after finding preserveds
proc22: before fixing call and phi refs
proc22: after fixing call and phi refs
proc22: before updating arguments
proc22: after updating arguments
proc22: before reversing strength reduction
proc22: after reversing strength reduction
proc22: before finding preserveds
proc22: after finding preserveds
proc22: before fixing call and phi refs
proc22: after fixing call and phi refs
proc22: before finding preserveds
proc22: after finding preserveds
proc22: before finding preserveds
proc22: after finding preserveds
proc22: before fixing call and phi refs
proc22: after fixing call and phi refs
proc22: before finding preserveds
proc22: after finding preserveds
proc22: before finding preserveds
proc22: after finding preserveds
proc22: before fixing call and phi refs
proc22: after fixing call and phi refs
proc22: before finding preserveds
proc22: after finding preserveds
proc22: before propagating statements
proc22: after propagating statements
proc22: before removing matching assigns (%pc).
proc22: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc22: before fixing call and phi refs
proc22: after fixing call and phi refs
proc22: before finding preserveds
proc22: after finding preserveds
proc22: after middle
proc22: before final
proc22: before adding implicit assigns
proc22: after adding implicit assigns
proc22: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc22 ###
proc22: before other uses of dfa type analysis
in proc proc22 adding addrExp r28{0} - 12 to local table
in proc proc22 adding addrExp r28{0} - 16 to local table
in proc proc22 adding addrExp r28{0} - 20 to local table
in proc proc22 adding addrExp r28{0} - 24 to local table
in proc proc22 adding addrExp r28{0} - 28 to local table
in proc proc22 adding addrExp r28{0} - 4 to local table
in proc proc22 adding addrExp r28{0} - 8 to local table
in proc proc22 adding addrExp r28{0} - 12 to local table
in proc proc22 adding addrExp r28{0} - 16 to local table
in proc proc22 adding addrExp r28{0} - 20 to local table
in proc proc22 adding addrExp r28{0} - 24 to local table
in proc proc22 adding addrExp r28{0} - 28 to local table
in proc proc22 adding addrExp r28{0} - 12 to local table
in proc proc22 adding addrExp r28{0} - 16 to local table
in proc proc22 adding addrExp r28{0} - 20 to local table
in proc proc22 adding addrExp r28{0} - 24 to local table
in proc proc22 adding addrExp r28{0} - 28 to local table
in proc proc22 adding addrExp r28{0} - 12 to local table
in proc proc22 adding addrExp r28{0} - 16 to local table
in proc proc22 adding addrExp r28{0} - 20 to local table
in proc proc22 adding addrExp r28{0} - 24 to local table
in proc proc22 adding addrExp r28{0} - 28 to local table
in proc proc22 adding addrExp r28{0} - 12 to local table
in proc proc22 adding addrExp r28{0} - 16 to local table
in proc proc22 adding addrExp r28{0} - 20 to local table
in proc proc22 adding addrExp r28{0} - 24 to local table
in proc proc22 adding addrExp r28{0} - 28 to local table
proc22: after dfa type analysis
proc22: before remUnusedStmtEtc
proc22: after remUnusedStmtEtc
proc22: before find final parameters.
finding final parameters for proc22
potential param r28
found new parameter r28
proc22: after find final parameters.
proc22: before updating arguments
proc22: after updating arguments
proc22: before branch analysis.
proc22: after branch analysis.
proc22: after final
proc19: before initialise
proc19: after initialise
proc19: before early
assgn    7 *32* r24 := m[0x40add8]
assgn    8 *32* r26 := m[0x40addc]
assgn   58 *32* r24 := m[0x40add0]
proc19: after early
proc19: before middle
proc19: before fixing call and phi refs
proc19: after fixing call and phi refs
proc19: before finding preserveds
proc19: after finding preserveds
proc19: before fixing call and phi refs
proc19: after fixing call and phi refs
proc19: before updating arguments
proc19: after updating arguments
proc19: before reversing strength reduction
proc19: after reversing strength reduction
proc19: before finding preserveds
proc19: after finding preserveds
proc19: before fixing call and phi refs
proc19: after fixing call and phi refs
proc19: before finding preserveds
proc19: after finding preserveds
proc19: before finding preserveds
proc19: after finding preserveds
proc19: before fixing call and phi refs
proc19: after fixing call and phi refs
proc19: before finding preserveds
proc19: after finding preserveds
proc19: before finding preserveds
proc19: after finding preserveds
proc19: before fixing call and phi refs
proc19: after fixing call and phi refs
proc19: before finding preserveds
proc19: after finding preserveds
proc19: before propagating statements
proc19: after propagating statements
proc19: before removing matching assigns (%pc).
proc19: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc19: before fixing call and phi refs
proc19: after fixing call and phi refs
proc19: before finding preserveds
proc19: after finding preserveds
proc19: after middle
proc19: before final
proc19: before adding implicit assigns
proc19: after adding implicit assigns
proc19: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc19 ###
proc19: before other uses of dfa type analysis
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 40 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 4 to local table
in proc proc19 adding addrExp r28{0} - 28 to local table
in proc proc19 adding addrExp r28{0} - 32 to local table
in proc proc19 adding addrExp r28{0} - 36 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 20 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 40 to local table
in proc proc19 adding addrExp r28{0} - 40 to local table
in proc proc19 adding addrExp r28{0} - 40 to local table
in proc proc19 adding addrExp r28{0} - 40 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 40 to local table
proc19: after dfa type analysis
proc19: before remUnusedStmtEtc
proc19: after remUnusedStmtEtc
proc19: before find final parameters.
finding final parameters for proc19
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
potential param r8
found new parameter r8
proc19: after find final parameters.
proc19: before updating arguments
proc19: after updating arguments
proc19: before branch analysis.
proc19: after branch analysis.
proc19: after final
proc23: before initialise
proc23: after initialise
proc23: before early
proc23: after early
proc23: before middle
proc23: before fixing call and phi refs
proc23: after fixing call and phi refs
proc23: before finding preserveds
proc23: after finding preserveds
proc23: before fixing call and phi refs
proc23: after fixing call and phi refs
proc23: before updating arguments
proc23: after updating arguments
proc23: before reversing strength reduction
proc23: after reversing strength reduction
proc23: before finding preserveds
proc23: after finding preserveds
proc23: before fixing call and phi refs
proc23: after fixing call and phi refs
proc23: before finding preserveds
proc23: after finding preserveds
proc23: before finding preserveds
proc23: after finding preserveds
proc23: before fixing call and phi refs
proc23: after fixing call and phi refs
proc23: before finding preserveds
proc23: after finding preserveds
proc23: before finding preserveds
proc23: after finding preserveds
proc23: before fixing call and phi refs
proc23: after fixing call and phi refs
proc23: before finding preserveds
proc23: after finding preserveds
proc23: before propagating statements
proc23: after propagating statements
proc23: before removing stack pointer assigns.
proc23: after removing stack pointer assigns.
proc23: before removing matching assigns (%pc).
proc23: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc23: before fixing call and phi refs
proc23: after fixing call and phi refs
proc23: before finding preserveds
proc23: after finding preserveds
proc23: after middle
proc23: before final
proc23: before adding implicit assigns
proc23: after adding implicit assigns
proc23: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc23 ###
proc23: before other uses of dfa type analysis
in proc proc23 adding addrExp r28{0} - 24 to local table
in proc proc23 adding addrExp r28{0} - 4 to local table
in proc proc23 adding addrExp r28{0} - 8 to local table
in proc proc23 adding addrExp r28{0} - 12 to local table
in proc proc23 adding addrExp r28{0} - 16 to local table
in proc proc23 adding addrExp r28{0} - 20 to local table
in proc proc23 adding addrExp r28{0} - 8 to local table
in proc proc23 adding addrExp r28{0} - 24 to local table
in proc proc23 adding addrExp r28{0} - 24 to local table
in proc proc23 adding addrExp r28{0} - 24 to local table
in proc proc23 adding addrExp r28{0} - 24 to local table
in proc proc23 adding addrExp r28{0} - 24 to local table
in proc proc23 adding addrExp r28{0} - 24 to local table
in proc proc23 adding addrExp r28{0} - 24 to local table
in proc proc23 adding addrExp r28{0} - 24 to local table
in proc proc23 adding addrExp r28{0} - 24 to local table
proc23: after dfa type analysis
proc23: before remUnusedStmtEtc
proc23: after remUnusedStmtEtc
proc23: before find final parameters.
finding final parameters for proc23
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param r27
found new parameter r27
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
proc23: after find final parameters.
proc23: before updating arguments
proc23: after updating arguments
proc23: before branch analysis.
proc23: after branch analysis.
proc23: after final
proc24: before initialise
proc24: after initialise
proc24: before early
proc24: after early
proc24: before middle
proc24: before fixing call and phi refs
proc24: after fixing call and phi refs
proc24: before finding preserveds
proc24: after finding preserveds
proc24: before fixing call and phi refs
proc24: after fixing call and phi refs
proc24: before updating arguments
proc24: after updating arguments
proc24: before reversing strength reduction
proc24: after reversing strength reduction
proc24: before finding preserveds
proc24: after finding preserveds
proc24: before fixing call and phi refs
proc24: after fixing call and phi refs
proc24: before finding preserveds
proc24: after finding preserveds
proc24: before finding preserveds
proc24: after finding preserveds
proc24: before fixing call and phi refs
proc24: after fixing call and phi refs
proc24: before finding preserveds
proc24: after finding preserveds
proc24: before finding preserveds
proc24: after finding preserveds
proc24: before fixing call and phi refs
proc24: after fixing call and phi refs
proc24: before finding preserveds
proc24: after finding preserveds
proc24: before propagating statements
proc24: after propagating statements
proc24: before removing stack pointer assigns.
proc24: after removing stack pointer assigns.
proc24: before removing matching assigns (t[WILDSTR]).
proc24: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc24: before removing matching assigns (%pc).
proc24: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc24: before fixing call and phi refs
proc24: after fixing call and phi refs
proc24: before finding preserveds
proc24: after finding preserveds
proc24: after middle
proc24: before final
proc24: before adding implicit assigns
proc24: after adding implicit assigns
proc24: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc24 ###
proc24: before other uses of dfa type analysis
in proc proc24 adding addrExp r28{0} - 4 to local table
in proc proc24 adding addrExp r28{0} - 4 to local table
in proc proc24 adding addrExp r28{0} - 4 to local table
proc24: after dfa type analysis
proc24: before remUnusedStmtEtc
proc24: after remUnusedStmtEtc
proc24: before find final parameters.
finding final parameters for proc24
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
proc24: after find final parameters.
proc24: before updating arguments
proc24: after updating arguments
proc24: before branch analysis.
proc24: after branch analysis.
proc24: after final
proc25: before initialise
proc25: after initialise
proc25: before early
assgn   18 *32* m[r28 - 4] := m[0x40ade4]
assgn   22 *32* %pc := m[0x40706c]
is readonly
assgn   28 *32* r29 := m[0x407080]
is readonly
assgn   65 *32* tmp1 := m[0x408428]
assgn   69 *32* tmp1 := m[0x40842c]
assgn   75 *32* r24 := m[0x40842c]
assgn  154 *32* %pc := m[0x4070b0]
is readonly
assgn  163 *32* m[r28 - 4] := m[0x40ade4]
assgn  167 *32* %pc := m[0x407068]
is readonly
proc25: after early
proc25: before middle
proc25: before fixing call and phi refs
proc25: after fixing call and phi refs
proc25: before finding preserveds
proc25: after finding preserveds
proc25: before fixing call and phi refs
proc25: after fixing call and phi refs
proc25: before updating arguments
proc25: after updating arguments
proc25: before reversing strength reduction
proc25: after reversing strength reduction
proc25: before finding preserveds
proc25: after finding preserveds
proc25: before fixing call and phi refs
proc25: after fixing call and phi refs
proc25: before finding preserveds
proc25: after finding preserveds
proc25: before finding preserveds
proc25: after finding preserveds
proc25: before fixing call and phi refs
proc25: after fixing call and phi refs
proc25: before finding preserveds
proc25: after finding preserveds
proc25: before finding preserveds
proc25: after finding preserveds
proc25: before fixing call and phi refs
proc25: after fixing call and phi refs
proc25: before finding preserveds
proc25: after finding preserveds
proc25: before propagating statements
proc25: after propagating statements
proc25: before removing matching assigns (%pc).
proc25: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc25: before fixing call and phi refs
proc25: after fixing call and phi refs
proc25: before finding preserveds
proc25: after finding preserveds
proc25: after middle
proc25: before final
proc25: before adding implicit assigns
proc25: after adding implicit assigns
proc25: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc25 ###
proc25: before other uses of dfa type analysis
in proc proc25 adding addrExp r28{0} - 20 to local table
in proc proc25 adding addrExp r28{0} - 24 to local table
in proc proc25 adding addrExp r28{0} - 28 to local table
in proc proc25 adding addrExp r28{0} - 32 to local table
in proc proc25 adding addrExp r28{0} - 36 to local table
in proc proc25 adding addrExp r28{0} - 4 to local table
in proc proc25 adding addrExp r28{0} - 8 to local table
in proc proc25 adding addrExp r28{0} - 12 to local table
in proc proc25 adding addrExp r28{0} - 16 to local table
in proc proc25 adding addrExp r28{0} - 20 to local table
in proc proc25 adding addrExp r28{0} - 24 to local table
in proc proc25 adding addrExp r28{0} - 28 to local table
in proc proc25 adding addrExp r28{0} - 32 to local table
in proc proc25 adding addrExp r28{0} - 20 to local table
in proc proc25 adding addrExp r28{0} - 24 to local table
in proc proc25 adding addrExp r28{0} - 28 to local table
in proc proc25 adding addrExp r28{0} - 32 to local table
in proc proc25 adding addrExp r28{0} - 20 to local table
in proc proc25 adding addrExp r28{0} - 24 to local table
in proc proc25 adding addrExp r28{0} - 28 to local table
in proc proc25 adding addrExp r28{0} - 32 to local table
in proc proc25 adding addrExp r28{0} - 36 to local table
in proc proc25 adding addrExp r28{0} - 4 to local table
in proc proc25 adding addrExp r28{0} - 8 to local table
in proc proc25 adding addrExp r28{0} - 12 to local table
in proc proc25 adding addrExp r28{0} - 16 to local table
in proc proc25 adding addrExp r28{0} - 20 to local table
in proc proc25 adding addrExp r28{0} - 24 to local table
in proc proc25 adding addrExp r28{0} - 28 to local table
in proc proc25 adding addrExp r28{0} - 32 to local table
in proc proc25 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffdc is not structure or array type
in proc proc25 adding addrExp r28{0} - 4 to local table
in proc proc25 adding addrExp r28{0} - 8 to local table
in proc proc25 adding addrExp r28{0} - 12 to local table
in proc proc25 adding addrExp r28{0} - 16 to local table
in proc proc25 adding addrExp r28{0} - 20 to local table
in proc proc25 adding addrExp r28{0} - 24 to local table
in proc proc25 adding addrExp r28{0} - 28 to local table
in proc proc25 adding addrExp r28{0} - 32 to local table
in proc proc25 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffdc is not structure or array type
in proc proc25 adding addrExp r28{0} - 4 to local table
in proc proc25 adding addrExp r28{0} - 8 to local table
in proc proc25 adding addrExp r28{0} - 12 to local table
in proc proc25 adding addrExp r28{0} - 16 to local table
in proc proc25 adding addrExp r28{0} - 20 to local table
in proc proc25 adding addrExp r28{0} - 24 to local table
in proc proc25 adding addrExp r28{0} - 28 to local table
in proc proc25 adding addrExp r28{0} - 32 to local table
in proc proc25 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffdc is not structure or array type
proc25: after dfa type analysis
proc25: before remUnusedStmtEtc
proc25: after remUnusedStmtEtc
proc25: before find final parameters.
finding final parameters for proc25
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r8
found new parameter r8
potential param r10
found new parameter r10
proc25: after find final parameters.
proc25: before updating arguments
proc25: after updating arguments
proc25: before branch analysis.
proc25: after branch analysis.
proc25: after final
proc20: before initialise
proc20: after initialise
proc20: before early
assgn   12 *32* r30 := m[0x40a448]
assgn  216 *32* %pc := m[0x407080]
is readonly
proc20: after early
proc20: before middle
proc20: before fixing call and phi refs
proc20: after fixing call and phi refs
proc20: before finding preserveds
proc20: after finding preserveds
proc20: before fixing call and phi refs
proc20: after fixing call and phi refs
proc20: before updating arguments
proc20: after updating arguments
proc20: before reversing strength reduction
proc20: after reversing strength reduction
proc20: before finding preserveds
proc20: after finding preserveds
proc20: before fixing call and phi refs
proc20: after fixing call and phi refs
proc20: before finding preserveds
proc20: after finding preserveds
proc20: before finding preserveds
proc20: after finding preserveds
proc20: before fixing call and phi refs
proc20: after fixing call and phi refs
proc20: before finding preserveds
proc20: after finding preserveds
proc20: before finding preserveds
proc20: after finding preserveds
proc20: before fixing call and phi refs
proc20: after fixing call and phi refs
proc20: before finding preserveds
proc20: after finding preserveds
proc20: before propagating statements
proc20: after propagating statements
proc20: before removing matching assigns (%pc).
proc20: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc20: before finding preserveds
proc20: after finding preserveds
proc20: before fixing call and phi refs
proc20: after fixing call and phi refs
proc20: before finding preserveds
proc20: after finding preserveds
proc20: before finding preserveds
proc20: after finding preserveds
proc20: before fixing call and phi refs
proc20: after fixing call and phi refs
proc20: before finding preserveds
proc20: after finding preserveds
proc20: before finding preserveds
proc20: after finding preserveds
proc20: before fixing call and phi refs
proc20: after fixing call and phi refs
proc20: before finding preserveds
proc20: after finding preserveds
proc20: before propagating statements
proc20: after propagating statements
proc20: before fixing call and phi refs
proc20: after fixing call and phi refs
proc20: before finding preserveds
proc20: after finding preserveds
proc20: after middle
proc20: before final
proc20: before adding implicit assigns
proc20: after adding implicit assigns
proc20: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc20 ###
proc20: before other uses of dfa type analysis
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 64 to local table
in proc proc20 adding addrExp r28{0} - 44 to local table
in proc proc20 adding addrExp r28{0} - 4 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
in proc proc20 adding addrExp r28{0} - 20 to local table
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 44 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 44 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 44 to local table
proc20: after dfa type analysis
proc20: before remUnusedStmtEtc
proc20: after remUnusedStmtEtc
proc20: before find final parameters.
finding final parameters for proc20
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r24
found new parameter r24
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 64]
found new parameter m[r28{0} - 64]
proc20: after find final parameters.
proc20: before updating arguments
proc20: after updating arguments
proc20: before branch analysis.
proc20: after branch analysis.
proc20: after final
proc17: before initialise
proc17: after initialise
proc17: before early
assgn    1 *32* r24 := m[0x40ade8]
assgn   77 *32* m[r28 - 4] := m[0x40ade4]
assgn   81 *32* %pc := m[0x40706c]
is readonly
proc17: after early
proc17: before middle
proc17: before fixing call and phi refs
proc17: after fixing call and phi refs
proc17: before finding preserveds
proc17: after finding preserveds
proc17: before fixing call and phi refs
proc17: after fixing call and phi refs
proc17: before updating arguments
proc17: after updating arguments
proc17: before reversing strength reduction
proc17: after reversing strength reduction
proc17: before finding preserveds
proc17: after finding preserveds
proc17: before fixing call and phi refs
proc17: after fixing call and phi refs
proc17: before finding preserveds
proc17: after finding preserveds
proc17: before finding preserveds
proc17: after finding preserveds
proc17: before fixing call and phi refs
proc17: after fixing call and phi refs
proc17: before finding preserveds
proc17: after finding preserveds
proc17: before finding preserveds
proc17: after finding preserveds
proc17: before fixing call and phi refs
proc17: after fixing call and phi refs
proc17: before finding preserveds
proc17: after finding preserveds
proc17: before propagating statements
proc17: after propagating statements
proc17: before removing matching assigns (%pc).
proc17: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc17: before fixing call and phi refs
proc17: after fixing call and phi refs
proc17: before finding preserveds
proc17: after finding preserveds
proc17: after middle
proc17: before final
proc17: before adding implicit assigns
proc17: after adding implicit assigns
proc17: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc17 ###
proc17: before other uses of dfa type analysis
in proc proc17 adding addrExp r28{0} - 24 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 76 to local table
in proc proc17 adding addrExp r28{0} - 52 to local table
in proc proc17 adding addrExp r28{0} - 48 to local table
in proc proc17 adding addrExp r28{0} - 44 to local table
in proc proc17 adding addrExp r28{0} - 40 to local table
in proc proc17 adding addrExp r28{0} - 12 to local table
in proc proc17 adding addrExp r28{0} - 4 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 12 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 12 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 12 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 12 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 12 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 12 to local table
proc17: after dfa type analysis
proc17: before remUnusedStmtEtc
proc17: after remUnusedStmtEtc
proc17: before find final parameters.
finding final parameters for proc17
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r29
found new parameter r29
potential param m[r28{0} - 76]
found new parameter m[r28{0} - 76]
potential param m[r28{0} - 52]
found new parameter m[r28{0} - 52]
potential param m[r28{0} - 48]
found new parameter m[r28{0} - 48]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r9
found new parameter r9
potential param r27
found new parameter r27
proc17: after find final parameters.
proc17: before updating arguments
proc17: after updating arguments
proc17: before branch analysis.
proc17: after branch analysis.
proc17: after final
proc18: before initialise
proc18: after initialise
proc18: before early
assgn    1 *32* r24 := m[0x40ab54]
proc18: after early
proc18: before middle
proc18: before fixing call and phi refs
proc18: after fixing call and phi refs
proc18: before finding preserveds
proc18: after finding preserveds
proc18: before fixing call and phi refs
proc18: after fixing call and phi refs
proc18: before updating arguments
proc18: after updating arguments
proc18: before reversing strength reduction
proc18: after reversing strength reduction
proc18: before finding preserveds
proc18: after finding preserveds
proc18: before fixing call and phi refs
proc18: after fixing call and phi refs
proc18: before finding preserveds
proc18: after finding preserveds
proc18: before finding preserveds
proc18: after finding preserveds
proc18: before fixing call and phi refs
proc18: after fixing call and phi refs
proc18: before finding preserveds
proc18: after finding preserveds
proc18: before finding preserveds
proc18: after finding preserveds
proc18: before fixing call and phi refs
proc18: after fixing call and phi refs
proc18: before finding preserveds
proc18: after finding preserveds
proc18: before propagating statements
proc18: after propagating statements
proc18: before removing matching assigns (t[WILDSTR]).
proc18: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc18: before removing matching assigns (%pc).
proc18: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc18: before fixing call and phi refs
proc18: after fixing call and phi refs
proc18: before finding preserveds
proc18: after finding preserveds
proc18: after middle
proc18: before final
proc18: before adding implicit assigns
proc18: after adding implicit assigns
proc18: before dfa type analysis
proc18: before other uses of dfa type analysis
in proc proc18 adding addrExp r28{0} - 4 to local table
in proc proc18 adding addrExp r28{0} - 8 to local table
in proc proc18 adding addrExp r28{0} - 4 to local table
in proc proc18 adding addrExp r28{0} - 8 to local table
in proc proc18 adding addrExp r28{0} - 4 to local table
TYPE ERROR: Existing type at address 0xfffffffffffffffc is not structure or array type
in proc proc18 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffffffffffff8 is not structure or array type
in proc proc18 adding addrExp r28{0} - 4 to local table
TYPE ERROR: Existing type at address 0xfffffffffffffffc is not structure or array type
in proc proc18 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffffffffffff8 is not structure or array type
proc18: after dfa type analysis
proc18: before fixing call and phi refs
proc18: after fixing call and phi refs
undoComputedBB for statement   10 {*32* r24, *32** r28} := CALL proc26(<all>)
              Reaching definitions: r24=global144,   r25=r25{0},   r28=r28{0} - 8,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=m[r28{0} + 4]{0},   m[r28{0} - 8]=%pc,   tmp1=global144,
                %flags=LOGICALFLAGS32( global144 ),   %ZF=LOGICALFLAGS32( global144 ),
                %CF=LOGICALFLAGS32( global144 )
              Live variables: 
proc18: before remUnusedStmtEtc
proc18: after remUnusedStmtEtc
proc18: before find final parameters.
finding final parameters for proc18
potential param r28
found new parameter r28
potential param r25
found new parameter r25
proc18: after find final parameters.
proc18: before updating arguments
proc18: after updating arguments
proc18: before branch analysis.
proc18: after branch analysis.
proc18: after final
proc16: before initialise
proc16: after initialise
proc16: before early
proc16: after early
proc16: before middle
proc16: before fixing call and phi refs
proc16: after fixing call and phi refs
proc16: before finding preserveds
proc16: after finding preserveds
proc16: before fixing call and phi refs
proc16: after fixing call and phi refs
proc16: before updating arguments
proc16: after updating arguments
proc16: before reversing strength reduction
proc16: after reversing strength reduction
proc16: before finding preserveds
proc16: after finding preserveds
proc16: before fixing call and phi refs
proc16: after fixing call and phi refs
proc16: before finding preserveds
proc16: after finding preserveds
proc16: before finding preserveds
proc16: after finding preserveds
proc16: before fixing call and phi refs
proc16: after fixing call and phi refs
proc16: before finding preserveds
proc16: after finding preserveds
proc16: before finding preserveds
proc16: after finding preserveds
proc16: before fixing call and phi refs
proc16: after fixing call and phi refs
proc16: before finding preserveds
proc16: after finding preserveds
proc16: before propagating statements
proc16: after propagating statements
proc16: before removing matching assigns (%pc).
proc16: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc16: before fixing call and phi refs
proc16: after fixing call and phi refs
proc16: before finding preserveds
proc16: after finding preserveds
proc16: after middle
proc16: before final
proc16: before adding implicit assigns
proc16: after adding implicit assigns
proc16: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc16 ###
proc16: before other uses of dfa type analysis
proc16: after dfa type analysis
proc16: before remUnusedStmtEtc
proc16: after remUnusedStmtEtc
proc16: before find final parameters.
finding final parameters for proc16
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r30
found new parameter r30
potential param r31
found new parameter r31
proc16: after find final parameters.
proc16: before updating arguments
proc16: after updating arguments
proc16: before branch analysis.
proc16: after branch analysis.
proc16: after final
proc10: before initialise
proc10: after initialise
proc10: before early
assgn    1 *32* m[r28 - 4] := m[0x40ab50]
proc10: after early
proc10: before middle
proc10: before fixing call and phi refs
proc10: after fixing call and phi refs
proc10: before finding preserveds
proc10: after finding preserveds
proc10: before fixing call and phi refs
proc10: after fixing call and phi refs
proc10: before updating arguments
proc10: after updating arguments
proc10: before reversing strength reduction
proc10: after reversing strength reduction
proc10: before finding preserveds
proc10: after finding preserveds
proc10: before fixing call and phi refs
proc10: after fixing call and phi refs
proc10: before finding preserveds
proc10: after finding preserveds
proc10: before finding preserveds
proc10: after finding preserveds
proc10: before fixing call and phi refs
proc10: after fixing call and phi refs
proc10: before finding preserveds
proc10: after finding preserveds
proc10: before finding preserveds
proc10: after finding preserveds
proc10: before fixing call and phi refs
proc10: after fixing call and phi refs
proc10: before finding preserveds
proc10: after finding preserveds
proc10: before propagating statements
proc10: after propagating statements
proc10: before removing matching assigns (%pc).
proc10: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc10: before fixing call and phi refs
proc10: after fixing call and phi refs
proc10: before finding preserveds
proc10: after finding preserveds
proc10: after middle
proc10: before final
proc10: before adding implicit assigns
proc10: after adding implicit assigns
proc10: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc10 ###
proc10: before other uses of dfa type analysis
in proc proc10 adding addrExp r28{0} - 4 to local table
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 12 to local table
proc10: after dfa type analysis
proc10: before remUnusedStmtEtc
proc10: after remUnusedStmtEtc
proc10: before find final parameters.
finding final parameters for proc10
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r30
found new parameter r30
potential param r31
found new parameter r31
proc10: after find final parameters.
proc10: before updating arguments
proc10: after updating arguments
proc10: before branch analysis.
proc10: after branch analysis.
proc10: after final
proc6: before initialise
proc6: after initialise
proc6: before early
assgn   28 *32* tmp1 := m[0x40a9ec]
proc6: after early
proc6: before middle
proc6: before fixing call and phi refs
proc6: after fixing call and phi refs
proc6: before finding preserveds
proc6: after finding preserveds
proc6: before fixing call and phi refs
proc6: after fixing call and phi refs
proc6: before updating arguments
proc6: after updating arguments
proc6: before reversing strength reduction
proc6: after reversing strength reduction
proc6: before finding preserveds
proc6: after finding preserveds
proc6: before fixing call and phi refs
proc6: after fixing call and phi refs
proc6: before finding preserveds
proc6: after finding preserveds
proc6: before finding preserveds
proc6: after finding preserveds
proc6: before fixing call and phi refs
proc6: after fixing call and phi refs
proc6: before finding preserveds
proc6: after finding preserveds
proc6: before finding preserveds
proc6: after finding preserveds
proc6: before fixing call and phi refs
proc6: after fixing call and phi refs
proc6: before finding preserveds
proc6: after finding preserveds
proc6: before propagating statements
proc6: after propagating statements
proc6: before removing matching assigns (%pc).
proc6: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc6: before fixing call and phi refs
proc6: after fixing call and phi refs
proc6: before finding preserveds
proc6: after finding preserveds
proc6: after middle
proc6: before final
proc6: before adding implicit assigns
proc6: after adding implicit assigns
proc6: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
proc6: before other uses of dfa type analysis
in proc proc6 adding addrExp r28{0} - 16 to local table
in proc proc6 adding addrExp r28{0} - 20 to local table
in proc proc6 adding addrExp r28{0} - 4 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
in proc proc6 adding addrExp r28{0} - 16 to local table
in proc proc6 adding addrExp r28{0} - 20 to local table
in proc proc6 adding addrExp r28{0} - 16 to local table
in proc proc6 adding addrExp r28{0} - 20 to local table
in proc proc6 adding addrExp r28{0} - 16 to local table
in proc proc6 adding addrExp r28{0} - 20 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
in proc proc6 adding addrExp r28{0} - 16 to local table
in proc proc6 adding addrExp r28{0} - 20 to local table
proc6: after dfa type analysis
proc6: before remUnusedStmtEtc
proc6: after remUnusedStmtEtc
proc6: before find final parameters.
finding final parameters for proc6
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r8
found new parameter r8
potential param r25
found new parameter r25
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r29
found new parameter r29
proc6: after find final parameters.
proc6: before updating arguments
proc6: after updating arguments
proc6: before branch analysis.
proc6: after branch analysis.
proc6: after final
proc7: before initialise
proc7: after initialise
proc7: before early
proc7: after early
proc7: before middle
proc7: before fixing call and phi refs
proc7: after fixing call and phi refs
proc7: before finding preserveds
proc7: after finding preserveds
proc7: before fixing call and phi refs
proc7: after fixing call and phi refs
proc7: before updating arguments
proc7: after updating arguments
proc7: before reversing strength reduction
proc7: after reversing strength reduction
proc7: before finding preserveds
proc7: after finding preserveds
proc7: before fixing call and phi refs
proc7: after fixing call and phi refs
proc7: before finding preserveds
proc7: after finding preserveds
proc7: before finding preserveds
proc7: after finding preserveds
proc7: before fixing call and phi refs
proc7: after fixing call and phi refs
proc7: before finding preserveds
proc7: after finding preserveds
proc7: before finding preserveds
proc7: after finding preserveds
proc7: before fixing call and phi refs
proc7: after fixing call and phi refs
proc7: before finding preserveds
proc7: after finding preserveds
proc7: before propagating statements
proc7: after propagating statements
proc7: before removing stack pointer assigns.
proc7: after removing stack pointer assigns.
proc7: before removing matching assigns (%pc).
proc7: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc7: before fixing call and phi refs
proc7: after fixing call and phi refs
=== about to restart decompilation of proc7 because indirect jumps or calls have been analysed

proc7: before restarting decompilation because indirect jumps or calls have been analysed
processing switch statement type A with table at 0x0x401ffa, 8 entries, lo= 0, hi= 7
proc7: before decoding fragment 1 of 8 (401a2f)
proc7: before decoding fragment 2 of 8 (4018ff)
proc7: before decoding fragment 3 of 8 (40191c)
proc7: before decoding fragment 4 of 8 (401968)
proc7: before decoding fragment 5 of 8 (40199f)
proc7: before decoding fragment 6 of 8 (4019a8)
proc7: before decoding fragment 7 of 8 (4019e0)
proc7: before decoding fragment 8 of 8 (401a74)
proc39: before initialise
proc39: after initialise
proc39: before early
assgn    1 *32* tmp1 := m[0x40a9ec]
proc39: after early
proc39: before middle
proc39: before fixing call and phi refs
proc39: after fixing call and phi refs
proc39: before finding preserveds
proc39: after finding preserveds
proc39: before fixing call and phi refs
proc39: after fixing call and phi refs
proc39: before updating arguments
proc39: after updating arguments
proc39: before reversing strength reduction
proc39: after reversing strength reduction
proc39: before finding preserveds
proc39: after finding preserveds
proc39: before fixing call and phi refs
proc39: after fixing call and phi refs
proc39: before finding preserveds
proc39: after finding preserveds
proc39: before finding preserveds
proc39: after finding preserveds
proc39: before fixing call and phi refs
proc39: after fixing call and phi refs
proc39: before finding preserveds
proc39: after finding preserveds
proc39: before finding preserveds
proc39: after finding preserveds
proc39: before fixing call and phi refs
proc39: after fixing call and phi refs
proc39: before finding preserveds
proc39: after finding preserveds
proc39: before propagating statements
proc39: after propagating statements
proc39: before removing matching assigns (t[WILDSTR]).
proc39: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc39: before removing matching assigns (%pc).
proc39: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc39: before fixing call and phi refs
proc39: after fixing call and phi refs
proc39: before finding preserveds
proc39: after finding preserveds
proc39: after middle
proc39: before final
proc39: before adding implicit assigns
proc39: after adding implicit assigns
proc39: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc39 ###
proc39: before other uses of dfa type analysis
in proc proc39 adding addrExp r28{0} - 4 to local table
in proc proc39 adding addrExp r28{0} - 8 to local table
proc39: after dfa type analysis
proc39: before remUnusedStmtEtc
proc39: after remUnusedStmtEtc
proc39: before find final parameters.
finding final parameters for proc39
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r30
found new parameter r30
potential param r31
found new parameter r31
proc39: after find final parameters.
proc39: before updating arguments
proc39: after updating arguments
proc39: before branch analysis.
proc39: after branch analysis.
proc39: after final
proc15: before initialise
proc15: after initialise
proc15: before early
proc15: after early
proc15: before middle
proc15: before fixing call and phi refs
proc15: after fixing call and phi refs
proc15: before finding preserveds
proc15: after finding preserveds
proc15: before fixing call and phi refs
proc15: after fixing call and phi refs
proc15: before updating arguments
proc15: after updating arguments
proc15: before reversing strength reduction
proc15: after reversing strength reduction
proc15: before finding preserveds
proc15: after finding preserveds
proc15: before fixing call and phi refs
proc15: after fixing call and phi refs
proc15: before finding preserveds
proc15: after finding preserveds
proc15: before finding preserveds
proc15: after finding preserveds
proc15: before fixing call and phi refs
proc15: after fixing call and phi refs
proc15: before finding preserveds
proc15: after finding preserveds
proc15: before finding preserveds
proc15: after finding preserveds
proc15: before fixing call and phi refs
proc15: after fixing call and phi refs
proc15: before finding preserveds
proc15: after finding preserveds
proc15: before propagating statements
proc15: after propagating statements
proc15: before removing stack pointer assigns.
proc15: after removing stack pointer assigns.
proc15: before removing matching assigns (%pc).
proc15: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc15: before fixing call and phi refs
proc15: after fixing call and phi refs
proc15: before finding preserveds
proc15: after finding preserveds
proc15: after middle
proc15: before final
proc15: before adding implicit assigns
proc15: after adding implicit assigns
proc15: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc15 ###
proc15: before other uses of dfa type analysis
proc15: after dfa type analysis
proc15: before remUnusedStmtEtc
proc15: after remUnusedStmtEtc
proc15: before find final parameters.
finding final parameters for proc15
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r25
found new parameter r25
proc15: after find final parameters.
proc15: before updating arguments
proc15: after updating arguments
proc15: before branch analysis.
proc15: after branch analysis.
proc15: after final
proc14: before initialise
proc14: after initialise
proc14: before early
proc14: after early
proc14: before middle
proc14: before fixing call and phi refs
proc14: after fixing call and phi refs
proc14: before finding preserveds
proc14: after finding preserveds
proc14: before fixing call and phi refs
proc14: after fixing call and phi refs
proc14: before updating arguments
proc14: after updating arguments
proc14: before reversing strength reduction
proc14: after reversing strength reduction
proc14: before finding preserveds
proc14: after finding preserveds
proc14: before fixing call and phi refs
proc14: after fixing call and phi refs
proc14: before finding preserveds
proc14: after finding preserveds
proc14: before finding preserveds
proc14: after finding preserveds
proc14: before fixing call and phi refs
proc14: after fixing call and phi refs
proc14: before finding preserveds
proc14: after finding preserveds
proc14: before finding preserveds
proc14: after finding preserveds
proc14: before fixing call and phi refs
proc14: after fixing call and phi refs
proc14: before finding preserveds
proc14: after finding preserveds
proc14: before propagating statements
proc14: after propagating statements
proc14: before removing stack pointer assigns.
proc14: after removing stack pointer assigns.
proc14: before removing matching assigns (%pc).
proc14: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc14: before fixing call and phi refs
proc14: after fixing call and phi refs
proc14: before finding preserveds
proc14: after finding preserveds
proc14: after middle
proc14: before final
proc14: before adding implicit assigns
proc14: after adding implicit assigns
proc14: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc14 ###
proc14: before other uses of dfa type analysis
proc14: after dfa type analysis
proc14: before remUnusedStmtEtc
proc14: after remUnusedStmtEtc
proc14: before find final parameters.
finding final parameters for proc14
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc14: after find final parameters.
proc14: before updating arguments
proc14: after updating arguments
proc14: before branch analysis.
proc14: after branch analysis.
proc14: after final
proc13: before initialise
proc13: after initialise
proc13: before early
assgn   49 *32* %pc := m[0x407028]
is readonly
assgn   57 *32* %pc := m[0x407030]
is readonly
proc13: after early
proc13: before middle
proc13: before fixing call and phi refs
proc13: after fixing call and phi refs
proc13: before finding preserveds
proc13: after finding preserveds
proc13: before fixing call and phi refs
proc13: after fixing call and phi refs
proc13: before updating arguments
proc13: after updating arguments
proc13: before reversing strength reduction
proc13: after reversing strength reduction
proc13: before finding preserveds
proc13: after finding preserveds
proc13: before fixing call and phi refs
proc13: after fixing call and phi refs
proc13: before finding preserveds
proc13: after finding preserveds
proc13: before finding preserveds
proc13: after finding preserveds
proc13: before fixing call and phi refs
proc13: after fixing call and phi refs
proc13: before finding preserveds
proc13: after finding preserveds
proc13: before finding preserveds
proc13: after finding preserveds
proc13: before fixing call and phi refs
proc13: after fixing call and phi refs
proc13: before finding preserveds
proc13: after finding preserveds
proc13: before propagating statements
proc13: after propagating statements
proc13: before removing stack pointer assigns.
proc13: after removing stack pointer assigns.
proc13: before removing matching assigns (%pc).
proc13: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc13: before fixing call and phi refs
proc13: after fixing call and phi refs
proc13: before finding preserveds
proc13: after finding preserveds
proc13: after middle
proc13: before final
proc13: before adding implicit assigns
proc13: after adding implicit assigns
proc13: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc13 ###
proc13: before other uses of dfa type analysis
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 20 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 20 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 20 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 20 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 20 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 20 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
proc13: after dfa type analysis
proc13: before remUnusedStmtEtc
proc13: after remUnusedStmtEtc
proc13: before find final parameters.
finding final parameters for proc13
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r25
found new parameter r25
potential param r26
found new parameter r26
proc13: after find final parameters.
proc13: before updating arguments
proc13: after updating arguments
proc13: before branch analysis.
proc13: after branch analysis.
proc13: after final
proc12: before initialise
proc12: after initialise
proc12: before early
assgn  149 *32* %pc := m[0x4070b4]
is readonly
assgn  194 *32* %pc := m[0x407030]
is readonly
assgn  212 *32* %pc := m[0x4070b4]
is readonly
assgn  224 *32* %pc := m[0x407030]
is readonly
proc12: after early
proc12: before middle
proc12: before fixing call and phi refs
proc12: after fixing call and phi refs
proc12: before finding preserveds
proc12: after finding preserveds
proc12: before fixing call and phi refs
proc12: after fixing call and phi refs
proc12: before updating arguments
proc12: after updating arguments
proc12: before reversing strength reduction
proc12: after reversing strength reduction
proc12: before finding preserveds
proc12: after finding preserveds
proc12: before fixing call and phi refs
proc12: after fixing call and phi refs
proc12: before finding preserveds
proc12: after finding preserveds
proc12: before finding preserveds
proc12: after finding preserveds
proc12: before fixing call and phi refs
proc12: after fixing call and phi refs
proc12: before finding preserveds
proc12: after finding preserveds
proc12: before finding preserveds
proc12: after finding preserveds
proc12: before fixing call and phi refs
proc12: after fixing call and phi refs
proc12: before finding preserveds
proc12: after finding preserveds
proc12: before propagating statements
proc12: after propagating statements
proc12: before removing stack pointer assigns.
proc12: after removing stack pointer assigns.
proc12: before removing matching assigns (%pc).
proc12: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc12: before finding preserveds
proc12: after finding preserveds
proc12: before fixing call and phi refs
proc12: after fixing call and phi refs
proc12: before finding preserveds
proc12: after finding preserveds
proc12: before finding preserveds
proc12: after finding preserveds
proc12: before fixing call and phi refs
proc12: after fixing call and phi refs
proc12: before finding preserveds
proc12: after finding preserveds
proc12: before finding preserveds
proc12: after finding preserveds
proc12: before fixing call and phi refs
proc12: after fixing call and phi refs
proc12: before finding preserveds
proc12: after finding preserveds
proc12: before propagating statements
proc12: after propagating statements
proc12: before fixing call and phi refs
proc12: after fixing call and phi refs
proc12: before finding preserveds
proc12: after finding preserveds
proc12: after middle
proc12: before final
proc12: before adding implicit assigns
proc12: after adding implicit assigns
proc12: before dfa type analysis
WARNING: size 8 meet with unsigned int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with unsigned int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with unsigned int; allowing temporarily
WARNING: size 8 meet with unsigned int; allowing temporarily
WARNING: size 8 meet with unsigned int; allowing temporarily
WARNING: size 8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc12 ###
proc12: before other uses of dfa type analysis
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 0x428 to local table
in proc proc12 adding addrExp r28{0} - 0x42c to local table
in proc proc12 adding addrExp r28{0} - 0x430 to local table
in proc proc12 adding addrExp r28{0} - 0x434 to local table
in proc proc12 adding addrExp r28{0} - 0x438 to local table
in proc proc12 adding addrExp r28{0} - 0x43c to local table
in proc proc12 adding addrExp r28{0} - 0x418 to local table
in proc proc12 adding addrExp r28{0} - 16 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 4 to local table
in proc proc12 adding addrExp r28{0} - 0x41c to local table
in proc proc12 adding addrExp r28{0} - 0x420 to local table
in proc proc12 adding addrExp r28{0} - 0x424 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 0x428 to local table
in proc proc12 adding addrExp r28{0} - 0x42c to local table
in proc proc12 adding addrExp r28{0} - 0x430 to local table
in proc proc12 adding addrExp r28{0} - 0x434 to local table
in proc proc12 adding addrExp r28{0} - 0x438 to local table
in proc proc12 adding addrExp r28{0} - 0x43c to local table
in proc proc12 adding addrExp r28{0} - 0x428 to local table
in proc proc12 adding addrExp r28{0} - 0x42c to local table
in proc proc12 adding addrExp r28{0} - 0x430 to local table
in proc proc12 adding addrExp r28{0} - 0x434 to local table
in proc proc12 adding addrExp r28{0} - 0x428 to local table
in proc proc12 adding addrExp r28{0} - 0x42c to local table
in proc proc12 adding addrExp r28{0} - 0x430 to local table
in proc proc12 adding addrExp r28{0} - 0x434 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 0x428 to local table
in proc proc12 adding addrExp r28{0} - 0x42c to local table
in proc proc12 adding addrExp r28{0} - 0x430 to local table
in proc proc12 adding addrExp r28{0} - 0x434 to local table
in proc proc12 adding addrExp r28{0} - 0x438 to local table
in proc proc12 adding addrExp r28{0} - 0x43c to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 0x428 to local table
in proc proc12 adding addrExp r28{0} - 0x42c to local table
in proc proc12 adding addrExp r28{0} - 0x430 to local table
in proc proc12 adding addrExp r28{0} - 0x434 to local table
in proc proc12 adding addrExp r28{0} - 0x438 to local table
in proc proc12 adding addrExp r28{0} - 0x43c to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 0x428 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 0x428 to local table
in proc proc12 adding addrExp r28{0} - 0x42c to local table
in proc proc12 adding addrExp r28{0} - 0x430 to local table
in proc proc12 adding addrExp r28{0} - 0x434 to local table
in proc proc12 adding addrExp r28{0} - 0x438 to local table
in proc proc12 adding addrExp r28{0} - 0x43c to local table
in proc proc12 adding addrExp r28{0} - 0x428 to local table
in proc proc12 adding addrExp r28{0} - 0x428 to local table
in proc proc12 adding addrExp r28{0} - 0x428 to local table
in proc proc12 adding addrExp r28{0} - 0x42c to local table
in proc proc12 adding addrExp r28{0} - 0x430 to local table
in proc proc12 adding addrExp r28{0} - 0x434 to local table
in proc proc12 adding addrExp r28{0} - 0x438 to local table
in proc proc12 adding addrExp r28{0} - 0x43c to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 0x428 to local table
in proc proc12 adding addrExp r28{0} - 0x428 to local table
in proc proc12 adding addrExp r28{0} - 0x42c to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 0x428 to local table
in proc proc12 adding addrExp r28{0} - 0x42c to local table
in proc proc12 adding addrExp r28{0} - 0x430 to local table
in proc proc12 adding addrExp r28{0} - 0x434 to local table
in proc proc12 adding addrExp r28{0} - 0x438 to local table
in proc proc12 adding addrExp r28{0} - 0x43c to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 0x428 to local table
in proc proc12 adding addrExp r28{0} - 0x42c to local table
in proc proc12 adding addrExp r28{0} - 0x430 to local table
in proc proc12 adding addrExp r28{0} - 0x434 to local table
in proc proc12 adding addrExp r28{0} - 0x438 to local table
in proc proc12 adding addrExp r28{0} - 0x43c to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 0x428 to local table
in proc proc12 adding addrExp r28{0} - 0x42c to local table
in proc proc12 adding addrExp r28{0} - 0x430 to local table
in proc proc12 adding addrExp r28{0} - 0x434 to local table
in proc proc12 adding addrExp r28{0} - 0x438 to local table
in proc proc12 adding addrExp r28{0} - 0x43c to local table
proc12: after dfa type analysis
proc12: before remUnusedStmtEtc
proc12: after remUnusedStmtEtc
proc12: before find final parameters.
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param r26
found new parameter r26
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 0x418]
found new parameter m[r28{0} - 0x418]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param r24
found new parameter r24
proc12: after find final parameters.
proc12: before updating arguments
proc12: after updating arguments
proc12: before branch analysis.
proc12: after branch analysis.
proc12: after final
proc38: before initialise
proc38: after initialise
proc38: before early
proc38: after early
proc38: before middle
proc38: before fixing call and phi refs
proc38: after fixing call and phi refs
proc38: before finding preserveds
proc38: after finding preserveds
proc38: before fixing call and phi refs
proc38: after fixing call and phi refs
proc38: before updating arguments
proc38: after updating arguments
proc38: before reversing strength reduction
proc38: after reversing strength reduction
proc38: before finding preserveds
proc38: after finding preserveds
proc38: before fixing call and phi refs
proc38: after fixing call and phi refs
proc38: before finding preserveds
proc38: after finding preserveds
proc38: before finding preserveds
proc38: after finding preserveds
proc38: before fixing call and phi refs
proc38: after fixing call and phi refs
proc38: before finding preserveds
proc38: after finding preserveds
proc38: before finding preserveds
proc38: after finding preserveds
proc38: before fixing call and phi refs
proc38: after fixing call and phi refs
proc38: before finding preserveds
proc38: after finding preserveds
proc38: before propagating statements
proc38: after propagating statements
proc38: before removing matching assigns (%pc).
proc38: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc38: before fixing call and phi refs
proc38: after fixing call and phi refs
proc38: before finding preserveds
proc38: after finding preserveds
proc38: after middle
proc38: before final
proc38: before adding implicit assigns
proc38: after adding implicit assigns
proc38: before dfa type analysis
WARNING: size 16 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc38 ###
proc38: before other uses of dfa type analysis
in proc proc38 adding addrExp r28{0} - 16 to local table
in proc proc38 adding addrExp r28{0} - 20 to local table
in proc proc38 adding addrExp r28{0} - 4 to local table
in proc proc38 adding addrExp r28{0} - 8 to local table
in proc proc38 adding addrExp r28{0} - 12 to local table
in proc proc38 adding addrExp r28{0} - 16 to local table
in proc proc38 adding addrExp r28{0} - 20 to local table
in proc proc38 adding addrExp r28{0} - 16 to local table
in proc proc38 adding addrExp r28{0} - 20 to local table
in proc proc38 adding addrExp r28{0} - 16 to local table
in proc proc38 adding addrExp r28{0} - 20 to local table
in proc proc38 adding addrExp r28{0} - 16 to local table
in proc proc38 adding addrExp r28{0} - 20 to local table
in proc proc38 adding addrExp r28{0} - 16 to local table
in proc proc38 adding addrExp r28{0} - 20 to local table
in proc proc38 adding addrExp r28{0} - 16 to local table
in proc proc38 adding addrExp r28{0} - 20 to local table
proc38: after dfa type analysis
proc38: before remUnusedStmtEtc
proc38: after remUnusedStmtEtc
proc38: before find final parameters.
finding final parameters for proc38
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r9
found new parameter r9
potential param r25
found new parameter r25
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r31
found new parameter r31
proc38: after find final parameters.
proc38: before updating arguments
proc38: after updating arguments
proc38: before branch analysis.
proc38: after branch analysis.
proc38: after final
proc27: before initialise
proc27: after initialise
proc27: before early
proc27: after early
proc27: before middle
proc27: before fixing call and phi refs
proc27: after fixing call and phi refs
proc27: before finding preserveds
proc27: after finding preserveds
proc27: before fixing call and phi refs
proc27: after fixing call and phi refs
proc27: before updating arguments
proc27: after updating arguments
proc27: before reversing strength reduction
proc27: after reversing strength reduction
proc27: before finding preserveds
proc27: after finding preserveds
proc27: before fixing call and phi refs
proc27: after fixing call and phi refs
proc27: before finding preserveds
proc27: after finding preserveds
proc27: before finding preserveds
proc27: after finding preserveds
proc27: before fixing call and phi refs
proc27: after fixing call and phi refs
proc27: before finding preserveds
proc27: after finding preserveds
proc27: before finding preserveds
proc27: after finding preserveds
proc27: before fixing call and phi refs
proc27: after fixing call and phi refs
proc27: before finding preserveds
proc27: after finding preserveds
proc27: before propagating statements
proc27: after propagating statements
proc27: before removing matching assigns (t[WILDSTR]).
proc27: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc27: before removing matching assigns (%pc).
proc27: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc27: before fixing call and phi refs
proc27: after fixing call and phi refs
proc27: before finding preserveds
proc27: after finding preserveds
proc27: after middle
proc27: before final
proc27: before adding implicit assigns
proc27: after adding implicit assigns
proc27: before dfa type analysis
WARNING: size 32 meet with unsigned char; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc27 ###
proc27: before other uses of dfa type analysis
in proc proc27 adding addrExp r28{0} - 8 to local table
in proc proc27 adding addrExp r28{0} - 12 to local table
in proc proc27 adding addrExp r28{0} - 16 to local table
in proc proc27 adding addrExp r28{0} - 4 to local table
in proc proc27 adding addrExp r28{0} - 8 to local table
in proc proc27 adding addrExp r28{0} - 12 to local table
in proc proc27 adding addrExp r28{0} - 16 to local table
in proc proc27 adding addrExp r28{0} - 8 to local table
in proc proc27 adding addrExp r28{0} - 12 to local table
in proc proc27 adding addrExp r28{0} - 16 to local table
proc27: after dfa type analysis
proc27: before remUnusedStmtEtc
proc27: after remUnusedStmtEtc
proc27: before find final parameters.
finding final parameters for proc27
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r31
found new parameter r31
potential param r27
found new parameter r27
potential param r30
found new parameter r30
proc27: after find final parameters.
proc27: before updating arguments
proc27: after updating arguments
proc27: before branch analysis.
proc27: after branch analysis.
proc27: after final
proc28: before initialise
proc28: after initialise
proc28: before early
proc28: after early
proc28: before middle
proc28: before fixing call and phi refs
proc28: after fixing call and phi refs
proc28: before finding preserveds
proc28: after finding preserveds
proc28: before fixing call and phi refs
proc28: after fixing call and phi refs
proc28: before updating arguments
proc28: after updating arguments
proc28: before reversing strength reduction
proc28: after reversing strength reduction
proc28: before finding preserveds
proc28: after finding preserveds
proc28: before fixing call and phi refs
proc28: after fixing call and phi refs
proc28: before finding preserveds
proc28: after finding preserveds
proc28: before finding preserveds
proc28: after finding preserveds
proc28: before fixing call and phi refs
proc28: after fixing call and phi refs
proc28: before finding preserveds
proc28: after finding preserveds
proc28: before finding preserveds
proc28: after finding preserveds
proc28: before fixing call and phi refs
proc28: after fixing call and phi refs
proc28: before finding preserveds
proc28: after finding preserveds
proc28: before propagating statements
proc28: after propagating statements
proc28: before removing stack pointer assigns.
proc28: after removing stack pointer assigns.
proc28: before removing matching assigns (%pc).
proc28: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc28: before fixing call and phi refs
proc28: after fixing call and phi refs
proc28: before finding preserveds
proc28: after finding preserveds
proc28: after middle
proc28: before final
proc28: before adding implicit assigns
proc28: after adding implicit assigns
proc28: before dfa type analysis
proc28: before other uses of dfa type analysis
proc28: after dfa type analysis
proc28: before remUnusedStmtEtc
proc28: after remUnusedStmtEtc
proc28: before find final parameters.
finding final parameters for proc28
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc28: after find final parameters.
proc28: before updating arguments
proc28: after updating arguments
proc28: before branch analysis.
proc28: after branch analysis.
proc28: after final
proc29: before initialise
proc29: after initialise
proc29: before early
proc29: after early
proc29: before middle
proc29: before fixing call and phi refs
proc29: after fixing call and phi refs
proc29: before finding preserveds
proc29: after finding preserveds
proc29: before fixing call and phi refs
proc29: after fixing call and phi refs
proc29: before updating arguments
proc29: after updating arguments
proc29: before reversing strength reduction
proc29: after reversing strength reduction
proc29: before finding preserveds
proc29: after finding preserveds
proc29: before fixing call and phi refs
proc29: after fixing call and phi refs
proc29: before finding preserveds
proc29: after finding preserveds
proc29: before finding preserveds
proc29: after finding preserveds
proc29: before fixing call and phi refs
proc29: after fixing call and phi refs
proc29: before finding preserveds
proc29: after finding preserveds
proc29: before finding preserveds
proc29: after finding preserveds
proc29: before fixing call and phi refs
proc29: after fixing call and phi refs
proc29: before finding preserveds
proc29: after finding preserveds
proc29: before propagating statements
proc29: after propagating statements
proc29: before removing stack pointer assigns.
proc29: after removing stack pointer assigns.
proc29: before removing matching assigns (%pc).
proc29: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc29: before fixing call and phi refs
proc29: after fixing call and phi refs
proc29: before finding preserveds
proc29: after finding preserveds
proc29: after middle
proc29: before final
proc29: before adding implicit assigns
proc29: after adding implicit assigns
proc29: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc29 ###
proc29: before other uses of dfa type analysis
proc29: after dfa type analysis
proc29: before remUnusedStmtEtc
proc29: after remUnusedStmtEtc
proc29: before find final parameters.
finding final parameters for proc29
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc29: after find final parameters.
proc29: before updating arguments
proc29: after updating arguments
proc29: before branch analysis.
proc29: after branch analysis.
proc29: after final
Unknown library function WideCharToMultiByte
proc30: before initialise
proc30: after initialise
proc30: before early
assgn   13 *32* tmp1 := m[0x40ab88]
assgn   39 *32* m[r28 - 4] := m[0x40a780]
assgn   50 *32* m[r28 - 4] := m[0x40ab98]
assgn   54 *32* %pc := m[0x407088]
is readonly
proc30: after early
proc30: before middle
proc30: before fixing call and phi refs
proc30: after fixing call and phi refs
proc30: before finding preserveds
proc30: after finding preserveds
proc30: before fixing call and phi refs
proc30: after fixing call and phi refs
proc30: before updating arguments
proc30: after updating arguments
proc30: before reversing strength reduction
proc30: after reversing strength reduction
proc30: before finding preserveds
proc30: after finding preserveds
proc30: before fixing call and phi refs
proc30: after fixing call and phi refs
proc30: before finding preserveds
proc30: after finding preserveds
proc30: before finding preserveds
proc30: after finding preserveds
proc30: before fixing call and phi refs
proc30: after fixing call and phi refs
proc30: before finding preserveds
proc30: after finding preserveds
proc30: before finding preserveds
proc30: after finding preserveds
proc30: before fixing call and phi refs
proc30: after fixing call and phi refs
proc30: before finding preserveds
proc30: after finding preserveds
proc30: before propagating statements
proc30: after propagating statements
proc30: before removing matching assigns (%pc).
proc30: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc30: before fixing call and phi refs
proc30: after fixing call and phi refs
proc30: before finding preserveds
proc30: after finding preserveds
proc30: after middle
proc30: before final
proc30: before adding implicit assigns
proc30: after adding implicit assigns
proc30: before dfa type analysis
WARNING: size 16 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 16!
integer size 32 meet with SizeType size 16!
WARNING: size 16 meet with /*signed?*/int; allowing temporarily
WARNING: size 16 meet with /*signed?*/int; allowing temporarily
WARNING: size 16 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc30 ###
proc30: before other uses of dfa type analysis
in proc proc30 adding addrExp r28{0} - 8 to local table
in proc proc30 adding addrExp r28{0} - 12 to local table
in proc proc30 adding addrExp r28{0} - 16 to local table
in proc proc30 adding addrExp r28{0} - 20 to local table
in proc proc30 adding addrExp r28{0} - 24 to local table
in proc proc30 adding addrExp r28{0} - 28 to local table
in proc proc30 adding addrExp r28{0} - 32 to local table
in proc proc30 adding addrExp r28{0} - 36 to local table
in proc proc30 adding addrExp r28{0} - 40 to local table
in proc proc30 adding addrExp r28{0} - 4 to local table
in proc proc30 adding addrExp r28{0} - 8 to local table
in proc proc30 adding addrExp r28{0} - 12 to local table
in proc proc30 adding addrExp r28{0} - 16 to local table
in proc proc30 adding addrExp r28{0} - 20 to local table
in proc proc30 adding addrExp r28{0} - 24 to local table
in proc proc30 adding addrExp r28{0} - 28 to local table
in proc proc30 adding addrExp r28{0} - 32 to local table
in proc proc30 adding addrExp r28{0} - 36 to local table
in proc proc30 adding addrExp r28{0} - 40 to local table
in proc proc30 adding addrExp r28{0} - 8 to local table
in proc proc30 adding addrExp r28{0} - 8 to local table
in proc proc30 adding addrExp r28{0} - 12 to local table
in proc proc30 adding addrExp r28{0} - 16 to local table
in proc proc30 adding addrExp r28{0} - 20 to local table
in proc proc30 adding addrExp r28{0} - 24 to local table
in proc proc30 adding addrExp r28{0} - 28 to local table
in proc proc30 adding addrExp r28{0} - 32 to local table
in proc proc30 adding addrExp r28{0} - 36 to local table
in proc proc30 adding addrExp r28{0} - 40 to local table
in proc proc30 adding addrExp r28{0} - 8 to local table
in proc proc30 adding addrExp r28{0} - 12 to local table
in proc proc30 adding addrExp r28{0} - 16 to local table
in proc proc30 adding addrExp r28{0} - 20 to local table
in proc proc30 adding addrExp r28{0} - 24 to local table
in proc proc30 adding addrExp r28{0} - 28 to local table
in proc proc30 adding addrExp r28{0} - 32 to local table
in proc proc30 adding addrExp r28{0} - 36 to local table
in proc proc30 adding addrExp r28{0} - 40 to local table
in proc proc30 adding addrExp r28{0} - 8 to local table
in proc proc30 adding addrExp r28{0} - 12 to local table
in proc proc30 adding addrExp r28{0} - 16 to local table
in proc proc30 adding addrExp r28{0} - 20 to local table
in proc proc30 adding addrExp r28{0} - 24 to local table
in proc proc30 adding addrExp r28{0} - 28 to local table
in proc proc30 adding addrExp r28{0} - 32 to local table
in proc proc30 adding addrExp r28{0} - 36 to local table
in proc proc30 adding addrExp r28{0} - 40 to local table
proc30: after dfa type analysis
proc30: before remUnusedStmtEtc
proc30: after remUnusedStmtEtc
proc30: before find final parameters.
finding final parameters for proc30
potential param r29
found new parameter r29
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r1
found new parameter r1
potential param r9
found new parameter r9
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
proc30: after find final parameters.
proc30: before updating arguments
proc30: after updating arguments
proc30: before branch analysis.
proc30: after branch analysis.
proc30: after final
proc31: before initialise
proc31: after initialise
proc31: before early
proc31: after early
proc31: before middle
proc31: before fixing call and phi refs
proc31: after fixing call and phi refs
proc31: before finding preserveds
proc31: after finding preserveds
proc31: before fixing call and phi refs
proc31: after fixing call and phi refs
proc31: before updating arguments
proc31: after updating arguments
proc31: before reversing strength reduction
proc31: after reversing strength reduction
proc31: before finding preserveds
proc31: after finding preserveds
proc31: before fixing call and phi refs
proc31: after fixing call and phi refs
proc31: before finding preserveds
proc31: after finding preserveds
proc31: before finding preserveds
proc31: after finding preserveds
proc31: before fixing call and phi refs
proc31: after fixing call and phi refs
proc31: before finding preserveds
proc31: after finding preserveds
proc31: before finding preserveds
proc31: after finding preserveds
proc31: before fixing call and phi refs
proc31: after fixing call and phi refs
proc31: before finding preserveds
proc31: after finding preserveds
proc31: before propagating statements
proc31: after propagating statements
proc31: before removing stack pointer assigns.
proc31: after removing stack pointer assigns.
proc31: before removing matching assigns (%pc).
proc31: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc31: before fixing call and phi refs
proc31: after fixing call and phi refs
proc31: before finding preserveds
proc31: after finding preserveds
proc31: after middle
proc31: before final
proc31: before adding implicit assigns
proc31: after adding implicit assigns
proc31: before dfa type analysis
proc31: before other uses of dfa type analysis
proc31: after dfa type analysis
proc31: before remUnusedStmtEtc
proc31: after remUnusedStmtEtc
proc31: before find final parameters.
finding final parameters for proc31
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc31: after find final parameters.
proc31: before updating arguments
proc31: after updating arguments
proc31: before branch analysis.
proc31: after branch analysis.
proc31: after final
proc40: before initialise
proc40: after initialise
proc40: before early
assgn    1 *32* r24 := m[0x40add8]
assgn    3 *32* r24 := m[0x40addc]
proc40: after early
proc40: before middle
proc40: before fixing call and phi refs
proc40: after fixing call and phi refs
proc40: before finding preserveds
proc40: after finding preserveds
proc40: before fixing call and phi refs
proc40: after fixing call and phi refs
proc40: before updating arguments
proc40: after updating arguments
proc40: before reversing strength reduction
proc40: after reversing strength reduction
proc40: before finding preserveds
proc40: after finding preserveds
proc40: before fixing call and phi refs
proc40: after fixing call and phi refs
proc40: before finding preserveds
proc40: after finding preserveds
proc40: before finding preserveds
proc40: after finding preserveds
proc40: before fixing call and phi refs
proc40: after fixing call and phi refs
proc40: before finding preserveds
proc40: after finding preserveds
proc40: before finding preserveds
proc40: after finding preserveds
proc40: before fixing call and phi refs
proc40: after fixing call and phi refs
proc40: before finding preserveds
proc40: after finding preserveds
proc40: before propagating statements
proc40: after propagating statements
proc40: before removing stack pointer assigns.
proc40: after removing stack pointer assigns.
proc40: before removing matching assigns (%pc).
proc40: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc40: before fixing call and phi refs
proc40: after fixing call and phi refs
proc40: before finding preserveds
proc40: after finding preserveds
proc40: after middle
proc40: before final
proc40: before adding implicit assigns
proc40: after adding implicit assigns
proc40: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc40 ###
proc40: before other uses of dfa type analysis
proc40: after dfa type analysis
proc40: before remUnusedStmtEtc
proc40: after remUnusedStmtEtc
proc40: before find final parameters.
finding final parameters for proc40
potential param r26
found new parameter r26
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc40: after find final parameters.
proc40: before updating arguments
proc40: after updating arguments
proc40: before branch analysis.
proc40: after branch analysis.
proc40: after final
COMPUTED JUMP at 0x403e75, pDest = m[(r26 * 4) + 0x403f88]
COMPUTED JUMP at 0x403ff7, pDest = m[(r26 * 4) + 0x404120]
COMPUTED JUMP at 0x403e8d, pDest = m[(r24 * 4) + 0x403ea0]
COMPUTED JUMP at 0x403e9c, pDest = m[(r25 * 4) + 0x403f1c]
COMPUTED JUMP at 0x40401d, pDest = m[(r24 * 4) + 0x404028]
COMPUTED JUMP at 0x404002, pDest = m[(r25 * 4) + 0x4040d0]
COMPUTED JUMP at 0x403e94, pDest = m[(r25 * 4) + 0x403f98]
COMPUTED JUMP at 0x404024, pDest = m[(r25 * 4) + 0x404120]
proc44: before initialise
proc44: after initialise
proc44: before early
proc44: after early
proc44: before middle
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
proc44: before finding preserveds
proc44: after finding preserveds (no return)
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
proc44: before updating arguments
proc44: after updating arguments
proc44: before reversing strength reduction
proc44: after reversing strength reduction
proc44: before finding preserveds
proc44: after finding preserveds (no return)
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
proc44: before finding preserveds
proc44: after finding preserveds (no return)
proc44: before finding preserveds
proc44: after finding preserveds (no return)
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
proc44: before finding preserveds
proc44: after finding preserveds (no return)
proc44: before finding preserveds
proc44: after finding preserveds (no return)
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
proc44: before finding preserveds
proc44: after finding preserveds (no return)
proc44: before propagating statements
proc44: after propagating statements
proc44: before removing stack pointer assigns.
proc44: after removing stack pointer assigns.
proc44: before removing matching assigns (t[WILDSTR]).
proc44: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
decodeIndirectJmp: 00403e75   39 CASE [m[((m[r28{-} + 12]{-} & 3) * 4) + 0x403f88]]
indirect jump matches form A
Could not find number of cases for n-way at address 0x403e75
decodeIndirectJmp: 00403e8d   51 CASE [m[((m[r28{-} + 4]{-} & 3) * 4) + 0x403ea0]]
indirect jump matches form A
Truncating type A indirect jump array to 0 entries due to finding an array entry pointing outside valid code 0xffffffff9000403f isn't in 0xffffffffffffffff .. 0x406070
Switch analysis failure at: 0x403e88decodeIndirectJmp: 00403e94   52 CASE [m[((m[r28{-} + 12]{-} - 4) * 4) + 0x403f98]]
indirect jump matches form A
Truncating type A indirect jump array to 0 entries due to finding an array entry pointing outside valid code 0x5e08458b isn't in 0xffffffffffffffff .. 0x406070
Switch analysis failure at: 0x403e94decodeIndirectJmp: 00403e9c   53 CASE [m[((m[r28{-} + 12]{-} / 4) * 4) + 0x403f1c]]
indirect jump matches form A
decodeIndirectJmp: 00403ff7   75 CASE [m[((m[r28{-} + 12]{-} & 3) * 4) + 0x404120]]
indirect jump matches form A
Could not find number of cases for n-way at address 0x403ff6
decodeIndirectJmp: 00404002   79 CASE [m[((0 - (m[r28{-} + 12]{-} / 4)) * 4) + 0x4040d0]]
indirect jump matches form A
Truncating type A indirect jump array to 1 entries due to finding an array entry pointing outside valid code 0x1c8e448b isn't in 0xffffffffffffffff .. 0x406070
decodeIndirectJmp: 0040401d   90 CASE [m[(r24{85} * 4) + 0x404028]]
indirect jump matches form A
Truncating type A indirect jump array to 0 entries due to finding an array entry pointing outside valid code 0xffffffff90004041 isn't in 0xffffffffffffffff .. 0x406070
Switch analysis failure at: 0x404018decodeIndirectJmp: 00404024   91 CASE [m[(m[r28{-} + 12]{-} * 4) + 0x404120]]
indirect jump matches form A
=== about to restart decompilation of proc44 because indirect jumps or calls have been analysed

proc44: before restarting decompilation because indirect jumps or calls have been analysed
Saving high level switch statement 00403e75   39 SWITCH(m[r28{-} + 12]{-} & 3)


Saving high level switch statement 00403e8d   51 CASE [m[((m[r28{-} + 4]{-} & 3) * 4) + 0x403ea0]]

Saving high level switch statement 00403e94   52 CASE [m[((m[r28{-} + 12]{-} - 4) * 4) + 0x403f98]]

Saving high level switch statement 00403e9c   53 SWITCH(m[r28{-} + 12]{-} / 4)


Saving high level switch statement 00403ff7   75 SWITCH(m[r28{-} + 12]{-} & 3)


Saving high level switch statement 00404002   79 SWITCH(0 - (m[r28{-} + 12]{-} / 4))


Saving high level switch statement 0040401d   90 CASE [m[((((m[r28{-} + 12]{-} + m[r28{-} + 4]{-}) - 4) & 3) * 4) + 0x404028]]

Saving high level switch statement 00404024   91 SWITCH(m[r28{-} + 12]{-})


processing switch statement type A with table at 0x0x403f88, 3 entries, lo= 0, hi= 2
proc44: before decoding fragment 1 of 3 (403f98)
processing switch statement type A with table at 0x0x404120, 3 entries, lo= 0, hi= 2
proc44: before decoding fragment 1 of 3 (404130)
COMPUTED JUMP at 0x403e8d, pDest = m[((m[r28{-} + 4]{-} & 3) * 4) + 0x403ea0]
processing switch statement type A with table at 0x0x403f1c, 8 entries, lo= 0, hi= 7
proc44: before decoding fragment 1 of 8 (403f7f)
COMPUTED JUMP at 0x40401d, pDest = m[((((m[r28{-} + 12]{-} + m[r28{-} + 4]{-}) - 4) & 3) * 4) + 0x404028]
processing switch statement type A with table at 0x0x4040d0, 1 entries, lo= 0, hi= 0
proc44: before decoding fragment 1 of 1 (404117)
COMPUTED JUMP at 0x403e94, pDest = m[((m[r28{-} + 12]{-} - 4) * 4) + 0x403f98]
COMPUTED JUMP at 0x403f7f, pDest = m[(r26 * 4) + 0x403f88]
processing switch statement type A with table at 0x0x404120, 4 entries, lo= 0, hi= 3
proc44: before decoding fragment 1 of 4 (404130)
COMPUTED JUMP at 0x404117, pDest = m[(r26 * 4) + 0x404120]
proc44: before decoding fragment 2 of 4 (404138)
proc44: before decoding fragment 3 of 4 (404148)
proc44: before decoding fragment 4 of 4 (40415c)
proc44: before decoding fragment 2 of 8 (403f6c)
proc44: before decoding fragment 3 of 8 (403f64)
proc44: before decoding fragment 4 of 8 (403f5c)
proc44: before decoding fragment 5 of 8 (403f54)
proc44: before decoding fragment 6 of 8 (403f4c)
proc44: before decoding fragment 7 of 8 (403f44)
proc44: before decoding fragment 8 of 8 (403f3c)
proc44: before decoding fragment 2 of 3 (404138)
proc44: before decoding fragment 3 of 3 (404148)
proc44: before decoding fragment 2 of 3 (403fa0)
proc44: before decoding fragment 3 of 3 (403fac)
proc44: before initialise
proc44: after initialise
proc44: before early
proc44: after early
proc44: before middle
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
proc44: before finding preserveds
proc44: after finding preserveds
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
proc44: before updating arguments
proc44: after updating arguments
proc44: before reversing strength reduction
proc44: after reversing strength reduction
proc44: before finding preserveds
proc44: after finding preserveds
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
proc44: before finding preserveds
proc44: after finding preserveds
proc44: before finding preserveds
proc44: after finding preserveds
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
proc44: before finding preserveds
proc44: after finding preserveds
proc44: before finding preserveds
proc44: after finding preserveds
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
proc44: before finding preserveds
proc44: after finding preserveds
proc44: before propagating statements
proc44: after propagating statements
proc44: before removing stack pointer assigns.
proc44: after removing stack pointer assigns.
proc44: before removing matching assigns (t[WILDSTR]).
proc44: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc44: before removing matching assigns (%pc).
proc44: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
decodeIndirectJmp: 00403e8d   51 CASE [m[((m[r28{-} + 4]{-} & 3) * 4) + 0x403ea0]]
indirect jump matches form A
Truncating type A indirect jump array to 0 entries due to finding an array entry pointing outside valid code 0xffffffff9000403f isn't in 0xffffffffffffffff .. 0x406070
Switch analysis failure at: 0x403e88decodeIndirectJmp: 00403e94   52 CASE [m[((m[r28{-} + 12]{-} - 4) * 4) + 0x403f98]]
indirect jump matches form A
Truncating type A indirect jump array to 0 entries due to finding an array entry pointing outside valid code 0x5e08458b isn't in 0xffffffffffffffff .. 0x406070
Switch analysis failure at: 0x403e94decodeIndirectJmp: 00403f7f   79 CASE [m[((m[r28{-} + 12]{-} & 3) * 4) + 0x403f88]]
indirect jump matches form A
Could not find number of cases for n-way at address 0x403f7f
decodeIndirectJmp: 0040401d   90 CASE [m[((((m[r28{-} + 12]{-} + m[r28{-} + 4]{-}) - 4) & 3) * 4) + 0x404028]]
indirect jump matches form A
Truncating type A indirect jump array to 0 entries due to finding an array entry pointing outside valid code 0xffffffff90004041 isn't in 0xffffffffffffffff .. 0x406070
Switch analysis failure at: 0x404018decodeIndirectJmp: 00404117  154 CASE [m[((m[r28{-} + 12]{-} & 3) * 4) + 0x404120]]
indirect jump matches form A
Could not find number of cases for n-way at address 0x404117
=== about to restart decompilation of proc44 because indirect jumps or calls have been analysed

proc44: before restarting decompilation because indirect jumps or calls have been analysed
Saving high level switch statement 00403e75   39 SWITCH(m[r28{-} + 12]{-} & 3)


Saving high level switch statement 00403e8d   51 CASE [m[((m[r28{-} + 4]{-} & 3) * 4) + 0x403ea0]]

Saving high level switch statement 00403e94   52 CASE [m[((m[r28{-} + 12]{-} - 4) * 4) + 0x403f98]]

Saving high level switch statement 00403e9c   53 SWITCH(m[r28{-} + 12]{-} / 4)


Saving high level switch statement 00403f7f   79 SWITCH(m[r28{-} + 12]{-} & 3)


Saving high level switch statement 00403ff7   75 SWITCH(m[r28{-} + 12]{-} & 3)


Saving high level switch statement 00404002   79 SWITCH(0 - (m[r28{-} + 12]{-} / 4))


Saving high level switch statement 0040401d   90 CASE [m[((((m[r28{-} + 12]{-} + m[r28{-} + 4]{-}) - 4) & 3) * 4) + 0x404028]]

Saving high level switch statement 00404024   91 SWITCH(m[r28{-} + 12]{-})


Saving high level switch statement 00404117  154 SWITCH(m[r28{-} + 12]{-} & 3)


processing switch statement type A with table at 0x0x403f88, 3 entries, lo= 0, hi= 2
proc44: before decoding fragment 1 of 3 (403f98)
processing switch statement type A with table at 0x0x404120, 3 entries, lo= 0, hi= 2
proc44: before decoding fragment 1 of 3 (404130)
COMPUTED JUMP at 0x403e8d, pDest = m[((m[r28{-} + 4]{-} & 3) * 4) + 0x403ea0]
processing switch statement type A with table at 0x0x403f1c, 8 entries, lo= 0, hi= 7
proc44: before decoding fragment 1 of 8 (403f7f)
COMPUTED JUMP at 0x40401d, pDest = m[((((m[r28{-} + 12]{-} + m[r28{-} + 4]{-}) - 4) & 3) * 4) + 0x404028]
processing switch statement type A with table at 0x0x4040d0, 1 entries, lo= 0, hi= 0
proc44: before decoding fragment 1 of 1 (404117)
COMPUTED JUMP at 0x403e94, pDest = m[((m[r28{-} + 12]{-} - 4) * 4) + 0x403f98]
processing switch statement type A with table at 0x0x403f88, 3 entries, lo= 0, hi= 2
proc44: before decoding fragment 1 of 3 (403f98)
processing switch statement type A with table at 0x0x404120, 4 entries, lo= 0, hi= 3
proc44: before decoding fragment 1 of 4 (404130)
processing switch statement type A with table at 0x0x404120, 3 entries, lo= 0, hi= 2
proc44: before decoding fragment 1 of 3 (404130)
proc44: before decoding fragment 2 of 3 (404138)
proc44: before decoding fragment 3 of 3 (404148)
proc44: before decoding fragment 2 of 4 (404138)
proc44: before decoding fragment 3 of 4 (404148)
proc44: before decoding fragment 4 of 4 (40415c)
proc44: before decoding fragment 2 of 3 (403fa0)
proc44: before decoding fragment 3 of 3 (403fac)
proc44: before decoding fragment 2 of 8 (403f6c)
proc44: before decoding fragment 3 of 8 (403f64)
proc44: before decoding fragment 4 of 8 (403f5c)
proc44: before decoding fragment 5 of 8 (403f54)
proc44: before decoding fragment 6 of 8 (403f4c)
proc44: before decoding fragment 7 of 8 (403f44)
proc44: before decoding fragment 8 of 8 (403f3c)
proc44: before decoding fragment 2 of 3 (404138)
proc44: before decoding fragment 3 of 3 (404148)
proc44: before decoding fragment 2 of 3 (403fa0)
proc44: before decoding fragment 3 of 3 (403fac)
proc44: before initialise
proc44: after initialise
proc44: before early
proc44: after early
proc44: before middle
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
proc44: before finding preserveds
proc44: after finding preserveds
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
proc44: before updating arguments
proc44: after updating arguments
proc44: before reversing strength reduction
proc44: after reversing strength reduction
proc44: before finding preserveds
proc44: after finding preserveds
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
proc44: before finding preserveds
proc44: after finding preserveds
proc44: before finding preserveds
proc44: after finding preserveds
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
proc44: before finding preserveds
proc44: after finding preserveds
proc44: before finding preserveds
proc44: after finding preserveds
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
proc44: before finding preserveds
proc44: after finding preserveds
proc44: before propagating statements
proc44: after propagating statements
proc44: before removing stack pointer assigns.
proc44: after removing stack pointer assigns.
proc44: before removing matching assigns (t[WILDSTR]).
proc44: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc44: before removing matching assigns (%pc).
proc44: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc44: before fixing call and phi refs
proc44: after fixing call and phi refs
decodeIndirectJmp: 00403e8d   51 CASE [m[((m[r28{-} + 4]{-} & 3) * 4) + 0x403ea0]]
indirect jump matches form A
Truncating type A indirect jump array to 0 entries due to finding an array entry pointing outside valid code 0xffffffff9000403f isn't in 0xffffffffffffffff .. 0x406070
Switch analysis failure at: 0x403e88decodeIndirectJmp: 00403e94   52 CASE [m[((m[r28{-} + 12]{-} - 4) * 4) + 0x403f98]]
indirect jump matches form A
Truncating type A indirect jump array to 0 entries due to finding an array entry pointing outside valid code 0x5e08458b isn't in 0xffffffffffffffff .. 0x406070
Switch analysis failure at: 0x403e94decodeIndirectJmp: 0040401d   90 CASE [m[((((m[r28{-} + 12]{-} + m[r28{-} + 4]{-}) - 4) & 3) * 4) + 0x404028]]
indirect jump matches form A
Truncating type A indirect jump array to 0 entries due to finding an array entry pointing outside valid code 0xffffffff90004041 isn't in 0xffffffffffffffff .. 0x406070
Switch analysis failure at: 0x404018proc44: before finding preserveds
proc44: after finding preserveds
proc44: after middle
proc44: before final
proc44: before adding implicit assigns
proc44: after adding implicit assigns
proc44: before dfa type analysis
size 32 meet with size 8!
WARNING: size 32 meet with unsigned char; allowing temporarily
size 32 meet with size 8!
WARNING: size 32 meet with unsigned char; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc44 ###
proc44: before other uses of dfa type analysis
in proc proc44 adding addrExp r28{0} - 4 to local table
in proc proc44 adding addrExp r28{0} - 8 to local table
in proc proc44 adding addrExp r28{0} - 12 to local table
proc44: after dfa type analysis
proc44: before remUnusedStmtEtc
proc44: after remUnusedStmtEtc
proc44: before find final parameters.
finding final parameters for proc44
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc44: after find final parameters.
proc44: before updating arguments
proc44: after updating arguments
proc44: before branch analysis.
proc44: after branch analysis.
proc44: after final
proc44: before final
proc44: before remUnusedStmtEtc
proc44: after remUnusedStmtEtc
proc44: before find final parameters.
finding final parameters for proc44
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc44: after find final parameters.
proc44: before updating arguments
proc44: after updating arguments
proc44: before branch analysis.
proc44: after branch analysis.
proc44: after final
proc44: before final
proc44: before remUnusedStmtEtc
proc44: after remUnusedStmtEtc
proc44: before find final parameters.
finding final parameters for proc44
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc44: after find final parameters.
proc44: before updating arguments
proc44: after updating arguments
proc44: before branch analysis.
proc44: after branch analysis.
proc44: after final
proc41: before initialise
proc41: after initialise
proc41: before early
assgn  354 *32* r24 := m[0x40add4]
assgn  358 *32* r25 := m[0x40adcc]
assgn  360 *32* r30 := m[0x4070b0]
is readonly
assgn  380 *32* r25 := m[0x40adcc]
assgn  382 *32* r24 := m[0x40add4]
assgn  391 *32* r24 := m[0x40add4]
assgn  392 *32* r25 := m[0x40adcc]
assgn  397 *32* r24 := m[0x40add4]
assgn  402 *32* r24 := m[0x40add4]
assgn  410 *32* r24 := m[0x40add4]
assgn  424 *32* r24 := m[0x40add4]
assgn  429 *32* m[r28 - 4] := m[0x40ade4]
assgn  433 *32* %pc := m[0x407068]
is readonly
assgn  435 *32* r24 := m[0x40add8]
assgn  436 *32* r26 := m[0x40addc]
assgn  444 *32* r24 := m[0x40add4]
assgn  467 *32* tmp1 := m[0x40add8]
assgn  476 *32* r24 := m[0x40addc]
proc41: after early
proc41: before middle
proc41: before fixing call and phi refs
proc41: after fixing call and phi refs
proc41: before finding preserveds
proc41: after finding preserveds
proc41: before fixing call and phi refs
proc41: after fixing call and phi refs
proc41: before updating arguments
proc41: after updating arguments
proc41: before reversing strength reduction
proc41: after reversing strength reduction
proc41: before finding preserveds
proc41: after finding preserveds
proc41: before fixing call and phi refs
proc41: after fixing call and phi refs
proc41: before finding preserveds
proc41: after finding preserveds
proc41: before finding preserveds
proc41: after finding preserveds
proc41: before fixing call and phi refs
proc41: after fixing call and phi refs
proc41: before finding preserveds
proc41: after finding preserveds
proc41: before finding preserveds
proc41: after finding preserveds
proc41: before fixing call and phi refs
proc41: after fixing call and phi refs
proc41: before finding preserveds
proc41: after finding preserveds
proc41: before propagating statements
proc41: after propagating statements
proc41: before removing matching assigns (%pc).
proc41: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc41: before fixing call and phi refs
proc41: after fixing call and phi refs
decodeIndirectJmp: COMPCALL:
00403167  376 *32* r28 := r28{-} - 48
          377 *32* m[r28{-} - 48] := %pc
          379 {*32* r30, *32* r27, *32* r28, *32* r29, *32* r31} := CALL 0x79cc(<all>)
              Reaching definitions: r9=truncu(32,8,r25{366}),   r10=r10{576},   r24=r24{354},   r25=r25{366},
                r26=r26{579},   r27=0x8000,   r28=(r28{-} - 32) - 16,   r29=r28{-} - 4,   r30=0x79cc,
                r31=r31{22} / 0x8000,   m[r28{-} + 8]=m[r28{-} + 8]{628},   m[r28{-} + 11]=m[r28{-} + 11]{631},
                m[r28{-} - 4]=r29{-},   m[r28{-} - 8]=m[r28{-} - 8]{629},   m[r28{-} - 12]=r26{49},
                m[r28{-} - 16]=r26{49} & 1,   m[r28{-} - 20]=r25{32},   m[r28{-} - 24]=r27{-},   m[r28{-} - 28]=r30{-},
                m[r28{-} - 32]=r31{-},   m[r28{-} - 36]=0x4000,   m[r28{-} - 40]=0x8000,   m[r28{-} - 44]=r25{366},
                m[r28{-} - 48]=%pc,   tmp1=r25{358} * 0x8000,   tmpb=tmpb{582},
                %flags=ADDFLAGS32( r25{358} * 0x8000, m[r24{354} + 12], r25{366} ),
                %ZF=ADDFLAGS32( r25{358} * 0x8000, m[r24{354} + 12], r25{366} ),
                %CF=ADDFLAGS32( r25{358} * 0x8000, m[r24{354} + 12], r25{366} )
              Live variables: 

decodeIndirect: propagated and const global converted call expression is 0x79cc
decodeIndirectJmp: COMPCALL:
004031c2  420 *32* r28 := r28{379} - 16
          421 *32* m[r28{379} - 16] := %pc
          423 {*32* r30, *32* r27, *32* r28, *32* r29, *32* r31} := CALL r30{379}(<all>)
              Reaching definitions: r9=truncu(32,8,r25{403}),   r10=truncu(32,8,0x80000000 >> r25{380}),   r24=r24{586}
                r25=r25{403},   r26=0x80000000 >> r25{380},   r27=r27{379},   r28=r28{379} - 16,   r29=r29{379},
                r30=r30{379},   r31=r31{379},   m[r28{-} + 8]=m[r28{-} + 8]{379},   m[r28{-} + 11]=m[r28{-} + 11]{379},
                m[r28{-} - 4]=m[r28{-} - 4]{379},   m[r28{-} - 8]=m[r28{-} - 8]{379},
                m[r28{-} - 12]=m[r28{-} - 12]{379},   m[r28{-} - 16]=m[r28{-} - 16]{379},
                m[r28{-} - 20]=m[r28{-} - 20]{379},   m[r28{-} - 24]=m[r28{-} - 24]{379},
                m[r28{-} - 28]=m[r28{-} - 28]{379},   m[r28{-} - 32]=m[r28{-} - 32]{379},
                m[r28{-} - 36]=m[r28{-} - 36]{379},   m[r28{-} - 40]=m[r28{-} - 40]{379},
                m[r28{-} - 44]=m[r28{-} - 44]{379},   m[r28{-} - 48]=m[r28{-} - 48]{379},   <all>=<all>{379},
                tmp1=tmp1{411},   tmpb=tmpb{405},   %flags=SUBFLAGS32( m[r24{586} + 8], -1, tmp1{411} ),
                %ZF=tmp1{411} = 0,   %CF=m[r24{586} + 8] <u -1
              Live variables: 

decodeIndirect: propagated and const global converted call expression is r30{379}
proc41: before finding preserveds
proc41: after finding preserveds
proc41: after middle
proc41: before final
proc41: before adding implicit assigns
proc41: after adding implicit assigns
proc41: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc41 ###
proc41: before other uses of dfa type analysis
in proc proc41 adding addrExp r28{0} - 36 to local table
in proc proc41 adding addrExp r28{0} - 40 to local table
in proc proc41 adding addrExp r28{0} - 44 to local table
in proc proc41 adding addrExp r28{0} - 48 to local table
in proc proc41 adding addrExp r28{0} - 12 to local table
in proc proc41 adding addrExp r28{0} - 16 to local table
in proc proc41 adding addrExp r28{0} - 4 to local table
in proc proc41 adding addrExp r28{0} - 24 to local table
in proc proc41 adding addrExp r28{0} - 28 to local table
in proc proc41 adding addrExp r28{0} - 32 to local table
in proc proc41 adding addrExp r28{0} - 20 to local table
in proc proc41 adding addrExp r28{0} - 8 to local table
in proc proc41 adding addrExp r28{0} - 16 to local table
in proc proc41 adding addrExp r28{0} - 12 to local table
in proc proc41 adding addrExp r28{0} - 36 to local table
in proc proc41 adding addrExp r28{0} - 36 to local table
in proc proc41 adding addrExp r28{0} - 8 to local table
in proc proc41 adding addrExp r28{0} - 8 to local table
in proc proc41 adding addrExp r28{0} - 36 to local table
in proc proc41 adding addrExp r28{0} - 36 to local table
in proc proc41 adding addrExp r28{0} - 36 to local table
in proc proc41 adding addrExp r28{0} - 16 to local table
in proc proc41 adding addrExp r28{0} - 36 to local table
in proc proc41 adding addrExp r28{0} - 8 to local table
in proc proc41 adding addrExp r28{0} - 8 to local table
in proc proc41 adding addrExp r28{0} - 36 to local table
in proc proc41 adding addrExp r28{0} - 36 to local table
in proc proc41 adding addrExp r28{0} - 40 to local table
in proc proc41 adding addrExp r28{0} - 44 to local table
in proc proc41 adding addrExp r28{0} - 48 to local table
in proc proc41 adding addrExp r28{0} - 4 to local table
in proc proc41 adding addrExp r28{0} - 8 to local table
in proc proc41 adding addrExp r28{0} - 12 to local table
in proc proc41 adding addrExp r28{0} - 16 to local table
in proc proc41 adding addrExp r28{0} - 20 to local table
in proc proc41 adding addrExp r28{0} - 24 to local table
in proc proc41 adding addrExp r28{0} - 28 to local table
in proc proc41 adding addrExp r28{0} - 32 to local table
in proc proc41 adding addrExp r28{0} - 36 to local table
in proc proc41 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffd8 is not structure or array type
in proc proc41 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffd4 is not structure or array type
in proc proc41 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffd0 is not structure or array type
in proc proc41 adding addrExp r28{0} - 4 to local table
in proc proc41 adding addrExp r28{0} - 8 to local table
in proc proc41 adding addrExp r28{0} - 12 to local table
in proc proc41 adding addrExp r28{0} - 16 to local table
in proc proc41 adding addrExp r28{0} - 20 to local table
in proc proc41 adding addrExp r28{0} - 24 to local table
in proc proc41 adding addrExp r28{0} - 28 to local table
in proc proc41 adding addrExp r28{0} - 32 to local table
in proc proc41 adding addrExp r28{0} - 36 to local table
in proc proc41 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffd8 is not structure or array type
in proc proc41 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffd4 is not structure or array type
in proc proc41 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffd0 is not structure or array type
proc41: after dfa type analysis
proc41: before remUnusedStmtEtc
proc41: after remUnusedStmtEtc
proc41: before find final parameters.
finding final parameters for proc41
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r10
found new parameter r10
potential param r26
found new parameter r26
proc41: after find final parameters.
proc41: before updating arguments
proc41: after updating arguments
proc41: before branch analysis.
proc41: after branch analysis.
proc41: after final
proc42: before initialise
proc42: after initialise
proc42: before early
proc42: after early
proc42: before middle
proc42: before fixing call and phi refs
proc42: after fixing call and phi refs
proc42: before finding preserveds
proc42: after finding preserveds
proc42: before fixing call and phi refs
proc42: after fixing call and phi refs
proc42: before updating arguments
proc42: after updating arguments
proc42: before reversing strength reduction
proc42: after reversing strength reduction
proc42: before finding preserveds
proc42: after finding preserveds
proc42: before fixing call and phi refs
proc42: after fixing call and phi refs
proc42: before finding preserveds
proc42: after finding preserveds
proc42: before finding preserveds
proc42: after finding preserveds
proc42: before fixing call and phi refs
proc42: after fixing call and phi refs
proc42: before finding preserveds
proc42: after finding preserveds
proc42: before finding preserveds
proc42: after finding preserveds
proc42: before fixing call and phi refs
proc42: after fixing call and phi refs
proc42: before finding preserveds
proc42: after finding preserveds
proc42: before propagating statements
proc42: after propagating statements
proc42: before removing stack pointer assigns.
proc42: after removing stack pointer assigns.
proc42: before removing matching assigns (%pc).
proc42: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc42: before fixing call and phi refs
proc42: after fixing call and phi refs
proc42: before finding preserveds
proc42: after finding preserveds
proc42: after middle
proc42: before final
proc42: before adding implicit assigns
proc42: after adding implicit assigns
proc42: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc42 ###
proc42: before other uses of dfa type analysis
in proc proc42 adding addrExp r28{0} - 4 to local table
proc42: after dfa type analysis
proc42: before remUnusedStmtEtc
proc42: after remUnusedStmtEtc
proc42: before find final parameters.
finding final parameters for proc42
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
proc42: after find final parameters.
proc42: before updating arguments
proc42: after updating arguments
proc42: before branch analysis.
proc42: after branch analysis.
proc42: after final
proc46: before initialise
proc46: after initialise
proc46: before early
assgn   12 *32* %pc := m[0x4070b0]
is readonly
assgn   32 *32* m[r28 - 4] := m[0x40ade4]
assgn   36 *32* %pc := m[0x407068]
is readonly
proc46: after early
proc46: before middle
proc46: before fixing call and phi refs
proc46: after fixing call and phi refs
proc46: before finding preserveds
proc46: after finding preserveds
proc46: before fixing call and phi refs
proc46: after fixing call and phi refs
proc46: before updating arguments
proc46: after updating arguments
proc46: before reversing strength reduction
proc46: after reversing strength reduction
proc46: before finding preserveds
proc46: after finding preserveds
proc46: before fixing call and phi refs
proc46: after fixing call and phi refs
proc46: before finding preserveds
proc46: after finding preserveds
proc46: before finding preserveds
proc46: after finding preserveds
proc46: before fixing call and phi refs
proc46: after fixing call and phi refs
proc46: before finding preserveds
proc46: after finding preserveds
proc46: before finding preserveds
proc46: after finding preserveds
proc46: before fixing call and phi refs
proc46: after fixing call and phi refs
proc46: before finding preserveds
proc46: after finding preserveds
proc46: before propagating statements
proc46: after propagating statements
proc46: before removing stack pointer assigns.
proc46: after removing stack pointer assigns.
proc46: before removing matching assigns (%pc).
proc46: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc46: before fixing call and phi refs
proc46: after fixing call and phi refs
proc46: before finding preserveds
proc46: after finding preserveds
proc46: after middle
proc46: before final
proc46: before adding implicit assigns
proc46: after adding implicit assigns
proc46: before dfa type analysis
proc46: before other uses of dfa type analysis
in proc proc46 adding addrExp r28{0} - 4 to local table
in proc proc46 adding addrExp r28{0} - 8 to local table
in proc proc46 adding addrExp r28{0} - 12 to local table
in proc proc46 adding addrExp r28{0} - 16 to local table
in proc proc46 adding addrExp r28{0} - 20 to local table
in proc proc46 adding addrExp r28{0} - 8 to local table
in proc proc46 adding addrExp r28{0} - 12 to local table
in proc proc46 adding addrExp r28{0} - 16 to local table
in proc proc46 adding addrExp r28{0} - 20 to local table
in proc proc46 adding addrExp r28{0} - 8 to local table
in proc proc46 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffffffffffff4 is not structure or array type
in proc proc46 adding addrExp r28{0} - 16 to local table
in proc proc46 adding addrExp r28{0} - 20 to local table
proc46: after dfa type analysis
proc46: before remUnusedStmtEtc
proc46: after remUnusedStmtEtc
proc46: before find final parameters.
finding final parameters for proc46
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc46: after find final parameters.
proc46: before updating arguments
proc46: after updating arguments
proc46: before branch analysis.
proc46: after branch analysis.
proc46: after final
proc45: before initialise
proc45: after initialise
proc45: before early
assgn   10 *32* r30 := m[0x40842c]
assgn   35 *32* %pc := m[0x4070b0]
is readonly
assgn   42 *32* tmp1 := m[0x40ab4c]
proc45: after early
proc45: before middle
proc45: before fixing call and phi refs
proc45: after fixing call and phi refs
proc45: before finding preserveds
proc45: after finding preserveds
proc45: before fixing call and phi refs
proc45: after fixing call and phi refs
proc45: before updating arguments
proc45: after updating arguments
proc45: before reversing strength reduction
proc45: after reversing strength reduction
proc45: before finding preserveds
proc45: after finding preserveds
proc45: before fixing call and phi refs
proc45: after fixing call and phi refs
proc45: before finding preserveds
proc45: after finding preserveds
proc45: before finding preserveds
proc45: after finding preserveds
proc45: before fixing call and phi refs
proc45: after fixing call and phi refs
proc45: before finding preserveds
proc45: after finding preserveds
proc45: before finding preserveds
proc45: after finding preserveds
proc45: before fixing call and phi refs
proc45: after fixing call and phi refs
proc45: before finding preserveds
proc45: after finding preserveds
proc45: before propagating statements
proc45: after propagating statements
proc45: before removing stack pointer assigns.
proc45: after removing stack pointer assigns.
proc45: before removing matching assigns (%pc).
proc45: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc45: before finding preserveds
proc45: after finding preserveds
proc45: before fixing call and phi refs
proc45: after fixing call and phi refs
proc45: before finding preserveds
proc45: after finding preserveds
proc45: before finding preserveds
proc45: after finding preserveds
proc45: before fixing call and phi refs
proc45: after fixing call and phi refs
proc45: before finding preserveds
proc45: after finding preserveds
proc45: before finding preserveds
proc45: after finding preserveds
proc45: before fixing call and phi refs
proc45: after fixing call and phi refs
proc45: before finding preserveds
proc45: after finding preserveds
proc45: before propagating statements
proc45: after propagating statements
proc45: before fixing call and phi refs
proc45: after fixing call and phi refs
proc45: before finding preserveds
proc45: after finding preserveds
proc45: after middle
proc45: before final
proc45: before adding implicit assigns
proc45: after adding implicit assigns
proc45: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc45 ###
proc45: before other uses of dfa type analysis
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 28 to local table
in proc proc45 adding addrExp r28{0} - 32 to local table
in proc proc45 adding addrExp r28{0} - 36 to local table
in proc proc45 adding addrExp r28{0} - 4 to local table
in proc proc45 adding addrExp r28{0} - 8 to local table
in proc proc45 adding addrExp r28{0} - 12 to local table
in proc proc45 adding addrExp r28{0} - 16 to local table
in proc proc45 adding addrExp r28{0} - 20 to local table
in proc proc45 adding addrExp r28{0} - 8 to local table
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 28 to local table
in proc proc45 adding addrExp r28{0} - 32 to local table
in proc proc45 adding addrExp r28{0} - 36 to local table
in proc proc45 adding addrExp r28{0} - 8 to local table
in proc proc45 adding addrExp r28{0} - 8 to local table
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 28 to local table
in proc proc45 adding addrExp r28{0} - 32 to local table
in proc proc45 adding addrExp r28{0} - 36 to local table
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 28 to local table
in proc proc45 adding addrExp r28{0} - 32 to local table
in proc proc45 adding addrExp r28{0} - 36 to local table
in proc proc45 adding addrExp r28{0} - 8 to local table
in proc proc45 adding addrExp r28{0} - 8 to local table
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 28 to local table
in proc proc45 adding addrExp r28{0} - 32 to local table
in proc proc45 adding addrExp r28{0} - 36 to local table
in proc proc45 adding addrExp r28{0} - 8 to local table
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 28 to local table
in proc proc45 adding addrExp r28{0} - 32 to local table
in proc proc45 adding addrExp r28{0} - 36 to local table
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 28 to local table
in proc proc45 adding addrExp r28{0} - 8 to local table
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 28 to local table
in proc proc45 adding addrExp r28{0} - 32 to local table
in proc proc45 adding addrExp r28{0} - 36 to local table
proc45: after dfa type analysis
proc45: before remUnusedStmtEtc
proc45: after remUnusedStmtEtc
proc45: before find final parameters.
finding final parameters for proc45
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
proc45: after find final parameters.
proc45: before updating arguments
proc45: after updating arguments
proc45: before branch analysis.
proc45: after branch analysis.
proc45: after final
proc43: before initialise
proc43: after initialise
proc43: before early
assgn   21 *32* tmp1 := m[0x40ab4c]
proc43: after early
proc43: before middle
proc43: before fixing call and phi refs
proc43: after fixing call and phi refs
proc43: before finding preserveds
proc43: after finding preserveds
proc43: before fixing call and phi refs
proc43: after fixing call and phi refs
proc43: before updating arguments
proc43: after updating arguments
proc43: before reversing strength reduction
proc43: after reversing strength reduction
proc43: before finding preserveds
proc43: after finding preserveds
proc43: before fixing call and phi refs
proc43: after fixing call and phi refs
proc43: before finding preserveds
proc43: after finding preserveds
proc43: before finding preserveds
proc43: after finding preserveds
proc43: before fixing call and phi refs
proc43: after fixing call and phi refs
proc43: before finding preserveds
proc43: after finding preserveds
proc43: before finding preserveds
proc43: after finding preserveds
proc43: before fixing call and phi refs
proc43: after fixing call and phi refs
proc43: before finding preserveds
proc43: after finding preserveds
proc43: before propagating statements
proc43: after propagating statements
proc43: before removing stack pointer assigns.
proc43: after removing stack pointer assigns.
proc43: before removing matching assigns (%pc).
proc43: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc43: before fixing call and phi refs
proc43: after fixing call and phi refs
proc43: before finding preserveds
proc43: after finding preserveds
proc43: after middle
proc43: before final
proc43: before adding implicit assigns
proc43: after adding implicit assigns
proc43: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc43 ###
proc43: before other uses of dfa type analysis
in proc proc43 adding addrExp r28{0} - 44 to local table
in proc proc43 adding addrExp r28{0} - 40 to local table
in proc proc43 adding addrExp r28{0} - 36 to local table
in proc proc43 adding addrExp r28{0} - 32 to local table
in proc proc43 adding addrExp r28{0} - 4 to local table
in proc proc43 adding addrExp r28{0} - 8 to local table
in proc proc43 adding addrExp r28{0} - 4 to local table
in proc proc43 adding addrExp r28{0} - 8 to local table
in proc proc43 adding addrExp r28{0} - 4 to local table
in proc proc43 adding addrExp r28{0} - 8 to local table
proc43: after dfa type analysis
proc43: before remUnusedStmtEtc
proc43: after remUnusedStmtEtc
proc43: before find final parameters.
finding final parameters for proc43
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param r27
found new parameter r27
potential param r31
found new parameter r31
proc43: after find final parameters.
proc43: before updating arguments
proc43: after updating arguments
proc43: before branch analysis.
proc43: after branch analysis.
proc43: after final
proc33: before initialise
proc33: after initialise
proc33: before early
assgn   12 *32* r24 := m[0x40ade8]
assgn   79 *32* m[r28 - 4] := m[0x40ade4]
assgn   83 *32* %pc := m[0x407068]
is readonly
proc33: after early
proc33: before middle
proc33: before fixing call and phi refs
proc33: after fixing call and phi refs
proc33: before finding preserveds
proc33: after finding preserveds
proc33: before fixing call and phi refs
proc33: after fixing call and phi refs
proc33: before updating arguments
proc33: after updating arguments
proc33: before reversing strength reduction
proc33: after reversing strength reduction
proc33: before finding preserveds
proc33: after finding preserveds
proc33: before fixing call and phi refs
proc33: after fixing call and phi refs
proc33: before finding preserveds
proc33: after finding preserveds
proc33: before finding preserveds
proc33: after finding preserveds
proc33: before fixing call and phi refs
proc33: after fixing call and phi refs
proc33: before finding preserveds
proc33: after finding preserveds
proc33: before finding preserveds
proc33: after finding preserveds
proc33: before fixing call and phi refs
proc33: after fixing call and phi refs
proc33: before finding preserveds
proc33: after finding preserveds
proc33: before propagating statements
proc33: after propagating statements
proc33: before removing matching assigns (t[WILDSTR]).
proc33: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc33: before removing matching assigns (%pc).
proc33: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc33: before fixing call and phi refs
proc33: after fixing call and phi refs
proc33: before finding preserveds
proc33: after finding preserveds
proc33: after middle
proc33: before final
proc33: before adding implicit assigns
proc33: after adding implicit assigns
proc33: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc33 ###
proc33: before other uses of dfa type analysis
in proc proc33 adding addrExp r28{0} - 72 to local table
in proc proc33 adding addrExp r28{0} - 68 to local table
in proc proc33 adding addrExp r28{0} - 64 to local table
in proc proc33 adding addrExp r28{0} - 60 to local table
in proc proc33 adding addrExp r28{0} - 16 to local table
in proc proc33 adding addrExp r28{0} - 20 to local table
in proc proc33 adding addrExp r28{0} - 24 to local table
in proc proc33 adding addrExp r28{0} - 28 to local table
in proc proc33 adding addrExp r28{0} - 4 to local table
in proc proc33 adding addrExp r28{0} - 8 to local table
in proc proc33 adding addrExp r28{0} - 12 to local table
in proc proc33 adding addrExp r28{0} - 16 to local table
in proc proc33 adding addrExp r28{0} - 20 to local table
in proc proc33 adding addrExp r28{0} - 16 to local table
in proc proc33 adding addrExp r28{0} - 20 to local table
in proc proc33 adding addrExp r28{0} - 24 to local table
in proc proc33 adding addrExp r28{0} - 16 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffffffffffff0 existing type unsigned int but added type void *
in proc proc33 adding addrExp r28{0} - 20 to local table
in proc proc33 adding addrExp r28{0} - 24 to local table
in proc proc33 adding addrExp r28{0} - 28 to local table
in proc proc33 adding addrExp r28{0} - 16 to local table
in proc proc33 adding addrExp r28{0} - 20 to local table
in proc proc33 adding addrExp r28{0} - 24 to local table
in proc proc33 adding addrExp r28{0} - 28 to local table
in proc proc33 adding addrExp r28{0} - 16 to local table
in proc proc33 adding addrExp r28{0} - 20 to local table
in proc proc33 adding addrExp r28{0} - 24 to local table
in proc proc33 adding addrExp r28{0} - 28 to local table
in proc proc33 adding addrExp r28{0} - 16 to local table
in proc proc33 adding addrExp r28{0} - 16 to local table
in proc proc33 adding addrExp r28{0} - 20 to local table
in proc proc33 adding addrExp r28{0} - 24 to local table
in proc proc33 adding addrExp r28{0} - 28 to local table
in proc proc33 adding addrExp r28{0} - 20 to local table
in proc proc33 adding addrExp r28{0} - 24 to local table
in proc proc33 adding addrExp r28{0} - 28 to local table
in proc proc33 adding addrExp r28{0} - 16 to local table
in proc proc33 adding addrExp r28{0} - 20 to local table
in proc proc33 adding addrExp r28{0} - 24 to local table
in proc proc33 adding addrExp r28{0} - 28 to local table
proc33: after dfa type analysis
proc33: before remUnusedStmtEtc
proc33: after remUnusedStmtEtc
proc33: before find final parameters.
finding final parameters for proc33
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r26
found new parameter r26
potential param r10
found new parameter r10
potential param m[r28{0} - 72]
found new parameter m[r28{0} - 72]
potential param m[r28{0} - 68]
found new parameter m[r28{0} - 68]
potential param m[r28{0} - 64]
found new parameter m[r28{0} - 64]
potential param m[r28{0} - 60]
found new parameter m[r28{0} - 60]
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r1
found new parameter r1
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r24
found new parameter r24
proc33: after find final parameters.
proc33: before updating arguments
proc33: after updating arguments
proc33: before branch analysis.
proc33: after branch analysis.
proc33: after final
proc35: before initialise
proc35: after initialise
proc35: before early
proc35: after early
proc35: before middle
proc35: before fixing call and phi refs
proc35: after fixing call and phi refs
proc35: before finding preserveds
proc35: after finding preserveds
proc35: before fixing call and phi refs
proc35: after fixing call and phi refs
proc35: before updating arguments
proc35: after updating arguments
proc35: before reversing strength reduction
proc35: after reversing strength reduction
proc35: before finding preserveds
proc35: after finding preserveds
proc35: before fixing call and phi refs
proc35: after fixing call and phi refs
proc35: before finding preserveds
proc35: after finding preserveds
proc35: before finding preserveds
proc35: after finding preserveds
proc35: before fixing call and phi refs
proc35: after fixing call and phi refs
proc35: before finding preserveds
proc35: after finding preserveds
proc35: before finding preserveds
proc35: after finding preserveds
proc35: before fixing call and phi refs
proc35: after fixing call and phi refs
proc35: before finding preserveds
proc35: after finding preserveds
proc35: before propagating statements
proc35: after propagating statements
proc35: before removing matching assigns (%pc).
proc35: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc35: before fixing call and phi refs
proc35: after fixing call and phi refs
proc35: before finding preserveds
proc35: after finding preserveds
proc35: after middle
proc35: before final
proc35: before adding implicit assigns
proc35: after adding implicit assigns
proc35: before dfa type analysis
proc35: before other uses of dfa type analysis
in proc proc35 adding addrExp r28{0} - 4 to local table
in proc proc35 adding addrExp r28{0} - 8 to local table
in proc proc35 adding addrExp r28{0} - 12 to local table
proc35: after dfa type analysis
proc35: before remUnusedStmtEtc
proc35: after remUnusedStmtEtc
proc35: before find final parameters.
finding final parameters for proc35
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r29
found new parameter r29
proc35: after find final parameters.
proc35: before updating arguments
proc35: after updating arguments
proc35: before branch analysis.
proc35: after branch analysis.
proc35: after final
proc34: before initialise
proc34: after initialise
proc34: before early
proc34: after early
proc34: before middle
proc34: before fixing call and phi refs
proc34: after fixing call and phi refs
proc34: before finding preserveds
proc34: after finding preserveds
proc34: before fixing call and phi refs
proc34: after fixing call and phi refs
proc34: before updating arguments
proc34: after updating arguments
proc34: before reversing strength reduction
proc34: after reversing strength reduction
proc34: before finding preserveds
proc34: after finding preserveds
proc34: before fixing call and phi refs
proc34: after fixing call and phi refs
proc34: before finding preserveds
proc34: after finding preserveds
proc34: before finding preserveds
proc34: after finding preserveds
proc34: before fixing call and phi refs
proc34: after fixing call and phi refs
proc34: before finding preserveds
proc34: after finding preserveds
proc34: before finding preserveds
proc34: after finding preserveds
proc34: before fixing call and phi refs
proc34: after fixing call and phi refs
proc34: before finding preserveds
proc34: after finding preserveds
proc34: before propagating statements
proc34: after propagating statements
proc34: before removing matching assigns (%pc).
proc34: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc34: before fixing call and phi refs
proc34: after fixing call and phi refs
proc34: before finding preserveds
proc34: after finding preserveds
proc34: after middle
proc34: before final
proc34: before adding implicit assigns
proc34: after adding implicit assigns
proc34: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc34 ###
proc34: before other uses of dfa type analysis
in proc proc34 adding addrExp r28{0} - 4 to local table
in proc proc34 adding addrExp r28{0} - 8 to local table
proc34: after dfa type analysis
proc34: before remUnusedStmtEtc
proc34: after remUnusedStmtEtc
proc34: before find final parameters.
finding final parameters for proc34
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
proc34: after find final parameters.
proc34: before updating arguments
proc34: after updating arguments
proc34: before branch analysis.
proc34: after branch analysis.
proc34: after final
proc32: before initialise
proc32: after initialise
proc32: before early
proc32: after early
proc32: before middle
proc32: before fixing call and phi refs
proc32: after fixing call and phi refs
proc32: before finding preserveds
proc32: after finding preserveds
proc32: before fixing call and phi refs
proc32: after fixing call and phi refs
proc32: before updating arguments
proc32: after updating arguments
proc32: before reversing strength reduction
proc32: after reversing strength reduction
proc32: before finding preserveds
proc32: after finding preserveds
proc32: before fixing call and phi refs
proc32: after fixing call and phi refs
proc32: before finding preserveds
proc32: after finding preserveds
proc32: before finding preserveds
proc32: after finding preserveds
proc32: before fixing call and phi refs
proc32: after fixing call and phi refs
proc32: before finding preserveds
proc32: after finding preserveds
proc32: before finding preserveds
proc32: after finding preserveds
proc32: before fixing call and phi refs
proc32: after fixing call and phi refs
proc32: before finding preserveds
proc32: after finding preserveds
proc32: before propagating statements
proc32: after propagating statements
proc32: before removing stack pointer assigns.
proc32: after removing stack pointer assigns.
proc32: before removing matching assigns (t[WILDSTR]).
proc32: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc32: before removing matching assigns (%pc).
proc32: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc32: before fixing call and phi refs
proc32: after fixing call and phi refs
proc32: before finding preserveds
proc32: after finding preserveds
proc32: after middle
proc32: before final
proc32: before adding implicit assigns
proc32: after adding implicit assigns
proc32: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc32 ###
proc32: before other uses of dfa type analysis
proc32: after dfa type analysis
proc32: before remUnusedStmtEtc
proc32: after remUnusedStmtEtc
proc32: before find final parameters.
finding final parameters for proc32
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r24
found new parameter r24
potential param r26
found new parameter r26
proc32: after find final parameters.
proc32: before updating arguments
proc32: after updating arguments
proc32: before branch analysis.
proc32: after branch analysis.
proc32: after final
proc36: before initialise
proc36: after initialise
proc36: before early
proc36: after early
proc36: before middle
proc36: before fixing call and phi refs
proc36: after fixing call and phi refs
proc36: before finding preserveds
proc36: after finding preserveds
proc36: before fixing call and phi refs
proc36: after fixing call and phi refs
proc36: before updating arguments
proc36: after updating arguments
proc36: before reversing strength reduction
proc36: after reversing strength reduction
proc36: before finding preserveds
proc36: after finding preserveds
proc36: before fixing call and phi refs
proc36: after fixing call and phi refs
proc36: before finding preserveds
proc36: after finding preserveds
proc36: before finding preserveds
proc36: after finding preserveds
proc36: before fixing call and phi refs
proc36: after fixing call and phi refs
proc36: before finding preserveds
proc36: after finding preserveds
proc36: before finding preserveds
proc36: after finding preserveds
proc36: before fixing call and phi refs
proc36: after fixing call and phi refs
proc36: before finding preserveds
proc36: after finding preserveds
proc36: before propagating statements
proc36: after propagating statements
proc36: before removing stack pointer assigns.
proc36: after removing stack pointer assigns.
proc36: before removing matching assigns (%pc).
proc36: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc36: before fixing call and phi refs
proc36: after fixing call and phi refs
proc36: before finding preserveds
proc36: after finding preserveds
proc36: after middle
proc36: before final
proc36: before adding implicit assigns
proc36: after adding implicit assigns
proc36: before dfa type analysis
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with /*signed?*/long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with /*signed?*/long long; allowing temporarily
WARNING: size 32 meet with /*signed?*/long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc36 ###
proc36: before other uses of dfa type analysis
in proc proc36 adding addrExp r28{0} - 4 to local table
proc36: after dfa type analysis
proc36: before remUnusedStmtEtc
proc36: after remUnusedStmtEtc
proc36: before find final parameters.
finding final parameters for proc36
potential param r28
found new parameter r28
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc36: after find final parameters.
proc36: before updating arguments
proc36: after updating arguments
proc36: before branch analysis.
proc36: after branch analysis.
proc36: after final
proc37: before initialise
proc37: after initialise
proc37: before early
proc37: after early
proc37: before middle
proc37: before fixing call and phi refs
proc37: after fixing call and phi refs
proc37: before finding preserveds
proc37: after finding preserveds
proc37: before fixing call and phi refs
proc37: after fixing call and phi refs
proc37: before updating arguments
proc37: after updating arguments
proc37: before reversing strength reduction
proc37: after reversing strength reduction
proc37: before finding preserveds
proc37: after finding preserveds
proc37: before fixing call and phi refs
proc37: after fixing call and phi refs
proc37: before finding preserveds
proc37: after finding preserveds
proc37: before finding preserveds
proc37: after finding preserveds
proc37: before fixing call and phi refs
proc37: after fixing call and phi refs
proc37: before finding preserveds
proc37: after finding preserveds
proc37: before finding preserveds
proc37: after finding preserveds
proc37: before fixing call and phi refs
proc37: after fixing call and phi refs
proc37: before finding preserveds
proc37: after finding preserveds
proc37: before propagating statements
proc37: after propagating statements
proc37: before removing stack pointer assigns.
proc37: after removing stack pointer assigns.
proc37: before removing matching assigns (%pc).
proc37: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc37: before fixing call and phi refs
proc37: after fixing call and phi refs
proc37: before finding preserveds
proc37: after finding preserveds
proc37: after middle
proc37: before final
proc37: before adding implicit assigns
proc37: after adding implicit assigns
proc37: before dfa type analysis
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with /*signed?*/long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with /*signed?*/long long; allowing temporarily
WARNING: size 32 meet with /*signed?*/long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
integer size 64 meet with SizeType size 32!
WARNING: size 32 meet with unsigned long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc37 ###
proc37: before other uses of dfa type analysis
in proc proc37 adding addrExp r28{0} - 4 to local table
in proc proc37 adding addrExp r28{0} - 8 to local table
TYPE ERROR: at address 0xfffffffffffffff8, overlapping type unsigned long long does not resolve to compound or array
proc37: after dfa type analysis
proc37: before remUnusedStmtEtc
proc37: after remUnusedStmtEtc
proc37: before find final parameters.
finding final parameters for proc37
potential param r28
found new parameter r28
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc37: after find final parameters.
proc37: before updating arguments
proc37: after updating arguments
proc37: before branch analysis.
proc37: after branch analysis.
proc37: after final
proc7: before initialise
proc7: after initialise
proc7: before early
assgn  221 *32* r25 := m[0x40a468]
assgn  343 *32* r25 := m[0x40807c]
assgn  497 *32* r24 := m[0x408078]
assgn  576 *32* %pc := m[0x40a450]
assgn  592 *32* %pc := m[0x40a45c]
assgn  607 *32* %pc := m[0x40a454]
assgn  694 *32* r25 := m[0x408078]
proc7: before fixing call and phi refs
proc7: after fixing call and phi refs
undoComputedBB for statement  577 <all> := CALL proc26(<all>)
              Reaching definitions: r0=r0{569},   r1=r1{556},   r8=r8{568},   r9=r9{1374},   r10=r10{1375},
                r11=r11{1376},   r12=r12{1272},   r15=r15{1273},   r24=r24{567},   r25=r25{555},   r26=r26{1379},
                r27=r27{1339},   r28=r28{574},   r29=r29{1275},   r30=r30{20},   r31=r31{1381},   tmp1=tmp1{547},
                tmpb=tmpb{1383},   tmph=tmph{1276},   %flags=ADDFLAGS32( tmp1{547}, 8, r24{548} ),   %ZF=%ZF{551},
                %CF=%CF{551}
              Live variables: 
proc7: before fixing call and phi refs
proc7: after fixing call and phi refs
undoComputedBB for statement  593 <all> := CALL proc47(<all>)
              Reaching definitions: r0=r0{577},   r1=r1{577},   r8=r8{577},   r9=r9{577},   r10=r10{577},
                r11=r11{577},   r12=r12{577},   r15=r15{577},   r24=r24{577},   r25=r25{577},   r26=r26{577},
                r27=r27{577},   r28=r28{590},   r29=r29{577},   r30=r30{582},   r31=r31{577},   <all>=<all>{577},
                tmp1=tmp1{585},   tmpb=tmpb{577},   tmph=tmph{577},
                %flags=SUBFLAGS32( m[r29{577} - 8], 0, tmp1{585} ),   %ZF=%ZF{586},   %CF=%CF{586}
              Live variables: 
proc7: before fixing call and phi refs
proc7: after fixing call and phi refs
undoComputedBB for statement  608 <all> := CALL proc47(<all>)
              Reaching definitions: r0=r0{1387},   r1=r1{1388},   r8=r8{1389},   r9=r9{1390},   r10=r10{1391},
                r11=r11{1392},   r12=r12{1393},   r15=r15{1394},   r24=r24{1395},   r25=r25{1396},   r26=r26{1397},
                r27=r27{1398},   r28=r28{605},   r29=r29{1400},   r30=r30{1401},   r31=r31{1402},   <all>=<all>{577},
                tmp1=tmp1{600},   tmpb=tmpb{597},   tmph=tmph{1405},   %flags=LOGICALFLAGS32( tmp1{600} ),
                %ZF=%ZF{601},   %CF=%CF{601}
              Live variables: 
proc7: after early
proc7: before middle
proc7: before fixing call and phi refs
proc7: after fixing call and phi refs
proc7: before finding preserveds
proc7: after finding preserveds
proc7: before fixing call and phi refs
proc7: after fixing call and phi refs
proc7: before updating arguments
proc7: after updating arguments
proc7: before reversing strength reduction
proc7: after reversing strength reduction
proc7: before finding preserveds
proc7: after finding preserveds
proc7: before fixing call and phi refs
proc7: after fixing call and phi refs
proc7: before finding preserveds
proc7: after finding preserveds
proc7: before finding preserveds
proc7: after finding preserveds
proc7: before fixing call and phi refs
proc7: after fixing call and phi refs
proc7: before finding preserveds
proc7: after finding preserveds
proc7: before finding preserveds
proc7: after finding preserveds
proc7: before fixing call and phi refs
proc7: after fixing call and phi refs
proc7: before finding preserveds
proc7: after finding preserveds
proc7: before propagating statements
proc7: after propagating statements
proc7: before removing matching assigns (%pc).
proc7: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc7: before fixing call and phi refs
proc7: after fixing call and phi refs
proc7: before finding preserveds
proc7: after finding preserveds
proc7: after middle
proc7: before final
proc7: before adding implicit assigns
proc7: after adding implicit assigns
proc7: before dfa type analysis
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
WARNING: size 32 meet with /*signed?*/char; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 16!
WARNING: size 16 meet with unsigned int; allowing temporarily
WARNING: size 16 meet with unsigned int; allowing temporarily
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
WARNING: size 32 meet with unsigned short; allowing temporarily
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with unsigned int; allowing temporarily
WARNING: size 16 meet with unsigned int; allowing temporarily
WARNING: size 16 meet with unsigned int; allowing temporarily
WARNING: size 16 meet with unsigned int; allowing temporarily
WARNING: size 16 meet with unsigned int; allowing temporarily
WARNING: size 16 meet with unsigned int; allowing temporarily
WARNING: size 16 meet with unsigned int; allowing temporarily
WARNING: size 16 meet with unsigned int; allowing temporarily
WARNING: size 16 meet with unsigned int; allowing temporarily
WARNING: size 16 meet with unsigned int; allowing temporarily
WARNING: size 16 meet with unsigned int; allowing temporarily
WARNING: size 8 meet with int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with unsigned int; allowing temporarily
WARNING: size 8 meet with unsigned int; allowing temporarily
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with unsigned int; allowing temporarily
WARNING: size 8 meet with unsigned int; allowing temporarily
WARNING: size 8 meet with unsigned int; allowing temporarily
WARNING: size 8 meet with unsigned int; allowing temporarily
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
WARNING: size 8 meet with __size8 *; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc7 ###
proc7: before other uses of dfa type analysis
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
proc7: after dfa type analysis
proc7: before remUnusedStmtEtc
proc7: after remUnusedStmtEtc
proc7: before find final parameters.
finding final parameters for proc7
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r31
found new parameter r31
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param tmph
potential param r24
found new parameter r24
potential param r8
found new parameter r8
potential param r26
found new parameter r26
proc7: after find final parameters.
proc7: before updating arguments
proc7: after updating arguments
proc7: before branch analysis.
proc7: after branch analysis.
proc7: after final
proc7: before final
proc7: before remUnusedStmtEtc
proc7: after remUnusedStmtEtc
proc7: before find final parameters.
finding final parameters for proc7
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r31
found new parameter r31
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param tmph
potential param r24
found new parameter r24
potential param r8
found new parameter r8
potential param r26
found new parameter r26
proc7: after find final parameters.
proc7: before updating arguments
proc7: after updating arguments
proc7: before branch analysis.
proc7: after branch analysis.
proc7: after final
proc11: before initialise
proc11: after initialise
proc11: before early
proc11: after early
proc11: before middle
proc11: before fixing call and phi refs
proc11: after fixing call and phi refs
proc11: before finding preserveds
proc11: after finding preserveds
proc11: before fixing call and phi refs
proc11: after fixing call and phi refs
proc11: before updating arguments
proc11: after updating arguments
proc11: before reversing strength reduction
proc11: after reversing strength reduction
proc11: before finding preserveds
proc11: after finding preserveds
proc11: before fixing call and phi refs
proc11: after fixing call and phi refs
proc11: before finding preserveds
proc11: after finding preserveds
proc11: before finding preserveds
proc11: after finding preserveds
proc11: before fixing call and phi refs
proc11: after fixing call and phi refs
proc11: before finding preserveds
proc11: after finding preserveds
proc11: before finding preserveds
proc11: after finding preserveds
proc11: before fixing call and phi refs
proc11: after fixing call and phi refs
proc11: before finding preserveds
proc11: after finding preserveds
proc11: before propagating statements
proc11: after propagating statements
proc11: before removing stack pointer assigns.
proc11: after removing stack pointer assigns.
proc11: before removing matching assigns (%pc).
proc11: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc11: before fixing call and phi refs
proc11: after fixing call and phi refs
proc11: before finding preserveds
proc11: after finding preserveds
proc11: after middle
proc11: before final
proc11: before adding implicit assigns
proc11: after adding implicit assigns
proc11: before dfa type analysis
WARNING: size 16 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc11 ###
proc11: before other uses of dfa type analysis
in proc proc11 adding addrExp r28{0} - 0x434 to local table
in proc proc11 adding addrExp r28{0} - 44 to local table
in proc proc11 adding addrExp r28{0} - 16 to local table
in proc proc11 adding addrExp r28{0} - 20 to local table
in proc proc11 adding addrExp r28{0} - 24 to local table
in proc proc11 adding addrExp r28{0} - 28 to local table
in proc proc11 adding addrExp r28{0} - 4 to local table
in proc proc11 adding addrExp r28{0} - 8 to local table
in proc proc11 adding addrExp r28{0} - 12 to local table
in proc proc11 adding addrExp r28{0} - 16 to local table
in proc proc11 adding addrExp r28{0} - 20 to local table
in proc proc11 adding addrExp r28{0} - 24 to local table
in proc proc11 adding addrExp r28{0} - 28 to local table
in proc proc11 adding addrExp r28{0} - 16 to local table
in proc proc11 adding addrExp r28{0} - 20 to local table
in proc proc11 adding addrExp r28{0} - 24 to local table
in proc proc11 adding addrExp r28{0} - 28 to local table
proc11: after dfa type analysis
proc11: before remUnusedStmtEtc
proc11: after remUnusedStmtEtc
proc11: before find final parameters.
finding final parameters for proc11
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 0x434]
found new parameter m[r28{0} - 0x434]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param r26
found new parameter r26
proc11: after find final parameters.
proc11: before updating arguments
proc11: after updating arguments
proc11: before branch analysis.
proc11: after branch analysis.
proc11: after final
proc8: before initialise
proc8: after initialise
proc8: before early
proc8: after early
proc8: before middle
proc8: before fixing call and phi refs
proc8: after fixing call and phi refs
proc8: before finding preserveds
proc8: after finding preserveds
proc8: before fixing call and phi refs
proc8: after fixing call and phi refs
proc8: before updating arguments
proc8: after updating arguments
proc8: before reversing strength reduction
proc8: after reversing strength reduction
proc8: before finding preserveds
proc8: after finding preserveds
proc8: before fixing call and phi refs
proc8: after fixing call and phi refs
proc8: before finding preserveds
proc8: after finding preserveds
proc8: before finding preserveds
proc8: after finding preserveds
proc8: before fixing call and phi refs
proc8: after fixing call and phi refs
proc8: before finding preserveds
proc8: after finding preserveds
proc8: before finding preserveds
proc8: after finding preserveds
proc8: before fixing call and phi refs
proc8: after fixing call and phi refs
proc8: before finding preserveds
proc8: after finding preserveds
proc8: before propagating statements
proc8: after propagating statements
proc8: before removing stack pointer assigns.
proc8: after removing stack pointer assigns.
proc8: before removing matching assigns (%pc).
proc8: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc8: before fixing call and phi refs
proc8: after fixing call and phi refs
proc8: before finding preserveds
proc8: after finding preserveds
proc8: after middle
proc8: before final
proc8: before adding implicit assigns
proc8: after adding implicit assigns
proc8: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc8 ###
proc8: before other uses of dfa type analysis
in proc proc8 adding addrExp r28{0} - 0x440 to local table
in proc proc8 adding addrExp r28{0} - 56 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 4 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 12 to local table
proc8: after dfa type analysis
proc8: before remUnusedStmtEtc
proc8: after remUnusedStmtEtc
proc8: before find final parameters.
finding final parameters for proc8
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 0x440]
found new parameter m[r28{0} - 0x440]
potential param m[r28{0} - 56]
found new parameter m[r28{0} - 56]
potential param r26
found new parameter r26
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r24
found new parameter r24
potential param r25
found new parameter r25
proc8: after find final parameters.
proc8: before updating arguments
proc8: after updating arguments
proc8: before branch analysis.
proc8: after branch analysis.
proc8: after final
proc5: before initialise
proc5: after initialise
proc5: before early
proc5: after early
proc5: before middle
proc5: before fixing call and phi refs
proc5: after fixing call and phi refs
proc5: before finding preserveds
proc5: after finding preserveds
proc5: before fixing call and phi refs
proc5: after fixing call and phi refs
proc5: before updating arguments
proc5: after updating arguments
proc5: before reversing strength reduction
proc5: after reversing strength reduction
proc5: before finding preserveds
proc5: after finding preserveds
proc5: before fixing call and phi refs
proc5: after fixing call and phi refs
proc5: before finding preserveds
proc5: after finding preserveds
proc5: before finding preserveds
proc5: after finding preserveds
proc5: before fixing call and phi refs
proc5: after fixing call and phi refs
proc5: before finding preserveds
proc5: after finding preserveds
proc5: before finding preserveds
proc5: after finding preserveds
proc5: before fixing call and phi refs
proc5: after fixing call and phi refs
proc5: before finding preserveds
proc5: after finding preserveds
proc5: before propagating statements
proc5: after propagating statements
proc5: before removing matching assigns (t[WILDSTR]).
proc5: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc5: before removing matching assigns (%pc).
proc5: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc5: before fixing call and phi refs
proc5: after fixing call and phi refs
proc5: before finding preserveds
proc5: after finding preserveds
proc5: after middle
proc5: before final
proc5: before adding implicit assigns
proc5: after adding implicit assigns
proc5: before dfa type analysis
integer size 32 meet with SizeType size 16!
WARNING: size 16 meet with unsigned int; allowing temporarily
integer size 32 meet with SizeType size 8!
WARNING: size 8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
proc5: before other uses of dfa type analysis
in proc proc5 adding addrExp r28{0} - 4 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 12 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 20 to local table
proc5: after dfa type analysis
proc5: before remUnusedStmtEtc
proc5: after remUnusedStmtEtc
proc5: before find final parameters.
finding final parameters for proc5
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r29
found new parameter r29
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r12
found new parameter r12
potential param r15
found new parameter r15
proc5: after find final parameters.
proc5: before updating arguments
proc5: after updating arguments
proc5: before branch analysis.
proc5: after branch analysis.
proc5: after final
proc2: before initialise
proc2: after initialise
proc2: before early
proc2: after early
proc2: before middle
proc2: before fixing call and phi refs
proc2: after fixing call and phi refs
proc2: before finding preserveds
proc2: after finding preserveds
proc2: before fixing call and phi refs
proc2: after fixing call and phi refs
proc2: before updating arguments
proc2: after updating arguments
proc2: before reversing strength reduction
proc2: after reversing strength reduction
proc2: before finding preserveds
proc2: after finding preserveds
proc2: before fixing call and phi refs
proc2: after fixing call and phi refs
proc2: before finding preserveds
proc2: after finding preserveds
proc2: before finding preserveds
proc2: after finding preserveds
proc2: before fixing call and phi refs
proc2: after fixing call and phi refs
proc2: before finding preserveds
proc2: after finding preserveds
proc2: before finding preserveds
proc2: after finding preserveds
proc2: before fixing call and phi refs
proc2: after fixing call and phi refs
proc2: before finding preserveds
proc2: after finding preserveds
proc2: before propagating statements
proc2: after propagating statements
proc2: before removing matching assigns (t[WILDSTR]).
proc2: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc2: before removing matching assigns (%pc).
proc2: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc2: before fixing call and phi refs
proc2: after fixing call and phi refs
proc2: before finding preserveds
proc2: after finding preserveds
proc2: after middle
proc2: before final
proc2: before adding implicit assigns
proc2: after adding implicit assigns
proc2: before dfa type analysis
integer size 32 meet with SizeType size 16!
WARNING: size 16 meet with unsigned int; allowing temporarily
proc2: before other uses of dfa type analysis
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
proc2: after dfa type analysis
proc2: before remUnusedStmtEtc
proc2: after remUnusedStmtEtc
proc2: before find final parameters.
finding final parameters for proc2
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r31
found new parameter r31
proc2: after find final parameters.
proc2: before updating arguments
proc2: after updating arguments
proc2: before branch analysis.
proc2: after branch analysis.
proc2: after final
proc1: before initialise
proc1: after initialise
proc1: before early
proc1: after early
proc1: before middle
proc1: before fixing call and phi refs
proc1: after fixing call and phi refs
proc1: before finding preserveds
proc1: after finding preserveds
proc1: before fixing call and phi refs
proc1: after fixing call and phi refs
proc1: before updating arguments
proc1: after updating arguments
proc1: before reversing strength reduction
proc1: after reversing strength reduction
proc1: before finding preserveds
proc1: after finding preserveds
proc1: before fixing call and phi refs
proc1: after fixing call and phi refs
proc1: before finding preserveds
proc1: after finding preserveds
proc1: before finding preserveds
proc1: after finding preserveds
proc1: before fixing call and phi refs
proc1: after fixing call and phi refs
proc1: before finding preserveds
proc1: after finding preserveds
proc1: before finding preserveds
proc1: after finding preserveds
proc1: before fixing call and phi refs
proc1: after fixing call and phi refs
proc1: before finding preserveds
proc1: after finding preserveds
proc1: before propagating statements
proc1: after propagating statements
proc1: before removing matching assigns (%pc).
proc1: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc1: before fixing call and phi refs
proc1: after fixing call and phi refs
proc1: before finding preserveds
proc1: after finding preserveds
proc1: after middle
proc1: before final
proc1: before adding implicit assigns
proc1: after adding implicit assigns
proc1: before dfa type analysis
integer size 32 meet with SizeType size 16!
WARNING: size 16 meet with unsigned int; allowing temporarily
proc1: before other uses of dfa type analysis
in proc proc1 adding addrExp r28{0} - 4 to local table
proc1: after dfa type analysis
proc1: before remUnusedStmtEtc
proc1: after remUnusedStmtEtc
proc1: before find final parameters.
finding final parameters for proc1
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r31
found new parameter r31
proc1: after find final parameters.
proc1: before updating arguments
proc1: after updating arguments
proc1: before branch analysis.
proc1: after branch analysis.
proc1: after final
proc3: before initialise
proc3: after initialise
proc3: before early
assgn    7 *32* r30 := m[0x4070e8]
is readonly
assgn   29 *32* %pc := m[0x4070ec]
is readonly
assgn   50 *32* %pc := m[0x4070f0]
is readonly
proc3: after early
proc3: before middle
proc3: before fixing call and phi refs
proc3: after fixing call and phi refs
proc3: before finding preserveds
proc3: after finding preserveds
proc3: before fixing call and phi refs
proc3: after fixing call and phi refs
proc3: before updating arguments
proc3: after updating arguments
proc3: before reversing strength reduction
proc3: after reversing strength reduction
proc3: before finding preserveds
proc3: after finding preserveds
proc3: before fixing call and phi refs
proc3: after fixing call and phi refs
proc3: before finding preserveds
proc3: after finding preserveds
proc3: before finding preserveds
proc3: after finding preserveds
proc3: before fixing call and phi refs
proc3: after fixing call and phi refs
proc3: before finding preserveds
proc3: after finding preserveds
proc3: before finding preserveds
proc3: after finding preserveds
proc3: before fixing call and phi refs
proc3: after fixing call and phi refs
proc3: before finding preserveds
proc3: after finding preserveds
proc3: before propagating statements
proc3: after propagating statements
proc3: before removing matching assigns (t[WILDSTR]).
proc3: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc3: before removing matching assigns (%pc).
proc3: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc3: before fixing call and phi refs
proc3: after fixing call and phi refs
decodeIndirectJmp: COMPCALL:
0040113d   18 *32* r28 := r28{-} - 64
           19 *32* m[r28{-} - 64] := %pc
           21 {*32* r24, *32* r30, *32* r28} := CALL 0x7746(<all>)
              Reaching definitions: r24=m[r28{-} + 4]{-},   r28=r28{-} - 64,   r30=0x7746,
                m[r28{-} - 28]=m[r28{-} + 4]{-},   m[r28{-} - 32]=0,   m[r28{-} - 36]=0,   m[r28{-} - 40]=0x4011f0,
                m[r28{-} - 44]=3,   m[r28{-} - 48]=48,   m[r28{-} - 52]=r30{-},   m[r28{-} - 56]=107,
                m[r28{-} - 60]=m[r28{-} + 4]{-},   m[r28{-} - 64]=%pc,   tmp1=r28{-},
                %flags=SUBFLAGS32( r28{-}, 48, r28{-} - 48 ),   %ZF=(r28{-} - 48) = 0,   %CF=r28{-} <u 48
              Live variables: 

decodeIndirect: propagated and const global converted call expression is 0x7746
decodeIndirectJmp: COMPCALL:
00401173   40 *32* r28 := r28{21} - 12
           41 *32* m[r28{21} - 12] := %pc
           43 {*32* r24, *32* r28} := CALL r30{21}(<all>)
              Reaching definitions: r24=r24{32},   r25=r25{30},   r26=r26{30},   r28=r28{21} - 12,   r30=r30{21},
                m[r28{-} - 28]=m[r28{-} - 28]{21},   m[r28{-} - 32]=m[r28{-} - 32]{21},
                m[r28{-} - 36]=m[r28{-} - 36]{21},   m[r28{-} - 40]=m[r28{-} - 40]{21},
                m[r28{-} - 44]=m[r28{-} - 44]{21},   m[r28{-} - 48]=m[r28{-} - 48]{21},
                m[r28{-} - 52]=m[r28{-} - 52]{21},   m[r28{-} - 56]=m[r28{-} - 56]{21},
                m[r28{-} - 60]=m[r28{-} - 60]{21},   m[r28{-} - 64]=m[r28{-} - 64]{21},   <all>=<all>{21},
                tmp1=tmp1{21},   %flags=%flags{21},   %ZF=%ZF{21},   %CF=%CF{21}
              Live variables: 

decodeIndirect: propagated and const global converted call expression is r30{21}
proc3: before finding preserveds
proc3: after finding preserveds
proc3: after middle
proc3: before final
proc3: before adding implicit assigns
proc3: after adding implicit assigns
proc3: before dfa type analysis
proc3: before other uses of dfa type analysis
in proc proc3 adding addrExp r28{0} - 52 to local table
in proc proc3 adding addrExp r28{0} - 56 to local table
in proc proc3 adding addrExp r28{0} - 60 to local table
in proc proc3 adding addrExp r28{0} - 48 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 64 to local table
proc3: after dfa type analysis
proc3: before remUnusedStmtEtc
proc3: after remUnusedStmtEtc
proc3: before find final parameters.
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc3: after find final parameters.
proc3: before updating arguments
proc3: after updating arguments
proc3: before branch analysis.
proc3: after branch analysis.
proc3: after final
proc4: before initialise
proc4: after initialise
proc4: before early
assgn   31 *32* %pc := m[0x4070e0]
is readonly
assgn   49 *32* %pc := m[0x40710c]
is readonly
assgn   55 *32* %pc := m[0x4070e4]
is readonly
proc4: after early
proc4: before middle
proc4: before fixing call and phi refs
proc4: after fixing call and phi refs
proc4: before finding preserveds
proc4: after finding preserveds
proc4: before fixing call and phi refs
proc4: after fixing call and phi refs
proc4: before updating arguments
proc4: after updating arguments
proc4: before reversing strength reduction
proc4: after reversing strength reduction
proc4: before finding preserveds
proc4: after finding preserveds
proc4: before fixing call and phi refs
proc4: after fixing call and phi refs
proc4: before finding preserveds
proc4: after finding preserveds
proc4: before finding preserveds
proc4: after finding preserveds
proc4: before fixing call and phi refs
proc4: after fixing call and phi refs
proc4: before finding preserveds
proc4: after finding preserveds
proc4: before finding preserveds
proc4: after finding preserveds
proc4: before fixing call and phi refs
proc4: after fixing call and phi refs
proc4: before finding preserveds
proc4: after finding preserveds
proc4: before propagating statements
proc4: after propagating statements
proc4: before removing stack pointer assigns.
proc4: after removing stack pointer assigns.
proc4: before removing matching assigns (t[WILDSTR]).
proc4: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc4: before removing matching assigns (%pc).
proc4: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc4: before fixing call and phi refs
proc4: after fixing call and phi refs
proc4: before finding preserveds
proc4: after finding preserveds
proc4: after middle
proc4: before final
proc4: before adding implicit assigns
proc4: after adding implicit assigns
proc4: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
proc4: before other uses of dfa type analysis
in proc proc4 adding addrExp r28{0} - 4 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 20 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
in proc proc4 adding addrExp r28{0} - 32 to local table
in proc proc4 adding addrExp r28{0} - 36 to local table
in proc proc4 adding addrExp r28{0} - 40 to local table
in proc proc4 adding addrExp r28{0} - 44 to local table
in proc proc4 adding addrExp r28{0} - 48 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
in proc proc4 adding addrExp r28{0} - 56 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
proc4: after dfa type analysis
proc4: before remUnusedStmtEtc
proc4: after remUnusedStmtEtc
proc4: before find final parameters.
finding final parameters for proc4
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
proc4: after find final parameters.
proc4: before updating arguments
proc4: after updating arguments
proc4: before branch analysis.
proc4: after branch analysis.
proc4: after final
WinMain: before initialise
WinMain: after initialise
WinMain: before early
assgn   16 *32* %pc := m[0x407008]
is readonly
assgn   18 *32* r31 := m[0x4070f4]
is readonly
assgn   81 *32* %pc := m[0x4070f8]
is readonly
assgn   83 *32* r31 := m[0x4070fc]
is readonly
assgn  103 *32* r27 := m[0x407100]
is readonly
assgn  106 *32* r29 := m[0x407104]
is readonly
assgn  134 *32* %pc := m[0x407108]
is readonly
WinMain: after early
WinMain: before middle
WinMain: before fixing call and phi refs
WinMain: after fixing call and phi refs
WinMain: before finding preserveds
WinMain: after finding preserveds
WinMain: before fixing call and phi refs
WinMain: after fixing call and phi refs
WinMain: before updating arguments
WinMain: after updating arguments
WinMain: before reversing strength reduction
WinMain: after reversing strength reduction
WinMain: before finding preserveds
WinMain: after finding preserveds
WinMain: before fixing call and phi refs
WinMain: after fixing call and phi refs
WinMain: before finding preserveds
WinMain: after finding preserveds
WinMain: before finding preserveds
WinMain: after finding preserveds
WinMain: before fixing call and phi refs
WinMain: after fixing call and phi refs
WinMain: before finding preserveds
WinMain: after finding preserveds
WinMain: before finding preserveds
WinMain: after finding preserveds
WinMain: before fixing call and phi refs
WinMain: after fixing call and phi refs
WinMain: before finding preserveds
WinMain: after finding preserveds
WinMain: before propagating statements
WinMain: after propagating statements
WinMain: before removing matching assigns (t[WILDSTR]).
WinMain: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
WinMain: before removing matching assigns (%pc).
WinMain: after removing matching assigns (%pc).
after removing matching assigns (%pc).
WinMain: before fixing call and phi refs
WinMain: after fixing call and phi refs
decodeIndirectJmp: COMPCALL:
00401055   28 *32* r28 := r28{11} - 20
           29 *32* m[r28{11} - 20] := %pc
           31 {*16* r0, *16* r1, *8* r8, *8* r9, *8* r10, *8* r11, *8* r12, *8* r15, *32* r24, *32* r25, *32* r26, *32* r27, *32* r28, *32* r29, *32* r30, *32* r31} := CALL 0x7716(<all>)
              Reaching definitions: r0=r0{11},   r1=r1{11},   r8=r8{11},   r9=r9{11},   r10=r10{11},   r11=r11{11},
                r12=r12{11},   r15=r15{11},   r24=r24{17},   r25=r25{17},   r26=r26{17},   r27=r27{11},
                r28=r28{11} - 20,   r29=r29{11},   r30=r30{21},   r31=0x7716,   m[r28{-} - 32]=r30{-},
                m[r28{-} - 36]=r31{-},   m[r28{-} - 40]=%pc,   tmp1=r28{-},
                %flags=SUBFLAGS32( r28{-}, 28, r28{-} - 28 ),   %ZF=(r28{-} - 28) = 0,   %CF=r28{-} <u 28
              Live variables: 

decodeIndirect: propagated and const global converted call expression is 0x7716
decodeIndirectJmp: COMPCALL:
00401061   40 *32* r28 := r28{31} - 20
           41 *32* m[r28{31} - 20] := %pc
           43 {*16* r0, *16* r1, *8* r8, *8* r9, *8* r10, *8* r11, *8* r12, *8* r15, *32* r27, *32* r28, *32* r29, *32* r30} := CALL r31{31}(<all>)
              Reaching definitions: r0=r0{31},   r1=r1{31},   r8=r8{31},   r9=r9{31},   r10=r10{31},   r11=r11{31},
                r12=r12{31},   r15=r15{31},   r24=r24{31},   r25=r25{31},   r26=r26{31},   r27=r27{31},
                r28=r28{31} - 20,   r29=r29{31},   r30=r30{31},   r31=r31{31},   m[r28{-} - 32]=m[r28{-} - 32]{31},
                m[r28{-} - 36]=m[r28{-} - 36]{31},   m[r28{-} - 40]=m[r28{-} - 40]{31},   <all>=<all>{31},
                tmp1=tmp1{31},   %flags=%flags{31},   %ZF=%ZF{31},   %CF=%CF{31}
              Live variables: 

decodeIndirect: propagated and const global converted call expression is r31{31}
decodeIndirectJmp: COMPCALL:
0040109f   94 *32* r28 := r28{49} - 16
           95 *32* m[r28{49} - 16] := %pc
           97 {*16* r0, *16* r1, *8* r8, *8* r9, *8* r10, *8* r11, *8* r12, *8* r15, *32* r24, *32* r25, *32* r26, *32* r27, *32* r28, *32* r29, *32* r30, *32* r31} := CALL 0x76f4(<all>)
              Reaching definitions: r0=r0{43},   r1=r1{43},   r8=r8{43},   r9=r9{43},   r10=r10{43},   r11=r11{43},
                r12=r12{43},   r15=r15{43},   r24=r24{82},   r25=r28{49} + 12,   r26=r26{82},   r27=r27{43},
                r28=r28{49} - 16,   r29=r29{43},   r30=r24{82},   r31=0x76f4,   m[r28{-} - 32]=m[r28{-} - 32]{43},
                m[r28{-} - 36]=m[r28{-} - 36]{43},   m[r28{-} - 40]=m[r28{-} - 40]{43},   <all>=<all>{43},
                tmp1=r24{58},   %flags=LOGICALFLAGS32( r24{58} ),   %ZF=LOGICALFLAGS32( r24{58} ),
                %CF=LOGICALFLAGS32( r24{58} )
              Live variables: 

decodeIndirect: propagated and const global converted call expression is 0x76f4
decodeIndirectJmp: COMPCALL:
004010be  115 *32* r28 := r28{197} - 16
          116 *32* m[r28{197} - 16] := %pc
          118 {*16* r0, *16* r1, *8* r8, *8* r9, *8* r10, *8* r11, *8* r12, *8* r15, *32* r24, *32* r25, *32* r26, *32* r27, *32* r28, *32* r29, *32* r30, *32* r31} := CALL r27{196}(<all>)
              Reaching definitions: r0=r0{185},   r1=r1{186},   r8=r8{187},   r9=r9{188},   r10=r10{189},
                r11=r11{190},   r12=r12{191},   r15=r15{192},   r24=r24{107},   r25=r25{194},   r26=r28{197} + 16,
                r27=r27{196},   r28=r28{197} - 16,   r29=r29{198},   r30=r30{199},   r31=r31{200},
                m[r28{-} - 32]=m[r28{-} - 32]{248},   m[r28{-} - 36]=m[r28{-} - 36]{249},
                m[r28{-} - 40]=m[r28{-} - 40]{250},   <all>=<all>{97},   tmp1=tmp1{201},   %flags=%flags{202},
                %ZF=%ZF{203},   %CF=%CF{204}
              Live variables: 

decodeIndirect: propagated and const global converted call expression is r27{196}
decodeIndirectJmp: COMPCALL:
004010c9  125 *32* r28 := r28{118} - 8
          126 *32* m[r28{118} - 8] := %pc
          128 {*16* r0, *16* r1, *8* r8, *8* r9, *8* r10, *8* r11, *8* r12, *8* r15, *32* r27, *32* r28, *32* r29, *32* r30, *32* r31} := CALL r29{118}(<all>)
              Reaching definitions: r0=r0{118},   r1=r1{118},   r8=r8{118},   r9=r9{118},   r10=r10{118},
                r11=r11{118},   r12=r12{118},   r15=r15{118},   r24=r24{118},   r25=r28{118} + 16,   r26=r26{118},
                r27=r27{118},   r28=r28{118} - 8,   r29=r29{118},   r30=r30{118},   r31=r31{118},
                m[r28{-} - 32]=m[r28{-} - 32]{118},   m[r28{-} - 36]=m[r28{-} - 36]{118},
                m[r28{-} - 40]=m[r28{-} - 40]{118},   <all>=<all>{118},   tmp1=r24{118},
                %flags=LOGICALFLAGS32( r24{118} ),   %ZF=LOGICALFLAGS32( r24{118} ),   %CF=LOGICALFLAGS32( r24{118} )
              Live variables: 

decodeIndirect: propagated and const global converted call expression is r29{118}
decodeIndirectJmp: COMPCALL:
004010e1  145 *32* r28 := r28{217} - 20
          146 *32* m[r28{217} - 20] := %pc
          148 {*16* r0, *16* r1, *8* r8, *8* r9, *8* r10, *8* r11, *8* r12, *8* r15, *32* r24, *32* r25, *32* r26, *32* r27, *32* r28, *32* r29, *32* r30, *32* r31} := CALL r31{220}(<all>)
              Reaching definitions: r0=r0{205},   r1=r1{206},   r8=r8{207},   r9=r9{208},   r10=r10{209},
                r11=r11{210},   r12=r12{211},   r15=r15{212},   r24=r28{217} + 16,   r25=r25{214},   r26=r26{215},
                r27=r27{216},   r28=r28{217} - 20,   r29=r29{218},   r30=r30{219},   r31=r31{220},
                m[r28{-} - 32]=m[r28{-} - 32]{251},   m[r28{-} - 36]=m[r28{-} - 36]{252},
                m[r28{-} - 40]=m[r28{-} - 40]{253},   <all>=<all>{118},   tmp1=tmp1{221},   %flags=%flags{222},
                %ZF=%ZF{223},   %CF=%CF{224}
              Live variables: 

decodeIndirect: propagated and const global converted call expression is r31{220}
WinMain: before finding preserveds
WinMain: after finding preserveds
WinMain: after middle
WinMain: before final
WinMain: before adding implicit assigns
WinMain: after adding implicit assigns
WinMain: before dfa type analysis
integer size 32 meet with SizeType size 16!
WARNING: size 16 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure WinMain ###
WinMain: before other uses of dfa type analysis
in proc WinMain adding addrExp r28{0} - 32 to local table
in proc WinMain adding addrExp r28{0} - 36 to local table
in proc WinMain adding addrExp r28{0} - 40 to local table
in proc WinMain adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffe0 is not structure or array type
in proc WinMain adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffdc is not structure or array type
in proc WinMain adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffd8 is not structure or array type
in proc WinMain adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffe0 is not structure or array type
in proc WinMain adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffdc is not structure or array type
in proc WinMain adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffd8 is not structure or array type
in proc WinMain adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffe0 is not structure or array type
in proc WinMain adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffdc is not structure or array type
in proc WinMain adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffd8 is not structure or array type
in proc WinMain adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffe0 is not structure or array type
in proc WinMain adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffdc is not structure or array type
in proc WinMain adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffd8 is not structure or array type
WinMain: after dfa type analysis
WinMain: before remUnusedStmtEtc
WinMain: after remUnusedStmtEtc
WinMain: before find final parameters.
WinMain: before updating arguments
WinMain: after updating arguments
WinMain: before branch analysis.
WinMain: after branch analysis.
WinMain: after final
ERROR: attempted to decode outside any known segment 0x0
proc26: before initialise
proc26: after initialise
proc26: before early
proc26: after early
proc26: before middle
proc26: before fixing call and phi refs
proc26: after fixing call and phi refs
proc26: before finding preserveds
proc26: after finding preserveds (no return)
proc26: before fixing call and phi refs
proc26: after fixing call and phi refs
proc26: before updating arguments
proc26: after updating arguments
proc26: before reversing strength reduction
proc26: after reversing strength reduction
proc26: before finding preserveds
proc26: after finding preserveds (no return)
proc26: before fixing call and phi refs
proc26: after fixing call and phi refs
proc26: before finding preserveds
proc26: after finding preserveds (no return)
proc26: before finding preserveds
proc26: after finding preserveds (no return)
proc26: before fixing call and phi refs
proc26: after fixing call and phi refs
proc26: before finding preserveds
proc26: after finding preserveds (no return)
proc26: before finding preserveds
proc26: after finding preserveds (no return)
proc26: before fixing call and phi refs
proc26: after fixing call and phi refs
proc26: before finding preserveds
proc26: after finding preserveds (no return)
proc26: before propagating statements
proc26: after propagating statements
proc26: before fixing call and phi refs
proc26: after fixing call and phi refs
proc26: before finding preserveds
proc26: after finding preserveds (no return)
proc26: after middle
proc26: before final
proc26: before adding implicit assigns
proc26: after adding implicit assigns
proc26: before dfa type analysis
proc26: before other uses of dfa type analysis
proc26: after dfa type analysis
proc26: before remUnusedStmtEtc
proc26: after remUnusedStmtEtc
proc26: before find final parameters.
finding final parameters for proc26
proc26: after find final parameters.
proc26: before updating arguments
proc26: after updating arguments
proc26: before branch analysis.
proc26: after branch analysis.
proc26: after final
Unknown library function 
proc51: before initialise
proc51: after initialise
proc51: before early
proc51: after early
proc51: before middle
proc51: before fixing call and phi refs
proc51: after fixing call and phi refs
proc51: before finding preserveds
proc51: after finding preserveds
proc51: before fixing call and phi refs
proc51: after fixing call and phi refs
proc51: before updating arguments
proc51: after updating arguments
proc51: before reversing strength reduction
proc51: after reversing strength reduction
proc51: before finding preserveds
proc51: after finding preserveds
proc51: before fixing call and phi refs
proc51: after fixing call and phi refs
proc51: before finding preserveds
proc51: after finding preserveds
proc51: before finding preserveds
proc51: after finding preserveds
proc51: before fixing call and phi refs
proc51: after fixing call and phi refs
proc51: before finding preserveds
proc51: after finding preserveds
proc51: before finding preserveds
proc51: after finding preserveds
proc51: before fixing call and phi refs
proc51: after fixing call and phi refs
proc51: before finding preserveds
proc51: after finding preserveds
proc51: before propagating statements
proc51: after propagating statements
proc51: before removing stack pointer assigns.
proc51: after removing stack pointer assigns.
proc51: before removing matching assigns (t[WILDSTR]).
proc51: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc51: before removing matching assigns (%pc).
proc51: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc51: before fixing call and phi refs
proc51: after fixing call and phi refs
proc51: before finding preserveds
proc51: after finding preserveds
proc51: after middle
proc51: before final
proc51: before adding implicit assigns
proc51: after adding implicit assigns
proc51: before dfa type analysis
WARNING: size 16 meet with /*signed?*/int; allowing temporarily
WARNING: size 16 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc51 ###
proc51: before other uses of dfa type analysis
in proc proc51 adding addrExp r28{0} - 4 to local table
proc51: after dfa type analysis
proc51: before remUnusedStmtEtc
proc51: after remUnusedStmtEtc
proc51: before find final parameters.
finding final parameters for proc51
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r2
found new parameter r2
potential param r26
found new parameter r26
potential param r14
found new parameter r14
proc51: after find final parameters.
proc51: before updating arguments
proc51: after updating arguments
proc51: before branch analysis.
proc51: after branch analysis.
proc51: after final
proc52: before initialise
proc52: after initialise
proc52: before early
proc52: after early
proc52: before middle
proc52: before fixing call and phi refs
proc52: after fixing call and phi refs
proc52: before finding preserveds
proc52: after finding preserveds
proc52: before fixing call and phi refs
proc52: after fixing call and phi refs
proc52: before updating arguments
proc52: after updating arguments
proc52: before reversing strength reduction
proc52: after reversing strength reduction
proc52: before finding preserveds
proc52: after finding preserveds
proc52: before fixing call and phi refs
proc52: after fixing call and phi refs
proc52: before finding preserveds
proc52: after finding preserveds
proc52: before finding preserveds
proc52: after finding preserveds
proc52: before fixing call and phi refs
proc52: after fixing call and phi refs
proc52: before finding preserveds
proc52: after finding preserveds
proc52: before finding preserveds
proc52: after finding preserveds
proc52: before fixing call and phi refs
proc52: after fixing call and phi refs
proc52: before finding preserveds
proc52: after finding preserveds
proc52: before propagating statements
proc52: after propagating statements
proc52: before removing stack pointer assigns.
proc52: after removing stack pointer assigns.
proc52: before removing matching assigns (t[WILDSTR]).
proc52: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc52: before removing matching assigns (%pc).
proc52: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc52: before fixing call and phi refs
proc52: after fixing call and phi refs
proc52: before finding preserveds
proc52: after finding preserveds
proc52: after middle
proc52: before final
proc52: before adding implicit assigns
proc52: after adding implicit assigns
proc52: before dfa type analysis
WARNING: size 32 meet with unsigned char; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc52 ###
proc52: before other uses of dfa type analysis
in proc proc52 adding addrExp r28{0} - 8 to local table
in proc proc52 adding addrExp r28{0} - 12 to local table
in proc proc52 adding addrExp r28{0} - 4 to local table
in proc proc52 adding addrExp r28{0} - 8 to local table
in proc proc52 adding addrExp r28{0} - 12 to local table
in proc proc52 adding addrExp r28{0} - 8 to local table
in proc proc52 adding addrExp r28{0} - 12 to local table
in proc proc52 adding addrExp r28{0} - 8 to local table
in proc proc52 adding addrExp r28{0} - 12 to local table
proc52: after dfa type analysis
proc52: before remUnusedStmtEtc
proc52: after remUnusedStmtEtc
proc52: before find final parameters.
finding final parameters for proc52
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r24
found new parameter r24
potential param r10
found new parameter r10
potential param r14
found new parameter r14
potential param r26
found new parameter r26
proc52: after find final parameters.
proc52: before updating arguments
proc52: after updating arguments
proc52: before branch analysis.
proc52: after branch analysis.
proc52: after final
proc53: before initialise
proc53: after initialise
proc53: before early
proc53: after early
proc53: before middle
proc53: before fixing call and phi refs
proc53: after fixing call and phi refs
proc53: before finding preserveds
proc53: after finding preserveds
proc53: before fixing call and phi refs
proc53: after fixing call and phi refs
proc53: before updating arguments
proc53: after updating arguments
proc53: before reversing strength reduction
proc53: after reversing strength reduction
proc53: before finding preserveds
proc53: after finding preserveds
proc53: before fixing call and phi refs
proc53: after fixing call and phi refs
proc53: before finding preserveds
proc53: after finding preserveds
proc53: before finding preserveds
proc53: after finding preserveds
proc53: before fixing call and phi refs
proc53: after fixing call and phi refs
proc53: before finding preserveds
proc53: after finding preserveds
proc53: before finding preserveds
proc53: after finding preserveds
proc53: before fixing call and phi refs
proc53: after fixing call and phi refs
proc53: before finding preserveds
proc53: after finding preserveds
proc53: before propagating statements
proc53: after propagating statements
proc53: before removing stack pointer assigns.
proc53: after removing stack pointer assigns.
proc53: before removing matching assigns (t[WILDSTR]).
proc53: after removing matching assigns (t[WILDSTR]).
after removing matching assigns (t[WILDSTR]).
proc53: before removing matching assigns (%pc).
proc53: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc53: before fixing call and phi refs
proc53: after fixing call and phi refs
proc53: before finding preserveds
proc53: after finding preserveds
proc53: after middle
proc53: before final
proc53: before adding implicit assigns
proc53: after adding implicit assigns
proc53: before dfa type analysis
WARNING: size 16 meet with /*signed?*/int; allowing temporarily
WARNING: size 16 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc53 ###
proc53: before other uses of dfa type analysis
in proc proc53 adding addrExp r28{0} - 4 to local table
proc53: after dfa type analysis
proc53: before remUnusedStmtEtc
proc53: after remUnusedStmtEtc
proc53: before find final parameters.
finding final parameters for proc53
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r24
found new parameter r24
potential param r2
found new parameter r2
potential param r14
found new parameter r14
potential param r26
found new parameter r26
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
proc53: after find final parameters.
proc53: before updating arguments
proc53: after updating arguments
proc53: before branch analysis.
proc53: after branch analysis.
proc53: after final
proc54: before initialise
proc54: after initialise
proc54: before early
assgn   16 *32* %pc := m[0x407034]
is readonly
assgn   22 *32* r30 := m[0x407038]
is readonly
assgn   53 *32* r24 := m[0x40ab64]
assgn   65 *32* r24 := m[0x40ab68]
assgn   86 *32* %pc := m[0x40ab60]
proc54: before fixing call and phi refs
proc54: after fixing call and phi refs
undoComputedBB for statement   87 <all> := CALL proc26(<all>)
              Reaching definitions: r24=r24{111},   r25=r25{112},   r26=r26{113},   r27=r27{114},   r28=r28{115} - 20,
                r30=r30{116},   r31=r31{117},   tmp1=tmp1{118},   %flags=%flags{119},   %ZF=%ZF{120},   %CF=%CF{121}
              Live variables: 
proc54: after early
proc54: before middle
proc54: before fixing call and phi refs
proc54: after fixing call and phi refs
proc54: before finding preserveds
proc54: after finding preserveds
proc54: before fixing call and phi refs
proc54: after fixing call and phi refs
proc54: before updating arguments
proc54: after updating arguments
proc54: before reversing strength reduction
proc54: after reversing strength reduction
proc54: before finding preserveds
proc54: after finding preserveds
proc54: before fixing call and phi refs
proc54: after fixing call and phi refs
proc54: before finding preserveds
proc54: after finding preserveds
proc54: before finding preserveds
proc54: after finding preserveds
proc54: before fixing call and phi refs
proc54: after fixing call and phi refs
proc54: before finding preserveds
proc54: after finding preserveds
proc54: before finding preserveds
proc54: after finding preserveds
proc54: before fixing call and phi refs
proc54: after fixing call and phi refs
proc54: before finding preserveds
proc54: after finding preserveds
proc54: before propagating statements
proc54: after propagating statements
proc54: before removing matching assigns (%pc).
proc54: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc54: before fixing call and phi refs
proc54: after fixing call and phi refs
decodeIndirectJmp: COMPCALL:
00405319   27 *32* r28 := r28{-} - 24
           28 *32* m[r28{-} - 24] := %pc
           30 {*32* r24, *32* r30, *32* r25, *32* r26, *32* r27, *32* r28, *32* r31} := CALL 0x7a54(<all>)
              Reaching definitions: r24=r24{17},   r25=r25{17},   r26=r26{17},   r27=0,   r28=r28{-} - 24,   r30=0x7a54
                r31=r24{17},   m[r28{-} - 4]=r27{-},   m[r28{-} - 8]=r30{-},   m[r28{-} - 12]=r31{-},
                m[r28{-} - 16]=0x4074f8,   m[r28{-} - 20]=r24{17},   m[r28{-} - 24]=%pc,   tmp1=r24{17},
                %flags=SUBFLAGS32( r24{17}, 0, r24{17} ),   %ZF=r24{17} = 0,   %CF=r24{17} <u 0
              Live variables: 

decodeIndirect: propagated and const global converted call expression is 0x7a54
decodeIndirectJmp: COMPCALL:
0040532a   39 *32* r28 := r28{30} - 12
           40 *32* m[r28{30} - 12] := %pc
           42 {*32* r24, *32* r30, *v* r25, *v* r26, *32* r27, *32* r28, *32* r31} := CALL r30{30}(<all>)
              Reaching definitions: r24=r24{30},   r25=r25{30},   r26=r26{30},   r27=r27{30},   r28=r28{30} - 12,
                r30=r30{30},   r31=r31{30},   m[r28{-} - 4]=m[r28{-} - 4]{30},   m[r28{-} - 8]=m[r28{-} - 8]{30},
                m[r28{-} - 12]=m[r28{-} - 12]{30},   m[r28{-} - 16]=m[r28{-} - 16]{30},
                m[r28{-} - 20]=m[r28{-} - 20]{30},   m[r28{-} - 24]=m[r28{-} - 24]{30},   <all>=<all>{30},
                tmp1=r24{30},   %flags=LOGICALFLAGS32( r24{30} ),   %ZF=LOGICALFLAGS32( r24{30} ),
                %CF=LOGICALFLAGS32( r24{30} )
              Live variables: 

decodeIndirect: propagated and const global converted call expression is r30{30}
decodeIndirectJmp: COMPCALL:
00405337   48 *32* r28 := r28{42} - 12
           49 *32* m[r28{42} - 12] := %pc
           51 {*32* r24, *32* r30, *32* r25, *32* r26, *32* r27, *32* r28, *32* r31} := CALL r30{42}(<all>)
              Reaching definitions: r24=r24{42},   r25=r25{42},   r26=r26{42},   r27=r27{42},   r28=r28{42} - 12,
                r30=r30{42},   r31=r31{42},   m[r28{-} - 4]=m[r28{-} - 4]{42},   m[r28{-} - 8]=m[r28{-} - 8]{42},
                m[r28{-} - 12]=m[r28{-} - 12]{42},   m[r28{-} - 16]=m[r28{-} - 16]{42},
                m[r28{-} - 20]=m[r28{-} - 20]{42},   m[r28{-} - 24]=m[r28{-} - 24]{42},   <all>=<all>{42},
                tmp1=tmp1{42},   %flags=%flags{42},   %ZF=%ZF{42},   %CF=%CF{42}
              Live variables: 

decodeIndirect: propagated and const global converted call expression is r30{42}
decodeIndirectJmp: COMPCALL:
00405347   57 *32* r28 := r28{104} - 4
           58 *32* m[r28{104} - 4] := %pc
           60 {*32* r24, *32* r30, *32* r25, *32* r26, *32* r28, *32* r31} := CALL r24{53}(<all>)
              Reaching definitions: r24=r24{53},   r25=r25{101},   r26=r26{102},   r27=r27{103},   r28=r28{104} - 4,
                r30=r30{105},   r31=r31{106},   m[r28{-} - 4]=m[r28{-} - 4]{144},   m[r28{-} - 8]=m[r28{-} - 8]{145},
                m[r28{-} - 12]=m[r28{-} - 12]{146},   m[r28{-} - 16]=m[r28{-} - 16]{147},
                m[r28{-} - 20]=m[r28{-} - 20]{148},   m[r28{-} - 24]=m[r28{-} - 24]{149},   tmp1=r24{53},
                %flags=LOGICALFLAGS32( r24{53} ),   %ZF=LOGICALFLAGS32( r24{53} ),   %CF=LOGICALFLAGS32( r24{53} )
              Live variables: 

decodeIndirect: propagated and const global converted call expression is m[0x40ab64]
decodeIndirectJmp: COMPCALL:
00405359   71 *32* r28 := r28{60} - 8
           72 *32* m[r28{60} - 8] := %pc
           74 {*32* r24, *32* r30, *32* r25, *32* r26, *32* r28, *32* r31} := CALL r24{65}(<all>)
              Reaching definitions: r24=r24{65},   r25=r25{60},   r26=r26{60},   r27=r24{60},   r28=r28{60} - 8,
                r30=r30{60},   r31=r31{60},   m[r28{-} - 4]=m[r28{-} - 4]{60},   m[r28{-} - 8]=m[r28{-} - 8]{60},
                m[r28{-} - 12]=m[r28{-} - 12]{60},   m[r28{-} - 16]=m[r28{-} - 16]{60},
                m[r28{-} - 20]=m[r28{-} - 20]{60},   m[r28{-} - 24]=m[r28{-} - 24]{60},   <all>=<all>{60},
                tmp1=r24{65},   %flags=LOGICALFLAGS32( r24{65} ),   %ZF=LOGICALFLAGS32( r24{65} ),
                %CF=LOGICALFLAGS32( r24{65} )
              Live variables: 

decodeIndirect: propagated and const global converted call expression is m[0x40ab68]
proc54: before finding preserveds
proc54: after finding preserveds
proc54: after middle
proc54: before final
proc54: before adding implicit assigns
proc54: after adding implicit assigns
proc54: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc54 ###
proc54: before other uses of dfa type analysis
in proc proc54 adding addrExp r28{0} - 16 to local table
in proc proc54 adding addrExp r28{0} - 20 to local table
in proc proc54 adding addrExp r28{0} - 24 to local table
in proc proc54 adding addrExp r28{0} - 4 to local table
in proc proc54 adding addrExp r28{0} - 8 to local table
in proc proc54 adding addrExp r28{0} - 12 to local table
in proc proc54 adding addrExp r28{0} - 16 to local table
in proc proc54 adding addrExp r28{0} - 20 to local table
in proc proc54 adding addrExp r28{0} - 16 to local table
in proc proc54 adding addrExp r28{0} - 20 to local table
in proc proc54 adding addrExp r28{0} - 24 to local table
in proc proc54 adding addrExp r28{0} - 4 to local table
in proc proc54 adding addrExp r28{0} - 8 to local table
in proc proc54 adding addrExp r28{0} - 12 to local table
in proc proc54 adding addrExp r28{0} - 16 to local table
in proc proc54 adding addrExp r28{0} - 20 to local table
in proc proc54 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffe8 is not structure or array type
in proc proc54 adding addrExp r28{0} - 4 to local table
in proc proc54 adding addrExp r28{0} - 8 to local table
in proc proc54 adding addrExp r28{0} - 12 to local table
in proc proc54 adding addrExp r28{0} - 16 to local table
in proc proc54 adding addrExp r28{0} - 20 to local table
in proc proc54 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffe8 is not structure or array type
in proc proc54 adding addrExp r28{0} - 4 to local table
in proc proc54 adding addrExp r28{0} - 8 to local table
in proc proc54 adding addrExp r28{0} - 12 to local table
in proc proc54 adding addrExp r28{0} - 16 to local table
in proc proc54 adding addrExp r28{0} - 20 to local table
in proc proc54 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffe8 is not structure or array type
in proc proc54 adding addrExp r28{0} - 4 to local table
in proc proc54 adding addrExp r28{0} - 8 to local table
in proc proc54 adding addrExp r28{0} - 12 to local table
in proc proc54 adding addrExp r28{0} - 16 to local table
in proc proc54 adding addrExp r28{0} - 20 to local table
in proc proc54 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffffffffffe8 is not structure or array type
proc54: after dfa type analysis
proc54: before fixing call and phi refs
proc54: after fixing call and phi refs
undoComputedBB for statement   74 {*u32* r24, *32* r30, *32* r25, *32* r26, *v** r28, *32* r31} := CALL proc26(<all>)
              Reaching definitions: r24=global505,   r25=r25{60},   r26=r26{60},   r27=r24{60},   r28=r28{60} - 8,
                r30=r30{60},   r31=r31{60},   m[r28{-} - 4]=m[r28{-} - 4]{60},   m[r28{-} - 8]=m[r28{-} - 8]{60},
                m[r28{-} - 12]=m[r28{-} - 12]{60},   m[r28{-} - 16]=m[r28{-} - 16]{60},
                m[r28{-} - 20]=m[r28{-} - 20]{60},   m[r28{-} - 24]=m[r28{-} - 24]{60},
                m[r28{0} - 4]=m[r28{0} - 4]{60},   m[r28{0} - 8]=m[r28{0} - 8]{60},   m[r28{0} - 12]=m[r28{0} - 12]{60}
                m[r28{0} - 16]=m[r28{0} - 16]{60},   m[r28{0} - 20]=m[r28{0} - 20]{60},
                m[r28{0} - 24]=m[r28{0} - 24]{60},   <all>=<all>{60},   tmp1=global505,
                %flags=LOGICALFLAGS32( global505 ),   %ZF=LOGICALFLAGS32( global505 ),
                %CF=LOGICALFLAGS32( global505 )
              Live variables: 
proc54: before remUnusedStmtEtc
proc54: after remUnusedStmtEtc
proc54: before find final parameters.
finding final parameters for proc54
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r25
found new parameter r25
potential param r26
found new parameter r26
proc54: after find final parameters.
proc54: before updating arguments
proc54: after updating arguments
proc54: before branch analysis.
proc54: after branch analysis.
proc54: after final
proc50: before initialise
proc50: after initialise
proc50: before early
assgn   32 *32* r24 := m[0x40a9d0]
assgn   54 *32* %pc := m[0x40707c]
is readonly
assgn  193 *32* %pc := m[0x407098]
is readonly
assgn  199 *32* %pc := m[0x4070b4]
is readonly
proc50: after early
proc50: before middle
proc50: before fixing call and phi refs
proc50: after fixing call and phi refs
proc50: before finding preserveds
proc50: after finding preserveds
proc50: before fixing call and phi refs
proc50: after fixing call and phi refs
proc50: before updating arguments
proc50: after updating arguments
proc50: before reversing strength reduction
proc50: after reversing strength reduction
proc50: before finding preserveds
proc50: after finding preserveds
proc50: before fixing call and phi refs
proc50: after fixing call and phi refs
proc50: before finding preserveds
proc50: after finding preserveds
proc50: before finding preserveds
proc50: after finding preserveds
proc50: before fixing call and phi refs
proc50: after fixing call and phi refs
proc50: before finding preserveds
proc50: after finding preserveds
proc50: before finding preserveds
proc50: after finding preserveds
proc50: before fixing call and phi refs
proc50: after fixing call and phi refs
proc50: before finding preserveds
proc50: after finding preserveds
proc50: before propagating statements
proc50: after propagating statements
proc50: before removing matching assigns (%pc).
proc50: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc50: before fixing call and phi refs
proc50: after fixing call and phi refs
proc50: before finding preserveds
proc50: after finding preserveds
proc50: after middle
proc50: before final
proc50: before adding implicit assigns
proc50: after adding implicit assigns
proc50: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc50 ###
proc50: before other uses of dfa type analysis
in proc proc50 adding addrExp r28{0} - 424 to local table
in proc proc50 adding addrExp r28{0} - 448 to local table
in proc proc50 adding addrExp r28{0} - 452 to local table
in proc proc50 adding addrExp r28{0} - 164 to local table
in proc proc50 adding addrExp r28{0} - 432 to local table
in proc proc50 adding addrExp r28{0} - 436 to local table
in proc proc50 adding addrExp r28{0} - 440 to local table
in proc proc50 adding addrExp r28{0} - 444 to local table
in proc proc50 adding addrExp r28{0} - 456 to local table
in proc proc50 adding addrExp r28{0} - 460 to local table
in proc proc50 adding addrExp r28{0} - 464 to local table
in proc proc50 adding addrExp r28{0} - 468 to local table
in proc proc50 adding addrExp r28{0} - 472 to local table
in proc proc50 adding addrExp r28{0} - 476 to local table
in proc proc50 adding addrExp r28{0} - 480 to local table
in proc proc50 adding addrExp r28{0} - 4 to local table
in proc proc50 adding addrExp r28{0} - 428 to local table
in proc proc50 adding addrExp r28{0} - 432 to local table
in proc proc50 adding addrExp r28{0} - 436 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffffffffffe4c existing type void * but added type /*signed?*/int
in proc proc50 adding addrExp r28{0} - 440 to local table
in proc proc50 adding addrExp r28{0} - 444 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffffffffffe44 existing type LPCVOID but added type unsigned int
in proc proc50 adding addrExp r28{0} - 432 to local table
in proc proc50 adding addrExp r28{0} - 436 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffffffffffe4c existing type void * but added type /*signed?*/int
in proc proc50 adding addrExp r28{0} - 440 to local table
size 32 meet with size 8!
in proc proc50 adding addrExp r28{0} - 432 to local table
in proc proc50 adding addrExp r28{0} - 436 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffffffffffe4c existing type void * but added type /*signed?*/int
in proc proc50 adding addrExp r28{0} - 440 to local table
in proc proc50 adding addrExp r28{0} - 432 to local table
in proc proc50 adding addrExp r28{0} - 436 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffffffffffe4c existing type void * but added type /*signed?*/int
in proc proc50 adding addrExp r28{0} - 440 to local table
in proc proc50 adding addrExp r28{0} - 436 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffffffffffe4c existing type void * but added type /*signed?*/int
in proc proc50 adding addrExp r28{0} - 440 to local table
in proc proc50 adding addrExp r28{0} - 440 to local table
in proc proc50 adding addrExp r28{0} - 444 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffffffffffe44 existing type LPCVOID but added type unsigned int
in proc proc50 adding addrExp r28{0} - 448 to local table
in proc proc50 adding addrExp r28{0} - 452 to local table
in proc proc50 adding addrExp r28{0} - 436 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffffffffffe4c existing type void * but added type /*signed?*/int
in proc proc50 adding addrExp r28{0} - 440 to local table
in proc proc50 adding addrExp r28{0} - 444 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffffffffffe44 existing type LPCVOID but added type unsigned int
in proc proc50 adding addrExp r28{0} - 448 to local table
in proc proc50 adding addrExp r28{0} - 452 to local table
in proc proc50 adding addrExp r28{0} - 436 to local table
in proc proc50 adding addrExp r28{0} - 440 to local table
in proc proc50 adding addrExp r28{0} - 444 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffffffffffe44 existing type LPCVOID but added type unsigned int
in proc proc50 adding addrExp r28{0} - 444 to local table
in proc proc50 adding addrExp r28{0} - 448 to local table
in proc proc50 adding addrExp r28{0} - 452 to local table
in proc proc50 adding addrExp r28{0} - 452 to local table
in proc proc50 adding addrExp r28{0} - 456 to local table
in proc proc50 adding addrExp r28{0} - 460 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffffffffffe34 existing type /*signed?*/int * but added type unsigned int
in proc proc50 adding addrExp r28{0} - 460 to local table
in proc proc50 adding addrExp r28{0} - 464 to local table
in proc proc50 adding addrExp r28{0} - 468 to local table
in proc proc50 adding addrExp r28{0} - 468 to local table
in proc proc50 adding addrExp r28{0} - 472 to local table
in proc proc50 adding addrExp r28{0} - 476 to local table
in proc proc50 adding addrExp r28{0} - 480 to local table
in proc proc50 adding addrExp r28{0} - 432 to local table
in proc proc50 adding addrExp r28{0} - 436 to local table
in proc proc50 adding addrExp r28{0} - 440 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffffffffffe48 existing type unsigned int but added type __size8 *
in proc proc50 adding addrExp r28{0} - 444 to local table
in proc proc50 adding addrExp r28{0} - 440 to local table
in proc proc50 adding addrExp r28{0} - 444 to local table
in proc proc50 adding addrExp r28{0} - 448 to local table
in proc proc50 adding addrExp r28{0} - 452 to local table
in proc proc50 adding addrExp r28{0} - 448 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffffffffffe40 existing type /*signed?*/int but added type HANDLE
in proc proc50 adding addrExp r28{0} - 452 to local table
in proc proc50 adding addrExp r28{0} - 432 to local table
in proc proc50 adding addrExp r28{0} - 436 to local table
in proc proc50 adding addrExp r28{0} - 440 to local table
in proc proc50 adding addrExp r28{0} - 444 to local table
in proc proc50 adding addrExp r28{0} - 448 to local table
in proc proc50 adding addrExp r28{0} - 452 to local table
in proc proc50 adding addrExp r28{0} - 456 to local table
in proc proc50 adding addrExp r28{0} - 460 to local table
in proc proc50 adding addrExp r28{0} - 464 to local table
in proc proc50 adding addrExp r28{0} - 468 to local table
in proc proc50 adding addrExp r28{0} - 472 to local table
in proc proc50 adding addrExp r28{0} - 476 to local table
in proc proc50 adding addrExp r28{0} - 480 to local table
proc50: after dfa type analysis
proc50: before remUnusedStmtEtc
proc50: after remUnusedStmtEtc
proc50: before find final parameters.
finding final parameters for proc50
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 424]
found new parameter m[r28{0} - 424]
potential param r2
found new parameter r2
potential param r14
found new parameter r14
potential param r10
found new parameter r10
potential param r31
found new parameter r31
potential param m[r28{0} - 164]
found new parameter m[r28{0} - 164]
potential param r8
found new parameter r8
potential param r12
found new parameter r12
potential param r27
found new parameter r27
proc50: after find final parameters.
proc50: before updating arguments
proc50: after updating arguments
proc50: before branch analysis.
proc50: after branch analysis.
proc50: after final
proc49: before initialise
proc49: after initialise
proc49: before early
assgn    1 *32* r24 := m[0x40a9d0]
assgn   17 *32* r24 := m[0x40ab48]
proc49: after early
proc49: before middle
proc49: before fixing call and phi refs
proc49: after fixing call and phi refs
proc49: before finding preserveds
proc49: after finding preserveds
proc49: before fixing call and phi refs
proc49: after fixing call and phi refs
proc49: before updating arguments
proc49: after updating arguments
proc49: before reversing strength reduction
proc49: after reversing strength reduction
proc49: before finding preserveds
proc49: after finding preserveds
proc49: before fixing call and phi refs
proc49: after fixing call and phi refs
proc49: before finding preserveds
proc49: after finding preserveds
proc49: before finding preserveds
proc49: after finding preserveds
proc49: before fixing call and phi refs
proc49: after fixing call and phi refs
proc49: before finding preserveds
proc49: after finding preserveds
proc49: before finding preserveds
proc49: after finding preserveds
proc49: before fixing call and phi refs
proc49: after fixing call and phi refs
proc49: before finding preserveds
proc49: after finding preserveds
proc49: before propagating statements
proc49: after propagating statements
proc49: before removing matching assigns (%pc).
proc49: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc49: before fixing call and phi refs
proc49: after fixing call and phi refs
decodeIndirectJmp: COMPCALL:
00402d3b   23 *32* r28 := r28{-} - 4
           24 *32* m[r28{-} - 4] := %pc
           26 {*32* r24, *32* r30, *16* r2, *8* r8, *8* r10, *8* r12, *8* r14, *32* r25, *32* r26, *32* r27, *32* r28, *32* r31} := CALL r24{17}(<all>)
              Reaching definitions: r2=r2{16},   r8=r8{16},   r10=r10{16},   r12=r12{16},   r14=r14{16},   r24=r24{17},
                r25=252,   r26=r26{16},   r27=r27{16},   r28=(r28{-} - 8) + 4,   r30=r30{16},   r31=r31{16},
                m[r28{-} - 4]=%pc,   m[r28{-} - 8]=%pc,   tmp1=r24{17},   %flags=LOGICALFLAGS32( r24{17} ),
                %ZF=LOGICALFLAGS32( r24{17} ),   %CF=LOGICALFLAGS32( r24{17} )
              Live variables: 

decodeIndirect: propagated and const global converted call expression is m[0x40ab48]
proc49: before finding preserveds
proc49: after finding preserveds
proc49: after middle
proc49: before final
proc49: before adding implicit assigns
proc49: after adding implicit assigns
proc49: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc49 ###
proc49: before other uses of dfa type analysis
in proc proc49 adding addrExp r28{0} - 432 to local table
in proc proc49 adding addrExp r28{0} - 172 to local table
in proc proc49 adding addrExp r28{0} - 4 to local table
in proc proc49 adding addrExp r28{0} - 8 to local table
in proc proc49 adding addrExp r28{0} - 4 to local table
in proc proc49 adding addrExp r28{0} - 8 to local table
in proc proc49 adding addrExp r28{0} - 4 to local table
in proc proc49 adding addrExp r28{0} - 4 to local table
in proc proc49 adding addrExp r28{0} - 8 to local table
in proc proc49 adding addrExp r28{0} - 4 to local table
in proc proc49 adding addrExp r28{0} - 8 to local table
proc49: after dfa type analysis
proc49: before fixing call and phi refs
proc49: after fixing call and phi refs
undoComputedBB for statement   26 {*32* r24, *32* r30, *j16* r2, *8* r8, *j8* r10, *8* r12, *j8* r14, *32* r25, *32* r26, *32* r27, *v** r28, *32* r31} := CALL proc26(<all>)
              Reaching definitions: r2=r2{16},   r8=r8{16},   r10=r10{16},   r12=r12{16},   r14=r14{16},
                r24=global531,   r25=252,   r26=r26{16},   r27=r27{16},   r28=(r28{0} - 8) + 4,   r30=r30{16},
                r31=r31{16},   m[r28{0} - 4]=%pc,   m[r28{0} - 8]=%pc,   m[r28{0} - 172]=m[r28{0} - 172]{0},
                m[r28{0} - 432]=m[r28{0} - 432]{0},   tmp1=global531,   %flags=LOGICALFLAGS32( global531 ),
                %ZF=LOGICALFLAGS32( global531 ),   %CF=LOGICALFLAGS32( global531 )
              Live variables: 
proc49: before remUnusedStmtEtc
proc49: after remUnusedStmtEtc
proc49: before find final parameters.
finding final parameters for proc49
potential param m[r28{0} - 432]
found new parameter m[r28{0} - 432]
potential param m[r28{0} - 172]
found new parameter m[r28{0} - 172]
potential param r2
found new parameter r2
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r14
found new parameter r14
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r30
found new parameter r30
proc49: after find final parameters.
proc49: before updating arguments
proc49: after updating arguments
proc49: before branch analysis.
proc49: after branch analysis.
proc49: after final
proc48: before initialise
proc48: after initialise
proc48: before early
assgn   18 *32* %pc := m[0x408060]
proc48: after early
proc48: before middle
proc48: before fixing call and phi refs
proc48: after fixing call and phi refs
proc48: before finding preserveds
proc48: after finding preserveds
proc48: before fixing call and phi refs
proc48: after fixing call and phi refs
proc48: before updating arguments
proc48: after updating arguments
proc48: before reversing strength reduction
proc48: after reversing strength reduction
proc48: before finding preserveds
proc48: after finding preserveds
proc48: before fixing call and phi refs
proc48: after fixing call and phi refs
proc48: before finding preserveds
proc48: after finding preserveds
proc48: before finding preserveds
proc48: after finding preserveds
proc48: before fixing call and phi refs
proc48: after fixing call and phi refs
proc48: before finding preserveds
proc48: after finding preserveds
proc48: before finding preserveds
proc48: after finding preserveds
proc48: before fixing call and phi refs
proc48: after fixing call and phi refs
proc48: before finding preserveds
proc48: after finding preserveds
proc48: before propagating statements
proc48: after propagating statements
proc48: before removing matching assigns (%pc).
proc48: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc48: before fixing call and phi refs
proc48: after fixing call and phi refs
proc48: before finding preserveds
proc48: after finding preserveds
proc48: after middle
proc48: before final
proc48: before adding implicit assigns
proc48: after adding implicit assigns
proc48: before dfa type analysis
proc48: before other uses of dfa type analysis
in proc proc48 adding addrExp r28{0} - 436 to local table
in proc proc48 adding addrExp r28{0} - 176 to local table
in proc proc48 adding addrExp r28{0} - 4 to local table
in proc proc48 adding addrExp r28{0} - 4 to local table
in proc proc48 adding addrExp r28{0} - 4 to local table
proc48: after dfa type analysis
proc48: before remUnusedStmtEtc
proc48: after remUnusedStmtEtc
proc48: before find final parameters.
finding final parameters for proc48
potential param r28
found new parameter r28
potential param m[r28{0} - 436]
found new parameter m[r28{0} - 436]
potential param m[r28{0} - 176]
found new parameter m[r28{0} - 176]
potential param r2
found new parameter r2
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r14
found new parameter r14
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
proc48: after find final parameters.
proc48: before updating arguments
proc48: after updating arguments
proc48: before branch analysis.
proc48: after branch analysis.
proc48: after final
proc47: before initialise
proc47: after initialise
proc47: before early
proc47: after early
proc47: before middle
proc47: before fixing call and phi refs
proc47: after fixing call and phi refs
proc47: before finding preserveds
proc47: after finding preserveds
proc47: before fixing call and phi refs
proc47: after fixing call and phi refs
proc47: before updating arguments
proc47: after updating arguments
proc47: before reversing strength reduction
proc47: after reversing strength reduction
proc47: before finding preserveds
proc47: after finding preserveds
proc47: before fixing call and phi refs
proc47: after fixing call and phi refs
proc47: before finding preserveds
proc47: after finding preserveds
proc47: before finding preserveds
proc47: after finding preserveds
proc47: before fixing call and phi refs
proc47: after fixing call and phi refs
proc47: before finding preserveds
proc47: after finding preserveds
proc47: before finding preserveds
proc47: after finding preserveds
proc47: before fixing call and phi refs
proc47: after fixing call and phi refs
proc47: before finding preserveds
proc47: after finding preserveds
proc47: before propagating statements
proc47: after propagating statements
proc47: before removing matching assigns (%pc).
proc47: after removing matching assigns (%pc).
after removing matching assigns (%pc).
proc47: before fixing call and phi refs
proc47: after fixing call and phi refs
proc47: before finding preserveds
proc47: after finding preserveds
proc47: after middle
proc47: before final
proc47: before adding implicit assigns
proc47: after adding implicit assigns
proc47: before dfa type analysis
proc47: before other uses of dfa type analysis
in proc proc47 adding addrExp r28{0} - 444 to local table
in proc proc47 adding addrExp r28{0} - 184 to local table
in proc proc47 adding addrExp r28{0} - 4 to local table
in proc proc47 adding addrExp r28{0} - 8 to local table
proc47: after dfa type analysis
proc47: before remUnusedStmtEtc
proc47: after remUnusedStmtEtc
proc47: before find final parameters.
finding final parameters for proc47
potential param r28
found new parameter r28
potential param m[r28{0} - 444]
found new parameter m[r28{0} - 444]
potential param m[r28{0} - 184]
found new parameter m[r28{0} - 184]
potential param r2
found new parameter r2
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r14
found new parameter r14
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
proc47: after find final parameters.
proc47: before updating arguments
proc47: after updating arguments
proc47: before branch analysis.
proc47: after branch analysis.
proc47: after final
WinMain: before adding implicit assigns
WinMain: after adding implicit assigns
WinMain: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure WinMain ###
WinMain: before other uses of dfa type analysis
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
could not set type for unknown parameter expression m[r28{0} + 16]
WinMain: after dfa type analysis
proc1: before adding implicit assigns
proc1: after adding implicit assigns
proc1: before dfa type analysis
proc1: before other uses of dfa type analysis
proc1: after dfa type analysis
proc2: before adding implicit assigns
proc2: after adding implicit assigns
proc2: before dfa type analysis
proc2: before other uses of dfa type analysis
proc2: after dfa type analysis
proc3: before adding implicit assigns
proc3: after adding implicit assigns
proc3: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
proc3: before other uses of dfa type analysis
proc3: after dfa type analysis
proc4: before adding implicit assigns
proc4: after adding implicit assigns
proc4: before dfa type analysis
proc4: before other uses of dfa type analysis
proc4: after dfa type analysis
proc5: before adding implicit assigns
proc5: after adding implicit assigns
proc5: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
proc5: before other uses of dfa type analysis
proc5: after dfa type analysis
proc6: before adding implicit assigns
proc6: after adding implicit assigns
proc6: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
proc6: before other uses of dfa type analysis
in proc proc6 adding addrExp r28{0} - 8 to local table
proc6: after dfa type analysis
proc7: before adding implicit assigns
proc7: after adding implicit assigns
proc7: before dfa type analysis
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
integer size 32 meet with SizeType size 8!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc7 ###
proc7: before other uses of dfa type analysis
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 596 to local table
in proc proc7 adding addrExp r28{0} - 600 to local table
in proc proc7 adding addrExp r28{0} - 604 to local table
proc7: after dfa type analysis
proc8: before adding implicit assigns
proc8: after adding implicit assigns
proc8: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc8 ###
proc8: before other uses of dfa type analysis
in proc proc8 adding addrExp r28{0} - 0x440 to local table
in proc proc8 adding addrExp r28{0} - 56 to local table
proc8: after dfa type analysis
proc9: before adding implicit assigns
proc9: after adding implicit assigns
proc9: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc9 ###
proc9: before other uses of dfa type analysis
proc9: after dfa type analysis
proc10: before adding implicit assigns
proc10: after adding implicit assigns
proc10: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc10 ###
proc10: before other uses of dfa type analysis
proc10: after dfa type analysis
proc11: before adding implicit assigns
proc11: after adding implicit assigns
proc11: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc11 ###
proc11: before other uses of dfa type analysis
in proc proc11 adding addrExp r28{0} - 0x434 to local table
in proc proc11 adding addrExp r28{0} - 44 to local table
in proc proc11 adding addrExp r28{0} - 24 to local table
proc11: after dfa type analysis
proc12: before adding implicit assigns
proc12: after adding implicit assigns
proc12: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc12 ###
proc12: before other uses of dfa type analysis
in proc proc12 adding addrExp r28{0} - 0x418 to local table
in proc proc12 adding addrExp r28{0} - 16 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 0x438 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 0x438 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
proc12: after dfa type analysis
proc13: before adding implicit assigns
proc13: after adding implicit assigns
proc13: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc13 ###
proc13: before other uses of dfa type analysis
proc13: after dfa type analysis
proc14: before adding implicit assigns
proc14: after adding implicit assigns
proc14: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc14 ###
proc14: before other uses of dfa type analysis
proc14: after dfa type analysis
proc15: before adding implicit assigns
proc15: after adding implicit assigns
proc15: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc15 ###
proc15: before other uses of dfa type analysis
proc15: after dfa type analysis
proc16: before adding implicit assigns
proc16: after adding implicit assigns
proc16: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc16 ###
proc16: before other uses of dfa type analysis
proc16: after dfa type analysis
proc17: before adding implicit assigns
proc17: after adding implicit assigns
proc17: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc17 ###
proc17: before other uses of dfa type analysis
in proc proc17 adding addrExp r28{0} - 24 to local table
in proc proc17 adding addrExp r28{0} - 76 to local table
in proc proc17 adding addrExp r28{0} - 52 to local table
in proc proc17 adding addrExp r28{0} - 48 to local table
in proc proc17 adding addrExp r28{0} - 44 to local table
in proc proc17 adding addrExp r28{0} - 40 to local table
proc17: after dfa type analysis
proc18: before adding implicit assigns
proc18: after adding implicit assigns
proc18: before dfa type analysis
proc18: before other uses of dfa type analysis
proc18: after dfa type analysis
proc19: before adding implicit assigns
proc19: after adding implicit assigns
proc19: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc19 ###
proc19: before other uses of dfa type analysis
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 20 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
proc19: after dfa type analysis
proc20: before adding implicit assigns
proc20: after adding implicit assigns
proc20: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc20 ###
proc20: before other uses of dfa type analysis
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 64 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 40 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 36 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
proc20: after dfa type analysis
proc21: before adding implicit assigns
proc21: after adding implicit assigns
proc21: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc21 ###
proc21: before other uses of dfa type analysis
proc21: after dfa type analysis
proc22: before adding implicit assigns
proc22: after adding implicit assigns
proc22: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc22 ###
proc22: before other uses of dfa type analysis
proc22: after dfa type analysis
proc23: before adding implicit assigns
proc23: after adding implicit assigns
proc23: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc23 ###
proc23: before other uses of dfa type analysis
in proc proc23 adding addrExp r28{0} - 24 to local table
in proc proc23 adding addrExp r28{0} - 24 to local table
in proc proc23 adding addrExp r28{0} - 24 to local table
in proc proc23 adding addrExp r28{0} - 24 to local table
in proc proc23 adding addrExp r28{0} - 24 to local table
in proc proc23 adding addrExp r28{0} - 24 to local table
in proc proc23 adding addrExp r28{0} - 24 to local table
proc23: after dfa type analysis
proc24: before adding implicit assigns
proc24: after adding implicit assigns
proc24: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc24 ###
proc24: before other uses of dfa type analysis
proc24: after dfa type analysis
proc25: before adding implicit assigns
proc25: after adding implicit assigns
proc25: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc25 ###
proc25: before other uses of dfa type analysis
in proc proc25 adding addrExp r28{0} - 28 to local table
proc25: after dfa type analysis
proc26: before adding implicit assigns
proc26: after adding implicit assigns
proc26: before dfa type analysis
proc26: before other uses of dfa type analysis
proc26: after dfa type analysis
proc27: before adding implicit assigns
proc27: after adding implicit assigns
proc27: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc27 ###
proc27: before other uses of dfa type analysis
proc27: after dfa type analysis
proc28: before adding implicit assigns
proc28: after adding implicit assigns
proc28: before dfa type analysis
proc28: before other uses of dfa type analysis
proc28: after dfa type analysis
proc29: before adding implicit assigns
proc29: after adding implicit assigns
proc29: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc29 ###
proc29: before other uses of dfa type analysis
proc29: after dfa type analysis
proc30: before adding implicit assigns
proc30: after adding implicit assigns
proc30: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc30 ###
proc30: before other uses of dfa type analysis
proc30: after dfa type analysis
proc31: before adding implicit assigns
proc31: after adding implicit assigns
proc31: before dfa type analysis
proc31: before other uses of dfa type analysis
proc31: after dfa type analysis
proc32: before adding implicit assigns
proc32: after adding implicit assigns
proc32: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc32 ###
proc32: before other uses of dfa type analysis
proc32: after dfa type analysis
proc33: before adding implicit assigns
proc33: after adding implicit assigns
proc33: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc33 ###
proc33: before other uses of dfa type analysis
in proc proc33 adding addrExp r28{0} - 72 to local table
in proc proc33 adding addrExp r28{0} - 68 to local table
in proc proc33 adding addrExp r28{0} - 64 to local table
in proc proc33 adding addrExp r28{0} - 60 to local table
in proc proc33 adding addrExp r28{0} - 24 to local table
proc33: after dfa type analysis
proc34: before adding implicit assigns
proc34: after adding implicit assigns
proc34: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc34 ###
proc34: before other uses of dfa type analysis
proc34: after dfa type analysis
proc35: before adding implicit assigns
proc35: after adding implicit assigns
proc35: before dfa type analysis
proc35: before other uses of dfa type analysis
proc35: after dfa type analysis
proc36: before adding implicit assigns
proc36: after adding implicit assigns
proc36: before dfa type analysis
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
WARNING: size 32 meet with unsigned long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc36 ###
proc36: before other uses of dfa type analysis
proc36: after dfa type analysis
proc37: before adding implicit assigns
proc37: after adding implicit assigns
proc37: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc37 ###
proc37: before other uses of dfa type analysis
proc37: after dfa type analysis
proc38: before adding implicit assigns
proc38: after adding implicit assigns
proc38: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc38 ###
proc38: before other uses of dfa type analysis
proc38: after dfa type analysis
proc39: before adding implicit assigns
proc39: after adding implicit assigns
proc39: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc39 ###
proc39: before other uses of dfa type analysis
proc39: after dfa type analysis
proc40: before adding implicit assigns
proc40: after adding implicit assigns
proc40: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc40 ###
proc40: before other uses of dfa type analysis
proc40: after dfa type analysis
proc41: before adding implicit assigns
proc41: after adding implicit assigns
proc41: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc41 ###
proc41: before other uses of dfa type analysis
in proc proc41 adding addrExp r28{0} - 8 to local table
in proc proc41 adding addrExp r28{0} - 8 to local table
in proc proc41 adding addrExp r28{0} - 8 to local table
in proc proc41 adding addrExp r28{0} - 8 to local table
in proc proc41 adding addrExp r28{0} - 8 to local table
proc41: after dfa type analysis
proc42: before adding implicit assigns
proc42: after adding implicit assigns
proc42: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc42 ###
proc42: before other uses of dfa type analysis
proc42: after dfa type analysis
proc43: before adding implicit assigns
proc43: after adding implicit assigns
proc43: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc43 ###
proc43: before other uses of dfa type analysis
in proc proc43 adding addrExp r28{0} - 44 to local table
in proc proc43 adding addrExp r28{0} - 40 to local table
in proc proc43 adding addrExp r28{0} - 36 to local table
in proc proc43 adding addrExp r28{0} - 32 to local table
proc43: after dfa type analysis
proc44: before adding implicit assigns
proc44: after adding implicit assigns
proc44: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc44 ###
proc44: before other uses of dfa type analysis
proc44: after dfa type analysis
proc45: before adding implicit assigns
proc45: after adding implicit assigns
proc45: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc45 ###
proc45: before other uses of dfa type analysis
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 28 to local table
in proc proc45 adding addrExp r28{0} - 32 to local table
in proc proc45 adding addrExp r28{0} - 36 to local table
in proc proc45 adding addrExp r28{0} - 8 to local table
in proc proc45 adding addrExp r28{0} - 8 to local table
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 28 to local table
in proc proc45 adding addrExp r28{0} - 32 to local table
in proc proc45 adding addrExp r28{0} - 36 to local table
in proc proc45 adding addrExp r28{0} - 8 to local table
in proc proc45 adding addrExp r28{0} - 8 to local table
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 28 to local table
in proc proc45 adding addrExp r28{0} - 32 to local table
in proc proc45 adding addrExp r28{0} - 36 to local table
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 28 to local table
in proc proc45 adding addrExp r28{0} - 32 to local table
in proc proc45 adding addrExp r28{0} - 36 to local table
in proc proc45 adding addrExp r28{0} - 8 to local table
in proc proc45 adding addrExp r28{0} - 8 to local table
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 28 to local table
in proc proc45 adding addrExp r28{0} - 32 to local table
in proc proc45 adding addrExp r28{0} - 36 to local table
in proc proc45 adding addrExp r28{0} - 8 to local table
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 28 to local table
in proc proc45 adding addrExp r28{0} - 32 to local table
in proc proc45 adding addrExp r28{0} - 36 to local table
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 28 to local table
in proc proc45 adding addrExp r28{0} - 8 to local table
in proc proc45 adding addrExp r28{0} - 24 to local table
in proc proc45 adding addrExp r28{0} - 28 to local table
in proc proc45 adding addrExp r28{0} - 32 to local table
in proc proc45 adding addrExp r28{0} - 36 to local table
proc45: after dfa type analysis
proc46: before adding implicit assigns
proc46: after adding implicit assigns
proc46: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc46 ###
proc46: before other uses of dfa type analysis
in proc proc46 adding addrExp r28{0} - 16 to local table
in proc proc46 adding addrExp r28{0} - 16 to local table
proc46: after dfa type analysis
proc47: before adding implicit assigns
proc47: after adding implicit assigns
proc47: before dfa type analysis
proc47: before other uses of dfa type analysis
in proc proc47 adding addrExp r28{0} - 444 to local table
in proc proc47 adding addrExp r28{0} - 184 to local table
proc47: after dfa type analysis
proc48: before adding implicit assigns
proc48: after adding implicit assigns
proc48: before dfa type analysis
proc48: before other uses of dfa type analysis
in proc proc48 adding addrExp r28{0} - 436 to local table
in proc proc48 adding addrExp r28{0} - 176 to local table
proc48: after dfa type analysis
proc49: before adding implicit assigns
proc49: after adding implicit assigns
proc49: before dfa type analysis
proc49: before other uses of dfa type analysis
in proc proc49 adding addrExp r28{0} - 432 to local table
in proc proc49 adding addrExp r28{0} - 172 to local table
proc49: after dfa type analysis
proc50: before adding implicit assigns
proc50: after adding implicit assigns
proc50: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc50 ###
proc50: before other uses of dfa type analysis
in proc proc50 adding addrExp r28{0} - 424 to local table
in proc proc50 adding addrExp r28{0} - 164 to local table
size 32 meet with size 8!
proc50: after dfa type analysis
proc51: before adding implicit assigns
proc51: after adding implicit assigns
proc51: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc51 ###
proc51: before other uses of dfa type analysis
proc51: after dfa type analysis
proc52: before adding implicit assigns
proc52: after adding implicit assigns
proc52: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc52 ###
proc52: before other uses of dfa type analysis
proc52: after dfa type analysis
proc53: before adding implicit assigns
proc53: after adding implicit assigns
proc53: before dfa type analysis
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc53 ###
proc53: before other uses of dfa type analysis
proc53: after dfa type analysis
proc54: before adding implicit assigns
proc54: after adding implicit assigns
proc54: before dfa type analysis
proc54: before other uses of dfa type analysis
proc54: after dfa type analysis
proc3: before removing unused returns
proc3: before removing redundant parameters
proc3: after removing redundant parameters
proc3: before removing redundant parameters
proc3: after removing redundant parameters
proc3: before final
proc3: before remUnusedStmtEtc
proc3: after remUnusedStmtEtc
proc3: before find final parameters.
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc3: after find final parameters.
proc3: before updating arguments
proc3: after updating arguments
proc3: before branch analysis.
proc3: after branch analysis.
proc3: after final
proc3: before removing redundant parameters
proc3: after removing redundant parameters
WinMain: before final
WinMain: before remUnusedStmtEtc
WinMain: after remUnusedStmtEtc
WinMain: before find final parameters.
WinMain: before updating arguments
WinMain: after updating arguments
WinMain: before branch analysis.
WinMain: after branch analysis.
WinMain: after final
proc3: after removing unused and redundant returns
proc4: before removing unused returns
proc4: before removing redundant parameters
proc4: after removing redundant parameters
proc4: before removing redundant parameters
proc4: after removing redundant parameters
proc4: after removing unused and redundant returns
proc2: before removing unused returns
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc2: before final
proc2: before remUnusedStmtEtc
proc2: after remUnusedStmtEtc
proc2: before find final parameters.
finding final parameters for proc2
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r31
found new parameter r31
proc2: after find final parameters.
proc2: before updating arguments
proc2: after updating arguments
proc2: before branch analysis.
proc2: after branch analysis.
proc2: after final
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc1: before final
proc1: before remUnusedStmtEtc
proc1: after remUnusedStmtEtc
proc1: before find final parameters.
finding final parameters for proc1
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r31
found new parameter r31
proc1: after find final parameters.
proc1: before updating arguments
proc1: after updating arguments
proc1: before branch analysis.
proc1: after branch analysis.
proc1: after final
proc1: before removing redundant parameters
proc1: after removing redundant parameters
proc2: after removing unused and redundant returns
proc1: before removing unused returns
proc1: before removing redundant parameters
proc1: after removing redundant parameters
proc1: before removing redundant parameters
proc1: after removing redundant parameters
proc1: before final
proc1: before remUnusedStmtEtc
proc1: after remUnusedStmtEtc
proc1: before find final parameters.
finding final parameters for proc1
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r31
found new parameter r31
proc1: after find final parameters.
proc1: before updating arguments
proc1: after updating arguments
proc1: before branch analysis.
proc1: after branch analysis.
proc1: after final
proc1: before removing redundant parameters
proc1: after removing redundant parameters
WinMain: before final
WinMain: before remUnusedStmtEtc
WinMain: after remUnusedStmtEtc
WinMain: before find final parameters.
WinMain: before updating arguments
WinMain: after updating arguments
WinMain: before branch analysis.
WinMain: after branch analysis.
WinMain: after final
proc1: after removing unused and redundant returns
proc2: before removing unused returns
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc2: before final
proc2: before remUnusedStmtEtc
proc2: after remUnusedStmtEtc
proc2: before find final parameters.
finding final parameters for proc2
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r31
found new parameter r31
proc2: after find final parameters.
proc2: before updating arguments
proc2: after updating arguments
proc2: before branch analysis.
proc2: after branch analysis.
proc2: after final
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc1: before final
proc1: before remUnusedStmtEtc
proc1: after remUnusedStmtEtc
proc1: before find final parameters.
finding final parameters for proc1
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r31
found new parameter r31
proc1: after find final parameters.
proc1: before updating arguments
proc1: after updating arguments
proc1: before branch analysis.
proc1: after branch analysis.
proc1: after final
proc1: before removing redundant parameters
proc1: after removing redundant parameters
proc2: after removing unused and redundant returns
proc1: before removing unused returns
proc1: before removing redundant parameters
proc1: after removing redundant parameters
proc1: before removing redundant parameters
proc1: after removing redundant parameters
proc1: after removing unused and redundant returns
WinMain: before removing unused returns
WinMain: before final
WinMain: before remUnusedStmtEtc
WinMain: after remUnusedStmtEtc
WinMain: before find final parameters.
WinMain: before updating arguments
WinMain: after updating arguments
WinMain: before branch analysis.
WinMain: after branch analysis.
WinMain: after final
proc4: before removing unused returns
proc4: before removing redundant parameters
proc4: after removing redundant parameters
proc4: before removing redundant parameters
proc4: after removing redundant parameters
proc4: before final
proc4: before remUnusedStmtEtc
proc4: after remUnusedStmtEtc
proc4: before find final parameters.
finding final parameters for proc4
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
proc4: after find final parameters.
proc4: before updating arguments
proc4: after updating arguments
proc4: before branch analysis.
proc4: after branch analysis.
proc4: after final
proc4: before removing redundant parameters
proc4: after removing redundant parameters
WinMain: before final
WinMain: before remUnusedStmtEtc
WinMain: after remUnusedStmtEtc
WinMain: before find final parameters.
WinMain: before updating arguments
WinMain: after updating arguments
WinMain: before branch analysis.
WinMain: after branch analysis.
WinMain: after final
proc4: after removing unused and redundant returns
WinMain: before removing unused returns
proc5: before removing unused returns
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc5: before final
proc5: before remUnusedStmtEtc
proc5: after remUnusedStmtEtc
proc5: before find final parameters.
finding final parameters for proc5
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r29
found new parameter r29
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r12
found new parameter r12
potential param r15
found new parameter r15
proc5: after find final parameters.
proc5: before updating arguments
proc5: after updating arguments
proc5: before branch analysis.
proc5: after branch analysis.
proc5: after final
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc2: before final
proc2: before remUnusedStmtEtc
proc2: after remUnusedStmtEtc
proc2: before find final parameters.
finding final parameters for proc2
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r31
found new parameter r31
proc2: after find final parameters.
proc2: before updating arguments
proc2: after updating arguments
proc2: before branch analysis.
proc2: after branch analysis.
proc2: after final
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc5: after removing unused and redundant returns
proc2: before removing unused returns
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc2: after removing unused and redundant returns
proc6: before removing unused returns
proc6: before removing redundant parameters
proc6: after removing redundant parameters
proc6: before removing redundant parameters
proc6: after removing redundant parameters
proc6: before final
proc6: before remUnusedStmtEtc
proc6: after remUnusedStmtEtc
proc6: before find final parameters.
finding final parameters for proc6
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r8
found new parameter r8
potential param r25
found new parameter r25
potential param r27
found new parameter r27
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r29
found new parameter r29
proc6: after find final parameters.
proc6: before updating arguments
proc6: after updating arguments
proc6: before branch analysis.
proc6: after branch analysis.
proc6: after final
proc6: before removing redundant parameters
proc6: after removing redundant parameters
proc5: before final
proc5: before remUnusedStmtEtc
proc5: after remUnusedStmtEtc
proc5: before find final parameters.
finding final parameters for proc5
potential param r27
found new parameter r27
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r29
found new parameter r29
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r12
found new parameter r12
potential param r15
found new parameter r15
proc5: after find final parameters.
proc5: before updating arguments
proc5: after updating arguments
proc5: before branch analysis.
proc5: after branch analysis.
proc5: after final
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc6: after removing unused and redundant returns
proc2: before removing unused returns
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc2: before final
proc2: before remUnusedStmtEtc
proc2: after remUnusedStmtEtc
proc2: before find final parameters.
finding final parameters for proc2
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
proc2: after find final parameters.
proc2: before updating arguments
proc2: after updating arguments
proc2: before branch analysis.
proc2: after branch analysis.
proc2: after final
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc1: before final
proc1: before remUnusedStmtEtc
proc1: after remUnusedStmtEtc
proc1: before find final parameters.
finding final parameters for proc1
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
proc1: after find final parameters.
proc1: before updating arguments
proc1: after updating arguments
proc1: before branch analysis.
proc1: after branch analysis.
proc1: after final
proc1: before removing redundant parameters
proc1: after removing redundant parameters
proc2: after removing unused and redundant returns
proc1: before removing unused returns
proc1: before removing redundant parameters
proc1: after removing redundant parameters
proc1: before removing redundant parameters
proc1: after removing redundant parameters
proc1: after removing unused and redundant returns
WinMain: before removing unused returns
proc5: before removing unused returns
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc5: after removing unused and redundant returns
proc7: before removing unused returns
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: after removing unused and redundant returns
proc8: before removing unused returns
proc8: before removing redundant parameters
proc8: after removing redundant parameters
proc8: before removing redundant parameters
proc8: after removing redundant parameters
proc8: before final
proc8: before remUnusedStmtEtc
proc8: after remUnusedStmtEtc
proc8: before find final parameters.
finding final parameters for proc8
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 0x440]
found new parameter m[r28{0} - 0x440]
potential param m[r28{0} - 56]
found new parameter m[r28{0} - 56]
potential param r26
found new parameter r26
potential param r8
found new parameter r8
potential param r9
found new parameter r9
proc8: after find final parameters.
proc8: before updating arguments
proc8: after updating arguments
proc8: before branch analysis.
proc8: after branch analysis.
proc8: after final
proc8: before removing redundant parameters
proc8: after removing redundant parameters
proc5: before final
proc5: before remUnusedStmtEtc
proc5: after remUnusedStmtEtc
proc5: before find final parameters.
finding final parameters for proc5
potential param r27
found new parameter r27
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r29
found new parameter r29
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r12
found new parameter r12
potential param r15
found new parameter r15
proc5: after find final parameters.
proc5: before updating arguments
proc5: after updating arguments
proc5: before branch analysis.
proc5: after branch analysis.
proc5: after final
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc8: after removing unused and redundant returns
proc5: before removing unused returns
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc5: after removing unused and redundant returns
proc7: before removing unused returns
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: before final
proc7: before remUnusedStmtEtc
proc7: after remUnusedStmtEtc
proc7: before find final parameters.
finding final parameters for proc7
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r31
found new parameter r31
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param tmph
potential param r24
found new parameter r24
potential param r8
found new parameter r8
potential param r26
found new parameter r26
proc7: after find final parameters.
proc7: before updating arguments
proc7: after updating arguments
proc7: before branch analysis.
proc7: after branch analysis.
proc7: after final
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc5: before final
proc5: before remUnusedStmtEtc
proc5: after remUnusedStmtEtc
proc5: before find final parameters.
finding final parameters for proc5
potential param r27
found new parameter r27
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r29
found new parameter r29
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r12
found new parameter r12
potential param r15
found new parameter r15
proc5: after find final parameters.
proc5: before updating arguments
proc5: after updating arguments
proc5: before branch analysis.
proc5: after branch analysis.
proc5: after final
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc7: after removing unused and redundant returns
proc5: before removing unused returns
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc5: after removing unused and redundant returns
proc9: before removing unused returns
proc9: before removing redundant parameters
proc9: after removing redundant parameters
proc9: before removing redundant parameters
proc9: after removing redundant parameters
proc9: before final
proc9: before remUnusedStmtEtc
proc9: after remUnusedStmtEtc
proc9: before find final parameters.
finding final parameters for proc9
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r8
found new parameter r8
proc9: after find final parameters.
proc9: before updating arguments
proc9: after updating arguments
proc9: before branch analysis.
proc9: after branch analysis.
proc9: after final
proc9: before removing redundant parameters
proc9: after removing redundant parameters
proc6: before final
proc6: before remUnusedStmtEtc
proc6: after remUnusedStmtEtc
proc6: before find final parameters.
finding final parameters for proc6
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r8
found new parameter r8
potential param r27
found new parameter r27
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r29
found new parameter r29
proc6: after find final parameters.
proc6: before updating arguments
proc6: after updating arguments
proc6: before branch analysis.
proc6: after branch analysis.
proc6: after final
proc6: before removing redundant parameters
proc6: after removing redundant parameters
proc38: before final
proc38: before remUnusedStmtEtc
proc38: after remUnusedStmtEtc
proc38: before find final parameters.
finding final parameters for proc38
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r9
found new parameter r9
potential param r25
found new parameter r25
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r31
found new parameter r31
proc38: after find final parameters.
proc38: before updating arguments
proc38: after updating arguments
proc38: before branch analysis.
proc38: after branch analysis.
proc38: after final
proc38: before removing redundant parameters
proc38: after removing redundant parameters
proc9: after removing unused and redundant returns
proc5: before removing unused returns
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc5: before final
proc5: before remUnusedStmtEtc
proc5: after remUnusedStmtEtc
proc5: before find final parameters.
finding final parameters for proc5
potential param r27
found new parameter r27
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r29
found new parameter r29
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r12
found new parameter r12
potential param r15
found new parameter r15
proc5: after find final parameters.
proc5: before updating arguments
proc5: after updating arguments
proc5: before branch analysis.
proc5: after branch analysis.
proc5: after final
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc2: before final
proc2: before remUnusedStmtEtc
proc2: after remUnusedStmtEtc
proc2: before find final parameters.
finding final parameters for proc2
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
proc2: after find final parameters.
proc2: before updating arguments
proc2: after updating arguments
proc2: before branch analysis.
proc2: after branch analysis.
proc2: after final
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc5: after removing unused and redundant returns
proc2: before removing unused returns
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc2: after removing unused and redundant returns
proc1: before removing unused returns
proc1: before removing redundant parameters
proc1: after removing redundant parameters
proc1: before removing redundant parameters
proc1: after removing redundant parameters
proc1: before final
proc1: before remUnusedStmtEtc
proc1: after remUnusedStmtEtc
proc1: before find final parameters.
finding final parameters for proc1
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
proc1: after find final parameters.
proc1: before updating arguments
proc1: after updating arguments
proc1: before branch analysis.
proc1: after branch analysis.
proc1: after final
proc1: before removing redundant parameters
proc1: after removing redundant parameters
WinMain: before final
WinMain: before remUnusedStmtEtc
WinMain: after remUnusedStmtEtc
WinMain: before find final parameters.
WinMain: before updating arguments
WinMain: after updating arguments
WinMain: before branch analysis.
WinMain: after branch analysis.
WinMain: after final
proc1: after removing unused and redundant returns
WinMain: before removing unused returns
proc6: before removing unused returns
proc6: before removing redundant parameters
proc6: after removing redundant parameters
proc6: before removing redundant parameters
proc6: after removing redundant parameters
proc6: after removing unused and redundant returns
proc10: before removing unused returns
proc10: before removing redundant parameters
proc10: after removing redundant parameters
proc10: before removing redundant parameters
proc10: after removing redundant parameters
proc10: before final
proc10: before remUnusedStmtEtc
proc10: after remUnusedStmtEtc
proc10: before find final parameters.
finding final parameters for proc10
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r30
found new parameter r30
potential param r31
found new parameter r31
proc10: after find final parameters.
proc10: before updating arguments
proc10: after updating arguments
proc10: before branch analysis.
proc10: after branch analysis.
proc10: after final
proc10: before removing redundant parameters
proc10: after removing redundant parameters
proc6: before final
proc6: before remUnusedStmtEtc
proc6: after remUnusedStmtEtc
proc6: before find final parameters.
finding final parameters for proc6
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r8
found new parameter r8
potential param r27
found new parameter r27
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r29
found new parameter r29
proc6: after find final parameters.
proc6: before updating arguments
proc6: after updating arguments
proc6: before branch analysis.
proc6: after branch analysis.
proc6: after final
proc6: before removing redundant parameters
proc6: after removing redundant parameters
proc7: before final
proc7: before remUnusedStmtEtc
proc7: after remUnusedStmtEtc
proc7: before find final parameters.
finding final parameters for proc7
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r31
found new parameter r31
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param tmph
potential param r24
found new parameter r24
potential param r8
found new parameter r8
potential param r26
found new parameter r26
proc7: after find final parameters.
proc7: before updating arguments
proc7: after updating arguments
proc7: before branch analysis.
proc7: after branch analysis.
proc7: after final
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc39: before final
proc39: before remUnusedStmtEtc
proc39: after remUnusedStmtEtc
proc39: before find final parameters.
finding final parameters for proc39
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r30
found new parameter r30
potential param r31
found new parameter r31
proc39: after find final parameters.
proc39: before updating arguments
proc39: after updating arguments
proc39: before branch analysis.
proc39: after branch analysis.
proc39: after final
proc39: before removing redundant parameters
proc39: after removing redundant parameters
proc10: after removing unused and redundant returns
proc6: before removing unused returns
proc6: before removing redundant parameters
proc6: after removing redundant parameters
proc6: before removing redundant parameters
proc6: after removing redundant parameters
proc6: after removing unused and redundant returns
proc7: before removing unused returns
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: after removing unused and redundant returns
proc11: before removing unused returns
proc11: before removing redundant parameters
proc11: after removing redundant parameters
proc11: before removing redundant parameters
proc11: after removing redundant parameters
proc11: before final
proc11: before remUnusedStmtEtc
proc11: after remUnusedStmtEtc
proc11: before find final parameters.
finding final parameters for proc11
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 0x434]
found new parameter m[r28{0} - 0x434]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param r26
found new parameter r26
proc11: after find final parameters.
proc11: before updating arguments
proc11: after updating arguments
proc11: before branch analysis.
proc11: after branch analysis.
proc11: after final
proc11: before removing redundant parameters
proc11: after removing redundant parameters
proc8: before final
proc8: before remUnusedStmtEtc
proc8: after remUnusedStmtEtc
proc8: before find final parameters.
finding final parameters for proc8
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 0x440]
found new parameter m[r28{0} - 0x440]
potential param m[r28{0} - 56]
found new parameter m[r28{0} - 56]
potential param r26
found new parameter r26
potential param r8
found new parameter r8
potential param r9
found new parameter r9
proc8: after find final parameters.
proc8: before updating arguments
proc8: after updating arguments
proc8: before branch analysis.
proc8: after branch analysis.
proc8: after final
proc8: before removing redundant parameters
proc8: after removing redundant parameters
proc11: after removing unused and redundant returns
proc8: before removing unused returns
proc8: before removing redundant parameters
proc8: after removing redundant parameters
proc8: before removing redundant parameters
proc8: after removing redundant parameters
proc8: after removing unused and redundant returns
proc12: before removing unused returns
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc12: before final
proc12: before remUnusedStmtEtc
proc12: after remUnusedStmtEtc
proc12: before find final parameters.
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param r26
found new parameter r26
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 0x418]
found new parameter m[r28{0} - 0x418]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param r24
found new parameter r24
proc12: after find final parameters.
proc12: before updating arguments
proc12: after updating arguments
proc12: before branch analysis.
proc12: after branch analysis.
proc12: after final
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc11: before final
proc11: before remUnusedStmtEtc
proc11: after remUnusedStmtEtc
proc11: before find final parameters.
finding final parameters for proc11
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 0x434]
found new parameter m[r28{0} - 0x434]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param r26
found new parameter r26
proc11: after find final parameters.
proc11: before updating arguments
proc11: after updating arguments
proc11: before branch analysis.
proc11: after branch analysis.
proc11: after final
proc11: before removing redundant parameters
proc11: after removing redundant parameters
proc38: before final
proc38: before remUnusedStmtEtc
proc38: after remUnusedStmtEtc
proc38: before find final parameters.
finding final parameters for proc38
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r9
found new parameter r9
potential param r25
found new parameter r25
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r31
found new parameter r31
proc38: after find final parameters.
proc38: before updating arguments
proc38: after updating arguments
proc38: before branch analysis.
proc38: after branch analysis.
proc38: after final
proc38: before removing redundant parameters
proc38: after removing redundant parameters
proc12: after removing unused and redundant returns
proc11: before removing unused returns
proc11: before removing redundant parameters
proc11: after removing redundant parameters
proc11: before removing redundant parameters
proc11: after removing redundant parameters
proc11: after removing unused and redundant returns
proc13: before removing unused returns
proc13: before removing redundant parameters
proc13: after removing redundant parameters
proc13: before removing redundant parameters
proc13: after removing redundant parameters
proc13: before final
proc13: before remUnusedStmtEtc
proc13: after remUnusedStmtEtc
proc13: before find final parameters.
finding final parameters for proc13
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r25
found new parameter r25
potential param r26
found new parameter r26
proc13: after find final parameters.
proc13: before updating arguments
proc13: after updating arguments
proc13: before branch analysis.
proc13: after branch analysis.
proc13: after final
proc13: before removing redundant parameters
proc13: after removing redundant parameters
proc12: before final
proc12: before remUnusedStmtEtc
proc12: after remUnusedStmtEtc
proc12: before find final parameters.
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param r26
found new parameter r26
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 0x418]
found new parameter m[r28{0} - 0x418]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param r24
found new parameter r24
proc12: after find final parameters.
proc12: before updating arguments
proc12: after updating arguments
proc12: before branch analysis.
proc12: after branch analysis.
proc12: after final
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc38: before final
proc38: before remUnusedStmtEtc
proc38: after remUnusedStmtEtc
proc38: before find final parameters.
finding final parameters for proc38
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r9
found new parameter r9
potential param r25
found new parameter r25
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r31
found new parameter r31
proc38: after find final parameters.
proc38: before updating arguments
proc38: after updating arguments
proc38: before branch analysis.
proc38: after branch analysis.
proc38: after final
proc38: before removing redundant parameters
proc38: after removing redundant parameters
proc13: after removing unused and redundant returns
proc12: before removing unused returns
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc12: after removing unused and redundant returns
proc14: before removing unused returns
proc14: before removing redundant parameters
proc14: after removing redundant parameters
proc14: before removing redundant parameters
proc14: after removing redundant parameters
proc14: before final
proc14: before remUnusedStmtEtc
proc14: after remUnusedStmtEtc
proc14: before find final parameters.
finding final parameters for proc14
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc14: after find final parameters.
proc14: before updating arguments
proc14: after updating arguments
proc14: before branch analysis.
proc14: after branch analysis.
proc14: after final
proc14: before removing redundant parameters
proc14: after removing redundant parameters
proc12: before final
proc12: before remUnusedStmtEtc
proc12: after remUnusedStmtEtc
proc12: before find final parameters.
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param r26
found new parameter r26
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 0x418]
found new parameter m[r28{0} - 0x418]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param r24
found new parameter r24
proc12: after find final parameters.
proc12: before updating arguments
proc12: after updating arguments
proc12: before branch analysis.
proc12: after branch analysis.
proc12: after final
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc13: before final
proc13: before remUnusedStmtEtc
proc13: after remUnusedStmtEtc
proc13: before find final parameters.
finding final parameters for proc13
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r25
found new parameter r25
potential param r26
found new parameter r26
proc13: after find final parameters.
proc13: before updating arguments
proc13: after updating arguments
proc13: before branch analysis.
proc13: after branch analysis.
proc13: after final
proc13: before removing redundant parameters
proc13: after removing redundant parameters
proc14: after removing unused and redundant returns
proc12: before removing unused returns
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc12: after removing unused and redundant returns
proc13: before removing unused returns
proc13: before removing redundant parameters
proc13: after removing redundant parameters
proc13: before removing redundant parameters
proc13: after removing redundant parameters
proc13: after removing unused and redundant returns
proc15: before removing unused returns
proc15: before removing redundant parameters
proc15: after removing redundant parameters
proc15: before removing redundant parameters
proc15: after removing redundant parameters
proc15: before final
proc15: before remUnusedStmtEtc
proc15: after remUnusedStmtEtc
proc15: before find final parameters.
finding final parameters for proc15
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc15: after find final parameters.
proc15: before updating arguments
proc15: after updating arguments
proc15: before branch analysis.
proc15: after branch analysis.
proc15: after final
proc15: before removing redundant parameters
proc15: after removing redundant parameters
proc13: before final
proc13: before remUnusedStmtEtc
proc13: after remUnusedStmtEtc
proc13: before find final parameters.
finding final parameters for proc13
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r25
found new parameter r25
potential param r26
found new parameter r26
proc13: after find final parameters.
proc13: before updating arguments
proc13: after updating arguments
proc13: before branch analysis.
proc13: after branch analysis.
proc13: after final
proc13: before removing redundant parameters
proc13: after removing redundant parameters
proc15: after removing unused and redundant returns
proc13: before removing unused returns
proc13: before removing redundant parameters
proc13: after removing redundant parameters
proc13: before removing redundant parameters
proc13: after removing redundant parameters
proc13: after removing unused and redundant returns
proc16: before removing unused returns
proc16: before removing redundant parameters
proc16: after removing redundant parameters
proc16: before removing redundant parameters
proc16: after removing redundant parameters
proc16: before final
proc16: before remUnusedStmtEtc
proc16: after remUnusedStmtEtc
proc16: before find final parameters.
finding final parameters for proc16
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r30
found new parameter r30
potential param r31
found new parameter r31
proc16: after find final parameters.
proc16: before updating arguments
proc16: after updating arguments
proc16: before branch analysis.
proc16: after branch analysis.
proc16: after final
proc16: before removing redundant parameters
proc16: after removing redundant parameters
proc10: before final
proc10: before remUnusedStmtEtc
proc10: after remUnusedStmtEtc
proc10: before find final parameters.
finding final parameters for proc10
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r30
found new parameter r30
potential param r31
found new parameter r31
proc10: after find final parameters.
proc10: before updating arguments
proc10: after updating arguments
proc10: before branch analysis.
proc10: after branch analysis.
proc10: after final
proc10: before removing redundant parameters
proc10: after removing redundant parameters
proc16: after removing unused and redundant returns
proc10: before removing unused returns
proc10: before removing redundant parameters
proc10: after removing redundant parameters
proc10: before removing redundant parameters
proc10: after removing redundant parameters
proc10: after removing unused and redundant returns
proc17: before removing unused returns
proc17: before removing redundant parameters
proc17: after removing redundant parameters
proc17: before removing redundant parameters
proc17: after removing redundant parameters
proc17: before final
proc17: before remUnusedStmtEtc
proc17: after remUnusedStmtEtc
proc17: before find final parameters.
finding final parameters for proc17
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r29
found new parameter r29
potential param m[r28{0} - 76]
found new parameter m[r28{0} - 76]
potential param m[r28{0} - 52]
found new parameter m[r28{0} - 52]
potential param m[r28{0} - 48]
found new parameter m[r28{0} - 48]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r9
found new parameter r9
potential param r27
found new parameter r27
proc17: after find final parameters.
proc17: before updating arguments
proc17: after updating arguments
proc17: before branch analysis.
proc17: after branch analysis.
proc17: after final
proc17: before removing redundant parameters
proc17: after removing redundant parameters
proc16: before final
proc16: before remUnusedStmtEtc
proc16: after remUnusedStmtEtc
proc16: before find final parameters.
finding final parameters for proc16
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r30
found new parameter r30
potential param r31
found new parameter r31
proc16: after find final parameters.
proc16: before updating arguments
proc16: after updating arguments
proc16: before branch analysis.
proc16: after branch analysis.
proc16: after final
proc16: before removing redundant parameters
proc16: after removing redundant parameters
proc17: after removing unused and redundant returns
proc16: before removing unused returns
proc16: before removing redundant parameters
proc16: after removing redundant parameters
proc16: before removing redundant parameters
proc16: after removing redundant parameters
proc16: after removing unused and redundant returns
proc18: before removing unused returns
proc18: before removing redundant parameters
proc18: after removing redundant parameters
proc18: before removing redundant parameters
proc18: after removing redundant parameters
proc18: before final
proc18: before remUnusedStmtEtc
proc18: after remUnusedStmtEtc
proc18: before find final parameters.
finding final parameters for proc18
potential param r28
found new parameter r28
potential param r25
found new parameter r25
proc18: after find final parameters.
proc18: before updating arguments
proc18: after updating arguments
proc18: before branch analysis.
proc18: after branch analysis.
proc18: after final
proc18: before removing redundant parameters
proc18: after removing redundant parameters
proc16: before final
proc16: before remUnusedStmtEtc
proc16: after remUnusedStmtEtc
proc16: before find final parameters.
finding final parameters for proc16
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r30
found new parameter r30
potential param r31
found new parameter r31
proc16: after find final parameters.
proc16: before updating arguments
proc16: after updating arguments
proc16: before branch analysis.
proc16: after branch analysis.
proc16: after final
proc16: before removing redundant parameters
proc16: after removing redundant parameters
proc18: after removing unused and redundant returns
proc16: before removing unused returns
proc16: before removing redundant parameters
proc16: after removing redundant parameters
proc16: before removing redundant parameters
proc16: after removing redundant parameters
proc16: after removing unused and redundant returns
proc19: before removing unused returns
proc19: before removing redundant parameters
proc19: after removing redundant parameters
proc19: before removing redundant parameters
proc19: after removing redundant parameters
proc19: before final
proc19: before remUnusedStmtEtc
proc19: after remUnusedStmtEtc
proc19: before find final parameters.
finding final parameters for proc19
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
potential param r8
found new parameter r8
proc19: after find final parameters.
proc19: before updating arguments
proc19: after updating arguments
proc19: before branch analysis.
proc19: after branch analysis.
proc19: after final
proc19: before removing redundant parameters
proc19: after removing redundant parameters
proc17: before final
proc17: before remUnusedStmtEtc
proc17: after remUnusedStmtEtc
proc17: before find final parameters.
finding final parameters for proc17
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r29
found new parameter r29
potential param m[r28{0} - 76]
found new parameter m[r28{0} - 76]
potential param m[r28{0} - 52]
found new parameter m[r28{0} - 52]
potential param m[r28{0} - 48]
found new parameter m[r28{0} - 48]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r9
found new parameter r9
potential param r27
found new parameter r27
proc17: after find final parameters.
proc17: before updating arguments
proc17: after updating arguments
proc17: before branch analysis.
proc17: after branch analysis.
proc17: after final
proc17: before removing redundant parameters
proc17: after removing redundant parameters
proc19: after removing unused and redundant returns
proc17: before removing unused returns
proc17: before removing redundant parameters
proc17: after removing redundant parameters
proc17: before removing redundant parameters
proc17: after removing redundant parameters
proc17: after removing unused and redundant returns
proc20: before removing unused returns
proc20: before removing redundant parameters
proc20: after removing redundant parameters
proc20: before removing redundant parameters
proc20: after removing redundant parameters
proc20: before final
proc20: before remUnusedStmtEtc
proc20: after remUnusedStmtEtc
proc20: before find final parameters.
finding final parameters for proc20
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r24
found new parameter r24
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 64]
found new parameter m[r28{0} - 64]
proc20: after find final parameters.
proc20: before updating arguments
proc20: after updating arguments
proc20: before branch analysis.
proc20: after branch analysis.
proc20: after final
proc20: before removing redundant parameters
proc20: after removing redundant parameters
proc17: before final
proc17: before remUnusedStmtEtc
proc17: after remUnusedStmtEtc
proc17: before find final parameters.
finding final parameters for proc17
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r29
found new parameter r29
potential param m[r28{0} - 76]
found new parameter m[r28{0} - 76]
potential param m[r28{0} - 52]
found new parameter m[r28{0} - 52]
potential param m[r28{0} - 48]
found new parameter m[r28{0} - 48]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r9
found new parameter r9
potential param r27
found new parameter r27
proc17: after find final parameters.
proc17: before updating arguments
proc17: after updating arguments
proc17: before branch analysis.
proc17: after branch analysis.
proc17: after final
proc17: before removing redundant parameters
proc17: after removing redundant parameters
proc20: after removing unused and redundant returns
proc17: before removing unused returns
proc17: before removing redundant parameters
proc17: after removing redundant parameters
proc17: before removing redundant parameters
proc17: after removing redundant parameters
proc17: after removing unused and redundant returns
proc21: before removing unused returns
proc21: before removing redundant parameters
proc21: after removing redundant parameters
proc21: before removing redundant parameters
proc21: after removing redundant parameters
proc21: before final
proc21: before remUnusedStmtEtc
proc21: after remUnusedStmtEtc
proc21: before find final parameters.
finding final parameters for proc21
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc21: after find final parameters.
proc21: before updating arguments
proc21: after updating arguments
proc21: before branch analysis.
proc21: after branch analysis.
proc21: after final
proc21: before removing redundant parameters
proc21: after removing redundant parameters
proc19: before final
proc19: before remUnusedStmtEtc
proc19: after remUnusedStmtEtc
proc19: before find final parameters.
finding final parameters for proc19
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
potential param r8
found new parameter r8
proc19: after find final parameters.
proc19: before updating arguments
proc19: after updating arguments
proc19: before branch analysis.
proc19: after branch analysis.
proc19: after final
proc19: before removing redundant parameters
proc19: after removing redundant parameters
proc21: after removing unused and redundant returns
proc19: before removing unused returns
proc19: before removing redundant parameters
proc19: after removing redundant parameters
proc19: before removing redundant parameters
proc19: after removing redundant parameters
proc19: after removing unused and redundant returns
proc22: before removing unused returns
proc22: before removing redundant parameters
proc22: after removing redundant parameters
proc22: before removing redundant parameters
proc22: after removing redundant parameters
proc22: before final
proc22: before remUnusedStmtEtc
proc22: after remUnusedStmtEtc
proc22: before find final parameters.
finding final parameters for proc22
potential param r28
found new parameter r28
proc22: after find final parameters.
proc22: before updating arguments
proc22: after updating arguments
proc22: before branch analysis.
proc22: after branch analysis.
proc22: after final
proc22: before removing redundant parameters
proc22: after removing redundant parameters
proc19: before final
proc19: before remUnusedStmtEtc
proc19: after remUnusedStmtEtc
proc19: before find final parameters.
finding final parameters for proc19
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
potential param r8
found new parameter r8
proc19: after find final parameters.
proc19: before updating arguments
proc19: after updating arguments
proc19: before branch analysis.
proc19: after branch analysis.
proc19: after final
proc19: before removing redundant parameters
proc19: after removing redundant parameters
proc22: after removing unused and redundant returns
proc19: before removing unused returns
proc19: before removing redundant parameters
proc19: after removing redundant parameters
proc19: before removing redundant parameters
proc19: after removing redundant parameters
proc19: after removing unused and redundant returns
proc23: before removing unused returns
proc23: before removing redundant parameters
proc23: after removing redundant parameters
proc23: before removing redundant parameters
proc23: after removing redundant parameters
proc23: after removing unused and redundant returns
proc24: before removing unused returns
proc24: before removing redundant parameters
proc24: after removing redundant parameters
proc24: before removing redundant parameters
proc24: after removing redundant parameters
proc24: before final
proc24: before remUnusedStmtEtc
proc24: after remUnusedStmtEtc
proc24: before find final parameters.
finding final parameters for proc24
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
proc24: after find final parameters.
proc24: before updating arguments
proc24: after updating arguments
proc24: before branch analysis.
proc24: after branch analysis.
proc24: after final
proc24: before removing redundant parameters
proc24: after removing redundant parameters
proc20: before final
proc20: before remUnusedStmtEtc
proc20: after remUnusedStmtEtc
proc20: before find final parameters.
finding final parameters for proc20
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r24
found new parameter r24
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 64]
found new parameter m[r28{0} - 64]
proc20: after find final parameters.
proc20: before updating arguments
proc20: after updating arguments
proc20: before branch analysis.
proc20: after branch analysis.
proc20: after final
proc20: before removing redundant parameters
proc20: after removing redundant parameters
proc25: before final
proc25: before remUnusedStmtEtc
proc25: after remUnusedStmtEtc
proc25: before find final parameters.
finding final parameters for proc25
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r8
found new parameter r8
potential param r10
found new parameter r10
proc25: after find final parameters.
proc25: before updating arguments
proc25: after updating arguments
proc25: before branch analysis.
proc25: after branch analysis.
proc25: after final
proc25: before removing redundant parameters
proc25: after removing redundant parameters
proc24: after removing unused and redundant returns
proc20: before removing unused returns
proc20: before removing redundant parameters
proc20: after removing redundant parameters
proc20: before removing redundant parameters
proc20: after removing redundant parameters
proc20: after removing unused and redundant returns
proc25: before removing unused returns
proc25: before removing redundant parameters
proc25: after removing redundant parameters
proc25: before removing redundant parameters
proc25: after removing redundant parameters
proc25: before final
proc25: before remUnusedStmtEtc
proc25: after remUnusedStmtEtc
proc25: before find final parameters.
finding final parameters for proc25
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r8
found new parameter r8
potential param r10
found new parameter r10
proc25: after find final parameters.
proc25: before updating arguments
proc25: after updating arguments
proc25: before branch analysis.
proc25: after branch analysis.
proc25: after final
proc25: before removing redundant parameters
proc25: after removing redundant parameters
proc20: before final
proc20: before remUnusedStmtEtc
proc20: after remUnusedStmtEtc
proc20: before find final parameters.
finding final parameters for proc20
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r24
found new parameter r24
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 64]
found new parameter m[r28{0} - 64]
proc20: after find final parameters.
proc20: before updating arguments
proc20: after updating arguments
proc20: before branch analysis.
proc20: after branch analysis.
proc20: after final
proc20: before removing redundant parameters
proc20: after removing redundant parameters
proc25: after removing unused and redundant returns
proc20: before removing unused returns
proc20: before removing redundant parameters
proc20: after removing redundant parameters
proc20: before removing redundant parameters
proc20: after removing redundant parameters
proc20: after removing unused and redundant returns
proc24: before removing unused returns
proc24: before removing redundant parameters
proc24: after removing redundant parameters
proc24: before removing redundant parameters
proc24: after removing redundant parameters
proc24: before final
proc24: before remUnusedStmtEtc
proc24: after remUnusedStmtEtc
proc24: before find final parameters.
finding final parameters for proc24
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
proc24: after find final parameters.
proc24: before updating arguments
proc24: after updating arguments
proc24: before branch analysis.
proc24: after branch analysis.
proc24: after final
proc24: before removing redundant parameters
proc24: after removing redundant parameters
proc20: before final
proc20: before remUnusedStmtEtc
proc20: after remUnusedStmtEtc
proc20: before find final parameters.
finding final parameters for proc20
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r24
found new parameter r24
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 64]
found new parameter m[r28{0} - 64]
proc20: after find final parameters.
proc20: before updating arguments
proc20: after updating arguments
proc20: before branch analysis.
proc20: after branch analysis.
proc20: after final
proc20: before removing redundant parameters
proc20: after removing redundant parameters
proc25: before final
proc25: before remUnusedStmtEtc
proc25: after remUnusedStmtEtc
proc25: before find final parameters.
finding final parameters for proc25
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r8
found new parameter r8
potential param r10
found new parameter r10
proc25: after find final parameters.
proc25: before updating arguments
proc25: after updating arguments
proc25: before branch analysis.
proc25: after branch analysis.
proc25: after final
proc25: before removing redundant parameters
proc25: after removing redundant parameters
proc24: after removing unused and redundant returns
proc20: before removing unused returns
proc20: before removing redundant parameters
proc20: after removing redundant parameters
proc20: before removing redundant parameters
proc20: after removing redundant parameters
proc20: after removing unused and redundant returns
proc25: before removing unused returns
proc25: before removing redundant parameters
proc25: after removing redundant parameters
proc25: before removing redundant parameters
proc25: after removing redundant parameters
proc25: after removing unused and redundant returns
proc26: before removing unused returns
proc26: before removing redundant parameters
proc26: after removing redundant parameters
proc27: before removing unused returns
proc27: before removing redundant parameters
proc27: after removing redundant parameters
proc27: before removing redundant parameters
proc27: after removing redundant parameters
proc27: after removing unused and redundant returns
proc28: before removing unused returns
proc28: before removing redundant parameters
proc28: after removing redundant parameters
proc28: before removing redundant parameters
proc28: after removing redundant parameters
proc28: after removing unused and redundant returns
proc29: before removing unused returns
proc29: before removing redundant parameters
proc29: after removing redundant parameters
proc29: before removing redundant parameters
proc29: after removing redundant parameters
proc29: before final
proc29: before remUnusedStmtEtc
proc29: after remUnusedStmtEtc
proc29: before find final parameters.
finding final parameters for proc29
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc29: after find final parameters.
proc29: before updating arguments
proc29: after updating arguments
proc29: before branch analysis.
proc29: after branch analysis.
proc29: after final
proc29: before removing redundant parameters
proc29: after removing redundant parameters
proc7: before final
proc7: before remUnusedStmtEtc
proc7: after remUnusedStmtEtc
proc7: before find final parameters.
finding final parameters for proc7
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r31
found new parameter r31
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param tmph
potential param r24
found new parameter r24
potential param r8
found new parameter r8
potential param r26
found new parameter r26
proc7: after find final parameters.
proc7: before updating arguments
proc7: after updating arguments
proc7: before branch analysis.
proc7: after branch analysis.
proc7: after final
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc29: after removing unused and redundant returns
proc7: before removing unused returns
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: after removing unused and redundant returns
proc30: before removing unused returns
proc30: before removing redundant parameters
proc30: after removing redundant parameters
proc30: before removing redundant parameters
proc30: after removing redundant parameters
proc30: before final
proc30: before remUnusedStmtEtc
proc30: after remUnusedStmtEtc
proc30: before find final parameters.
finding final parameters for proc30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r1
found new parameter r1
potential param r9
found new parameter r9
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
proc30: after find final parameters.
proc30: before updating arguments
proc30: after updating arguments
proc30: before branch analysis.
proc30: after branch analysis.
proc30: after final
proc30: before removing redundant parameters
proc30: after removing redundant parameters
proc7: before final
proc7: before remUnusedStmtEtc
proc7: after remUnusedStmtEtc
proc7: before find final parameters.
finding final parameters for proc7
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r31
found new parameter r31
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param tmph
potential param r24
found new parameter r24
potential param r8
found new parameter r8
potential param r26
found new parameter r26
proc7: after find final parameters.
proc7: before updating arguments
proc7: after updating arguments
proc7: before branch analysis.
proc7: after branch analysis.
proc7: after final
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc30: after removing unused and redundant returns
proc7: before removing unused returns
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: after removing unused and redundant returns
proc31: before removing unused returns
proc31: before removing redundant parameters
proc31: after removing redundant parameters
proc31: before removing redundant parameters
proc31: after removing redundant parameters
proc31: before final
proc31: before remUnusedStmtEtc
proc31: after remUnusedStmtEtc
proc31: before find final parameters.
finding final parameters for proc31
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc31: after find final parameters.
proc31: before updating arguments
proc31: after updating arguments
proc31: before branch analysis.
proc31: after branch analysis.
proc31: after final
proc31: before removing redundant parameters
proc31: after removing redundant parameters
proc7: before final
proc7: before remUnusedStmtEtc
proc7: after remUnusedStmtEtc
proc7: before find final parameters.
finding final parameters for proc7
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r31
found new parameter r31
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param tmph
potential param r24
found new parameter r24
potential param r8
found new parameter r8
potential param r26
found new parameter r26
proc7: after find final parameters.
proc7: before updating arguments
proc7: after updating arguments
proc7: before branch analysis.
proc7: after branch analysis.
proc7: after final
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc31: after removing unused and redundant returns
proc7: before removing unused returns
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: after removing unused and redundant returns
proc32: before removing unused returns
proc32: before removing redundant parameters
proc32: after removing redundant parameters
proc32: before removing redundant parameters
proc32: after removing redundant parameters
proc32: before final
proc32: before remUnusedStmtEtc
proc32: after remUnusedStmtEtc
proc32: before find final parameters.
finding final parameters for proc32
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r24
found new parameter r24
potential param r26
found new parameter r26
proc32: after find final parameters.
proc32: before updating arguments
proc32: after updating arguments
proc32: before branch analysis.
proc32: after branch analysis.
proc32: after final
proc32: before removing redundant parameters
proc32: after removing redundant parameters
proc7: before final
proc7: before remUnusedStmtEtc
proc7: after remUnusedStmtEtc
proc7: before find final parameters.
finding final parameters for proc7
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r31
found new parameter r31
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param tmph
potential param r24
found new parameter r24
potential param r8
found new parameter r8
potential param r26
found new parameter r26
proc7: after find final parameters.
proc7: before updating arguments
proc7: after updating arguments
proc7: before branch analysis.
proc7: after branch analysis.
proc7: after final
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc50: before final
proc50: before remUnusedStmtEtc
proc50: after remUnusedStmtEtc
proc50: before find final parameters.
finding final parameters for proc50
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 424]
found new parameter m[r28{0} - 424]
potential param r2
found new parameter r2
potential param r14
found new parameter r14
potential param r10
found new parameter r10
potential param r31
found new parameter r31
potential param m[r28{0} - 164]
found new parameter m[r28{0} - 164]
potential param r8
found new parameter r8
potential param r12
found new parameter r12
potential param r27
found new parameter r27
proc50: after find final parameters.
proc50: before updating arguments
proc50: after updating arguments
proc50: before branch analysis.
proc50: after branch analysis.
proc50: after final
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc32: after removing unused and redundant returns
proc7: before removing unused returns
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: after removing unused and redundant returns
proc33: before removing unused returns
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc33: before final
proc33: before remUnusedStmtEtc
proc33: after remUnusedStmtEtc
proc33: before find final parameters.
finding final parameters for proc33
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r26
found new parameter r26
potential param r10
found new parameter r10
potential param m[r28{0} - 72]
found new parameter m[r28{0} - 72]
potential param m[r28{0} - 68]
found new parameter m[r28{0} - 68]
potential param m[r28{0} - 64]
found new parameter m[r28{0} - 64]
potential param m[r28{0} - 60]
found new parameter m[r28{0} - 60]
potential param r27
found new parameter r27
potential param r31
found new parameter r31
proc33: after find final parameters.
proc33: before updating arguments
proc33: after updating arguments
proc33: before branch analysis.
proc33: after branch analysis.
proc33: after final
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc7: before final
proc7: before remUnusedStmtEtc
proc7: after remUnusedStmtEtc
proc7: before find final parameters.
finding final parameters for proc7
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r31
found new parameter r31
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param tmph
potential param r24
found new parameter r24
potential param r8
found new parameter r8
potential param r26
found new parameter r26
proc7: after find final parameters.
proc7: before updating arguments
proc7: after updating arguments
proc7: before branch analysis.
proc7: after branch analysis.
proc7: after final
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc33: after removing unused and redundant returns
proc7: before removing unused returns
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: after removing unused and redundant returns
proc34: before removing unused returns
proc34: before removing redundant parameters
proc34: after removing redundant parameters
proc34: before removing redundant parameters
proc34: after removing redundant parameters
proc34: before final
proc34: before remUnusedStmtEtc
proc34: after remUnusedStmtEtc
proc34: before find final parameters.
finding final parameters for proc34
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
proc34: after find final parameters.
proc34: before updating arguments
proc34: after updating arguments
proc34: before branch analysis.
proc34: after branch analysis.
proc34: after final
proc34: before removing redundant parameters
proc34: after removing redundant parameters
proc7: before final
proc7: before remUnusedStmtEtc
proc7: after remUnusedStmtEtc
proc7: before find final parameters.
finding final parameters for proc7
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r31
found new parameter r31
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param tmph
potential param r24
found new parameter r24
potential param r8
found new parameter r8
potential param r26
found new parameter r26
proc7: after find final parameters.
proc7: before updating arguments
proc7: after updating arguments
proc7: before branch analysis.
proc7: after branch analysis.
proc7: after final
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc34: after removing unused and redundant returns
proc7: before removing unused returns
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: after removing unused and redundant returns
proc27: before removing unused returns
proc27: before removing redundant parameters
proc27: after removing redundant parameters
proc27: before removing redundant parameters
proc27: after removing redundant parameters
proc27: after removing unused and redundant returns
proc35: before removing unused returns
proc35: before removing redundant parameters
proc35: after removing redundant parameters
proc35: before removing redundant parameters
proc35: after removing redundant parameters
proc35: before final
proc35: before remUnusedStmtEtc
proc35: after remUnusedStmtEtc
proc35: before find final parameters.
finding final parameters for proc35
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
proc35: after find final parameters.
proc35: before updating arguments
proc35: after updating arguments
proc35: before branch analysis.
proc35: after branch analysis.
proc35: after final
proc35: before removing redundant parameters
proc35: after removing redundant parameters
proc7: before final
proc7: before remUnusedStmtEtc
proc7: after remUnusedStmtEtc
proc7: before find final parameters.
finding final parameters for proc7
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r31
found new parameter r31
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param tmph
potential param r24
found new parameter r24
potential param r8
found new parameter r8
potential param r26
found new parameter r26
proc7: after find final parameters.
proc7: before updating arguments
proc7: after updating arguments
proc7: before branch analysis.
proc7: after branch analysis.
proc7: after final
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc35: after removing unused and redundant returns
proc7: before removing unused returns
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: after removing unused and redundant returns
proc27: before removing unused returns
proc27: before removing redundant parameters
proc27: after removing redundant parameters
proc27: before removing redundant parameters
proc27: after removing redundant parameters
proc27: before final
proc27: before remUnusedStmtEtc
proc27: after remUnusedStmtEtc
proc27: before find final parameters.
finding final parameters for proc27
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r31
found new parameter r31
potential param r27
found new parameter r27
potential param r30
found new parameter r30
proc27: after find final parameters.
proc27: before updating arguments
proc27: after updating arguments
proc27: before branch analysis.
proc27: after branch analysis.
proc27: after final
proc27: before removing redundant parameters
proc27: after removing redundant parameters
proc7: before final
proc7: before remUnusedStmtEtc
proc7: after remUnusedStmtEtc
proc7: before find final parameters.
finding final parameters for proc7
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r31
found new parameter r31
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param tmph
potential param r24
found new parameter r24
potential param r8
found new parameter r8
potential param r26
found new parameter r26
proc7: after find final parameters.
proc7: before updating arguments
proc7: after updating arguments
proc7: before branch analysis.
proc7: after branch analysis.
proc7: after final
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc34: before final
proc34: before remUnusedStmtEtc
proc34: after remUnusedStmtEtc
proc34: before find final parameters.
finding final parameters for proc34
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
proc34: after find final parameters.
proc34: before updating arguments
proc34: after updating arguments
proc34: before branch analysis.
proc34: after branch analysis.
proc34: after final
proc34: before removing redundant parameters
proc34: after removing redundant parameters
proc35: before final
proc35: before remUnusedStmtEtc
proc35: after remUnusedStmtEtc
proc35: before find final parameters.
finding final parameters for proc35
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
proc35: after find final parameters.
proc35: before updating arguments
proc35: after updating arguments
proc35: before branch analysis.
proc35: after branch analysis.
proc35: after final
proc35: before removing redundant parameters
proc35: after removing redundant parameters
proc27: after removing unused and redundant returns
proc7: before removing unused returns
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: after removing unused and redundant returns
proc34: before removing unused returns
proc34: before removing redundant parameters
proc34: after removing redundant parameters
proc34: before removing redundant parameters
proc34: after removing redundant parameters
proc34: after removing unused and redundant returns
proc35: before removing unused returns
proc35: before removing redundant parameters
proc35: after removing redundant parameters
proc35: before removing redundant parameters
proc35: after removing redundant parameters
proc35: after removing unused and redundant returns
proc36: before removing unused returns
proc36: before removing redundant parameters
proc36: after removing redundant parameters
proc36: before removing redundant parameters
proc36: after removing redundant parameters
proc36: before final
proc36: before remUnusedStmtEtc
proc36: after remUnusedStmtEtc
proc36: before find final parameters.
finding final parameters for proc36
potential param r28
found new parameter r28
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc36: after find final parameters.
proc36: before updating arguments
proc36: after updating arguments
proc36: before branch analysis.
proc36: after branch analysis.
proc36: after final
proc36: before removing redundant parameters
proc36: after removing redundant parameters
proc7: before final
proc7: before remUnusedStmtEtc
proc7: after remUnusedStmtEtc
proc7: before find final parameters.
finding final parameters for proc7
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r31
found new parameter r31
potential param r0
found new parameter r0
potential param r1
found new parameter r1
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r15
found new parameter r15
potential param tmph
potential param r24
found new parameter r24
potential param r8
found new parameter r8
potential param r26
found new parameter r26
proc7: after find final parameters.
proc7: before updating arguments
proc7: after updating arguments
proc7: before branch analysis.
proc7: after branch analysis.
proc7: after final
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc36: after removing unused and redundant returns
proc7: before removing unused returns
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: after removing unused and redundant returns
proc37: before removing unused returns
proc37: before removing redundant parameters
proc37: after removing redundant parameters
proc37: before removing redundant parameters
proc37: after removing redundant parameters
proc37: after removing unused and redundant returns
proc38: before removing unused returns
proc38: before removing redundant parameters
proc38: after removing redundant parameters
proc38: before removing redundant parameters
proc38: after removing redundant parameters
proc38: before final
proc38: before remUnusedStmtEtc
proc38: after remUnusedStmtEtc
proc38: before find final parameters.
finding final parameters for proc38
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r9
found new parameter r9
potential param r25
found new parameter r25
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r31
found new parameter r31
proc38: after find final parameters.
proc38: before updating arguments
proc38: after updating arguments
proc38: before branch analysis.
proc38: after branch analysis.
proc38: after final
proc38: before removing redundant parameters
proc38: after removing redundant parameters
proc27: before final
proc27: before remUnusedStmtEtc
proc27: after remUnusedStmtEtc
proc27: before find final parameters.
finding final parameters for proc27
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r31
found new parameter r31
potential param r27
found new parameter r27
potential param r30
found new parameter r30
proc27: after find final parameters.
proc27: before updating arguments
proc27: after updating arguments
proc27: before branch analysis.
proc27: after branch analysis.
proc27: after final
proc27: before removing redundant parameters
proc27: after removing redundant parameters
proc38: after removing unused and redundant returns
proc12: before removing unused returns
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc12: before final
proc12: before remUnusedStmtEtc
proc12: after remUnusedStmtEtc
proc12: before find final parameters.
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param r26
found new parameter r26
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 0x418]
found new parameter m[r28{0} - 0x418]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param r24
found new parameter r24
proc12: after find final parameters.
proc12: before updating arguments
proc12: after updating arguments
proc12: before branch analysis.
proc12: after branch analysis.
proc12: after final
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc11: before final
proc11: before remUnusedStmtEtc
proc11: after remUnusedStmtEtc
proc11: before find final parameters.
finding final parameters for proc11
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 0x434]
found new parameter m[r28{0} - 0x434]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param r26
found new parameter r26
proc11: after find final parameters.
proc11: before updating arguments
proc11: after updating arguments
proc11: before branch analysis.
proc11: after branch analysis.
proc11: after final
proc11: before removing redundant parameters
proc11: after removing redundant parameters
proc38: before final
proc38: before remUnusedStmtEtc
proc38: after remUnusedStmtEtc
proc38: before find final parameters.
finding final parameters for proc38
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r9
found new parameter r9
potential param r25
found new parameter r25
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r31
found new parameter r31
proc38: after find final parameters.
proc38: before updating arguments
proc38: after updating arguments
proc38: before branch analysis.
proc38: after branch analysis.
proc38: after final
proc38: before removing redundant parameters
proc38: after removing redundant parameters
proc12: after removing unused and redundant returns
proc11: before removing unused returns
proc11: before removing redundant parameters
proc11: after removing redundant parameters
proc11: before removing redundant parameters
proc11: after removing redundant parameters
proc11: after removing unused and redundant returns
proc13: before removing unused returns
proc13: before removing redundant parameters
proc13: after removing redundant parameters
proc13: before removing redundant parameters
proc13: after removing redundant parameters
proc13: before final
proc13: before remUnusedStmtEtc
proc13: after remUnusedStmtEtc
proc13: before find final parameters.
finding final parameters for proc13
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r26
found new parameter r26
proc13: after find final parameters.
proc13: before updating arguments
proc13: after updating arguments
proc13: before branch analysis.
proc13: after branch analysis.
proc13: after final
proc13: before removing redundant parameters
proc13: after removing redundant parameters
proc12: before final
proc12: before remUnusedStmtEtc
proc12: after remUnusedStmtEtc
proc12: before find final parameters.
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param r26
found new parameter r26
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 0x418]
found new parameter m[r28{0} - 0x418]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param r24
found new parameter r24
proc12: after find final parameters.
proc12: before updating arguments
proc12: after updating arguments
proc12: before branch analysis.
proc12: after branch analysis.
proc12: after final
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc38: before final
proc38: before remUnusedStmtEtc
proc38: after remUnusedStmtEtc
proc38: before find final parameters.
finding final parameters for proc38
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r9
found new parameter r9
potential param r25
found new parameter r25
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r31
found new parameter r31
proc38: after find final parameters.
proc38: before updating arguments
proc38: after updating arguments
proc38: before branch analysis.
proc38: after branch analysis.
proc38: after final
proc38: before removing redundant parameters
proc38: after removing redundant parameters
proc13: after removing unused and redundant returns
proc12: before removing unused returns
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc12: after removing unused and redundant returns
proc27: before removing unused returns
proc27: before removing redundant parameters
proc27: after removing redundant parameters
proc27: before removing redundant parameters
proc27: after removing redundant parameters
proc27: after removing unused and redundant returns
proc38: before removing unused returns
proc38: before removing redundant parameters
proc38: after removing redundant parameters
proc38: before removing redundant parameters
proc38: after removing redundant parameters
proc38: after removing unused and redundant returns
proc39: before removing unused returns
proc39: before removing redundant parameters
proc39: after removing redundant parameters
proc39: before removing redundant parameters
proc39: after removing redundant parameters
proc39: before final
proc39: before remUnusedStmtEtc
proc39: after remUnusedStmtEtc
proc39: before find final parameters.
finding final parameters for proc39
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r30
found new parameter r30
potential param r31
found new parameter r31
proc39: after find final parameters.
proc39: before updating arguments
proc39: after updating arguments
proc39: before branch analysis.
proc39: after branch analysis.
proc39: after final
proc39: before removing redundant parameters
proc39: after removing redundant parameters
proc38: before final
proc38: before remUnusedStmtEtc
proc38: after remUnusedStmtEtc
proc38: before find final parameters.
finding final parameters for proc38
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r9
found new parameter r9
potential param r25
found new parameter r25
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r31
found new parameter r31
proc38: after find final parameters.
proc38: before updating arguments
proc38: after updating arguments
proc38: before branch analysis.
proc38: after branch analysis.
proc38: after final
proc38: before removing redundant parameters
proc38: after removing redundant parameters
proc39: after removing unused and redundant returns
proc10: before removing unused returns
proc10: before removing redundant parameters
proc10: after removing redundant parameters
proc10: before removing redundant parameters
proc10: after removing redundant parameters
proc10: after removing unused and redundant returns
proc38: before removing unused returns
proc38: before removing redundant parameters
proc38: after removing redundant parameters
proc38: before removing redundant parameters
proc38: after removing redundant parameters
proc38: after removing unused and redundant returns
proc40: before removing unused returns
proc40: before removing redundant parameters
proc40: after removing redundant parameters
proc40: before removing redundant parameters
proc40: after removing redundant parameters
proc40: before final
proc40: before remUnusedStmtEtc
proc40: after remUnusedStmtEtc
proc40: before find final parameters.
finding final parameters for proc40
potential param r26
found new parameter r26
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc40: after find final parameters.
proc40: before updating arguments
proc40: after updating arguments
proc40: before branch analysis.
proc40: after branch analysis.
proc40: after final
proc40: before removing redundant parameters
proc40: after removing redundant parameters
proc33: before final
proc33: before remUnusedStmtEtc
proc33: after remUnusedStmtEtc
proc33: before find final parameters.
finding final parameters for proc33
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r26
found new parameter r26
potential param r10
found new parameter r10
potential param m[r28{0} - 72]
found new parameter m[r28{0} - 72]
potential param m[r28{0} - 68]
found new parameter m[r28{0} - 68]
potential param m[r28{0} - 64]
found new parameter m[r28{0} - 64]
potential param m[r28{0} - 60]
found new parameter m[r28{0} - 60]
potential param r27
found new parameter r27
potential param r31
found new parameter r31
proc33: after find final parameters.
proc33: before updating arguments
proc33: after updating arguments
proc33: before branch analysis.
proc33: after branch analysis.
proc33: after final
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc40: after removing unused and redundant returns
proc33: before removing unused returns
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc33: after removing unused and redundant returns
proc41: before removing unused returns
proc41: before removing redundant parameters
proc41: after removing redundant parameters
proc41: before removing redundant parameters
proc41: after removing redundant parameters
proc41: before final
proc41: before remUnusedStmtEtc
proc41: after remUnusedStmtEtc
proc41: before find final parameters.
finding final parameters for proc41
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
proc41: after find final parameters.
proc41: before updating arguments
proc41: after updating arguments
proc41: before branch analysis.
proc41: after branch analysis.
proc41: after final
proc41: before removing redundant parameters
proc41: after removing redundant parameters
proc33: before final
proc33: before remUnusedStmtEtc
proc33: after remUnusedStmtEtc
proc33: before find final parameters.
finding final parameters for proc33
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r26
found new parameter r26
potential param m[r28{0} - 72]
found new parameter m[r28{0} - 72]
potential param m[r28{0} - 68]
found new parameter m[r28{0} - 68]
potential param m[r28{0} - 64]
found new parameter m[r28{0} - 64]
potential param m[r28{0} - 60]
found new parameter m[r28{0} - 60]
potential param r27
found new parameter r27
potential param r31
found new parameter r31
proc33: after find final parameters.
proc33: before updating arguments
proc33: after updating arguments
proc33: before branch analysis.
proc33: after branch analysis.
proc33: after final
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc41: after removing unused and redundant returns
proc7: before removing unused returns
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: after removing unused and redundant returns
proc33: before removing unused returns
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc33: after removing unused and redundant returns
proc40: before removing unused returns
proc40: before removing redundant parameters
proc40: after removing redundant parameters
proc40: before removing redundant parameters
proc40: after removing redundant parameters
proc40: before final
proc40: before remUnusedStmtEtc
proc40: after remUnusedStmtEtc
proc40: before find final parameters.
finding final parameters for proc40
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc40: after find final parameters.
proc40: before updating arguments
proc40: after updating arguments
proc40: before branch analysis.
proc40: after branch analysis.
proc40: after final
proc40: before removing redundant parameters
proc40: after removing redundant parameters
proc33: before final
proc33: before remUnusedStmtEtc
proc33: after remUnusedStmtEtc
proc33: before find final parameters.
finding final parameters for proc33
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 72]
found new parameter m[r28{0} - 72]
potential param m[r28{0} - 68]
found new parameter m[r28{0} - 68]
potential param m[r28{0} - 64]
found new parameter m[r28{0} - 64]
potential param m[r28{0} - 60]
found new parameter m[r28{0} - 60]
potential param r27
found new parameter r27
potential param r31
found new parameter r31
proc33: after find final parameters.
proc33: before updating arguments
proc33: after updating arguments
proc33: before branch analysis.
proc33: after branch analysis.
proc33: after final
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc40: after removing unused and redundant returns
proc7: before removing unused returns
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: after removing unused and redundant returns
proc33: before removing unused returns
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc33: after removing unused and redundant returns
proc42: before removing unused returns
proc42: before removing redundant parameters
proc42: after removing redundant parameters
proc42: before removing redundant parameters
proc42: after removing redundant parameters
proc42: before final
proc42: before remUnusedStmtEtc
proc42: after remUnusedStmtEtc
proc42: before find final parameters.
finding final parameters for proc42
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
proc42: after find final parameters.
proc42: before updating arguments
proc42: after updating arguments
proc42: before branch analysis.
proc42: after branch analysis.
proc42: after final
proc42: before removing redundant parameters
proc42: after removing redundant parameters
proc33: before final
proc33: before remUnusedStmtEtc
proc33: after remUnusedStmtEtc
proc33: before find final parameters.
finding final parameters for proc33
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 72]
found new parameter m[r28{0} - 72]
potential param m[r28{0} - 68]
found new parameter m[r28{0} - 68]
potential param m[r28{0} - 64]
found new parameter m[r28{0} - 64]
potential param m[r28{0} - 60]
found new parameter m[r28{0} - 60]
potential param r27
found new parameter r27
potential param r31
found new parameter r31
proc33: after find final parameters.
proc33: before updating arguments
proc33: after updating arguments
proc33: before branch analysis.
proc33: after branch analysis.
proc33: after final
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc42: after removing unused and redundant returns
proc33: before removing unused returns
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc33: after removing unused and redundant returns
proc43: before removing unused returns
proc43: before removing redundant parameters
proc43: after removing redundant parameters
proc43: before removing redundant parameters
proc43: after removing redundant parameters
proc43: before final
proc43: before remUnusedStmtEtc
proc43: after remUnusedStmtEtc
proc43: before find final parameters.
finding final parameters for proc43
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param r27
found new parameter r27
potential param r31
found new parameter r31
proc43: after find final parameters.
proc43: before updating arguments
proc43: after updating arguments
proc43: before branch analysis.
proc43: after branch analysis.
proc43: after final
proc43: before removing redundant parameters
proc43: after removing redundant parameters
proc33: before final
proc33: before remUnusedStmtEtc
proc33: after remUnusedStmtEtc
proc33: before find final parameters.
finding final parameters for proc33
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 72]
found new parameter m[r28{0} - 72]
potential param m[r28{0} - 68]
found new parameter m[r28{0} - 68]
potential param m[r28{0} - 64]
found new parameter m[r28{0} - 64]
potential param m[r28{0} - 60]
found new parameter m[r28{0} - 60]
potential param r27
found new parameter r27
potential param r31
found new parameter r31
proc33: after find final parameters.
proc33: before updating arguments
proc33: after updating arguments
proc33: before branch analysis.
proc33: after branch analysis.
proc33: after final
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc43: after removing unused and redundant returns
proc33: before removing unused returns
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc33: after removing unused and redundant returns
proc44: before removing unused returns
proc44: before removing redundant parameters
proc44: after removing redundant parameters
proc44: before removing redundant parameters
proc44: after removing redundant parameters
proc44: before final
proc44: before remUnusedStmtEtc
proc44: after remUnusedStmtEtc
proc44: before find final parameters.
finding final parameters for proc44
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc44: after find final parameters.
proc44: before updating arguments
proc44: after updating arguments
proc44: before branch analysis.
proc44: after branch analysis.
proc44: after final
proc44: before removing redundant parameters
proc44: after removing redundant parameters
proc41: before final
proc41: before remUnusedStmtEtc
proc41: after remUnusedStmtEtc
proc41: before find final parameters.
finding final parameters for proc41
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
proc41: after find final parameters.
proc41: before updating arguments
proc41: after updating arguments
proc41: before branch analysis.
proc41: after branch analysis.
proc41: after final
proc41: before removing redundant parameters
proc41: after removing redundant parameters
proc44: after removing unused and redundant returns
proc41: before removing unused returns
proc41: before removing redundant parameters
proc41: after removing redundant parameters
proc41: before removing redundant parameters
proc41: after removing redundant parameters
proc41: after removing unused and redundant returns
proc45: before removing unused returns
proc45: before removing redundant parameters
proc45: after removing redundant parameters
proc45: before removing redundant parameters
proc45: after removing redundant parameters
proc45: before final
proc45: before remUnusedStmtEtc
proc45: after remUnusedStmtEtc
proc45: before find final parameters.
finding final parameters for proc45
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
proc45: after find final parameters.
proc45: before updating arguments
proc45: after updating arguments
proc45: before branch analysis.
proc45: after branch analysis.
proc45: after final
proc45: before removing redundant parameters
proc45: after removing redundant parameters
proc43: before final
proc43: before remUnusedStmtEtc
proc43: after remUnusedStmtEtc
proc43: before find final parameters.
finding final parameters for proc43
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param r27
found new parameter r27
potential param r31
found new parameter r31
proc43: after find final parameters.
proc43: before updating arguments
proc43: after updating arguments
proc43: before branch analysis.
proc43: after branch analysis.
proc43: after final
proc43: before removing redundant parameters
proc43: after removing redundant parameters
proc45: after removing unused and redundant returns
proc43: before removing unused returns
proc43: before removing redundant parameters
proc43: after removing redundant parameters
proc43: before removing redundant parameters
proc43: after removing redundant parameters
proc43: after removing unused and redundant returns
proc46: before removing unused returns
proc46: before removing redundant parameters
proc46: after removing redundant parameters
proc46: before removing redundant parameters
proc46: after removing redundant parameters
proc46: before final
proc46: before remUnusedStmtEtc
proc46: after remUnusedStmtEtc
proc46: before find final parameters.
finding final parameters for proc46
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
proc46: after find final parameters.
proc46: before updating arguments
proc46: after updating arguments
proc46: before branch analysis.
proc46: after branch analysis.
proc46: after final
proc46: before removing redundant parameters
proc46: after removing redundant parameters
proc45: before final
proc45: before remUnusedStmtEtc
proc45: after remUnusedStmtEtc
proc45: before find final parameters.
finding final parameters for proc45
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
proc45: after find final parameters.
proc45: before updating arguments
proc45: after updating arguments
proc45: before branch analysis.
proc45: after branch analysis.
proc45: after final
proc45: before removing redundant parameters
proc45: after removing redundant parameters
proc46: after removing unused and redundant returns
proc45: before removing unused returns
proc45: before removing redundant parameters
proc45: after removing redundant parameters
proc45: before removing redundant parameters
proc45: after removing redundant parameters
proc45: after removing unused and redundant returns
proc47: before removing unused returns
proc47: before removing redundant parameters
proc47: after removing redundant parameters
proc47: before removing redundant parameters
proc47: after removing redundant parameters
proc47: before final
proc47: before remUnusedStmtEtc
proc47: after remUnusedStmtEtc
proc47: before find final parameters.
finding final parameters for proc47
potential param r28
found new parameter r28
potential param m[r28{0} - 444]
found new parameter m[r28{0} - 444]
potential param m[r28{0} - 184]
found new parameter m[r28{0} - 184]
potential param r2
found new parameter r2
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r14
found new parameter r14
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
proc47: after find final parameters.
proc47: before updating arguments
proc47: after updating arguments
proc47: before branch analysis.
proc47: after branch analysis.
proc47: after final
proc47: before removing redundant parameters
proc47: after removing redundant parameters
proc47: after removing unused and redundant returns
proc48: before removing unused returns
proc48: before removing redundant parameters
proc48: after removing redundant parameters
proc48: before removing redundant parameters
proc48: after removing redundant parameters
proc48: before final
proc48: before remUnusedStmtEtc
proc48: after remUnusedStmtEtc
proc48: before find final parameters.
finding final parameters for proc48
potential param r28
found new parameter r28
potential param m[r28{0} - 436]
found new parameter m[r28{0} - 436]
potential param m[r28{0} - 176]
found new parameter m[r28{0} - 176]
potential param r2
found new parameter r2
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r14
found new parameter r14
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
proc48: after find final parameters.
proc48: before updating arguments
proc48: after updating arguments
proc48: before branch analysis.
proc48: after branch analysis.
proc48: after final
proc48: before removing redundant parameters
proc48: after removing redundant parameters
proc47: before final
proc47: before remUnusedStmtEtc
proc47: after remUnusedStmtEtc
proc47: before find final parameters.
finding final parameters for proc47
potential param r28
found new parameter r28
potential param m[r28{0} - 444]
found new parameter m[r28{0} - 444]
potential param m[r28{0} - 184]
found new parameter m[r28{0} - 184]
potential param r2
found new parameter r2
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r14
found new parameter r14
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
proc47: after find final parameters.
proc47: before updating arguments
proc47: after updating arguments
proc47: before branch analysis.
proc47: after branch analysis.
proc47: after final
proc47: before removing redundant parameters
proc47: after removing redundant parameters
proc48: after removing unused and redundant returns
proc47: before removing unused returns
proc47: before removing redundant parameters
proc47: after removing redundant parameters
proc47: before removing redundant parameters
proc47: after removing redundant parameters
proc47: after removing unused and redundant returns
proc49: before removing unused returns
proc49: before removing redundant parameters
proc49: after removing redundant parameters
proc49: before removing redundant parameters
proc49: after removing redundant parameters
proc49: before final
proc49: before remUnusedStmtEtc
proc49: after remUnusedStmtEtc
proc49: before find final parameters.
finding final parameters for proc49
potential param m[r28{0} - 432]
found new parameter m[r28{0} - 432]
potential param m[r28{0} - 172]
found new parameter m[r28{0} - 172]
potential param r2
found new parameter r2
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r14
found new parameter r14
potential param r27
found new parameter r27
potential param r31
found new parameter r31
proc49: after find final parameters.
proc49: before updating arguments
proc49: after updating arguments
proc49: before branch analysis.
proc49: after branch analysis.
proc49: after final
proc49: before removing redundant parameters
proc49: after removing redundant parameters
proc48: before final
proc48: before remUnusedStmtEtc
proc48: after remUnusedStmtEtc
proc48: before find final parameters.
finding final parameters for proc48
potential param r28
found new parameter r28
potential param m[r28{0} - 436]
found new parameter m[r28{0} - 436]
potential param m[r28{0} - 176]
found new parameter m[r28{0} - 176]
potential param r2
found new parameter r2
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r14
found new parameter r14
potential param r27
found new parameter r27
potential param r31
found new parameter r31
proc48: after find final parameters.
proc48: before updating arguments
proc48: after updating arguments
proc48: before branch analysis.
proc48: after branch analysis.
proc48: after final
proc48: before removing redundant parameters
proc48: after removing redundant parameters
proc49: after removing unused and redundant returns
proc47: before removing unused returns
proc47: before removing redundant parameters
proc47: after removing redundant parameters
proc47: before removing redundant parameters
proc47: after removing redundant parameters
proc47: before final
proc47: before remUnusedStmtEtc
proc47: after remUnusedStmtEtc
proc47: before find final parameters.
finding final parameters for proc47
potential param r28
found new parameter r28
potential param m[r28{0} - 444]
found new parameter m[r28{0} - 444]
potential param m[r28{0} - 184]
found new parameter m[r28{0} - 184]
potential param r2
found new parameter r2
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r14
found new parameter r14
potential param r27
found new parameter r27
potential param r31
found new parameter r31
proc47: after find final parameters.
proc47: before updating arguments
proc47: after updating arguments
proc47: before branch analysis.
proc47: after branch analysis.
proc47: after final
proc47: before removing redundant parameters
proc47: after removing redundant parameters
proc47: after removing unused and redundant returns
proc48: before removing unused returns
proc48: before removing redundant parameters
proc48: after removing redundant parameters
proc48: before removing redundant parameters
proc48: after removing redundant parameters
proc48: after removing unused and redundant returns
proc50: before removing unused returns
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc50: before final
proc50: before remUnusedStmtEtc
proc50: after remUnusedStmtEtc
proc50: before find final parameters.
finding final parameters for proc50
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 424]
found new parameter m[r28{0} - 424]
potential param r2
found new parameter r2
potential param r14
found new parameter r14
potential param r10
found new parameter r10
potential param r31
found new parameter r31
potential param m[r28{0} - 164]
found new parameter m[r28{0} - 164]
potential param r8
found new parameter r8
potential param r12
found new parameter r12
potential param r27
found new parameter r27
proc50: after find final parameters.
proc50: before updating arguments
proc50: after updating arguments
proc50: before branch analysis.
proc50: after branch analysis.
proc50: after final
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc48: before final
proc48: before remUnusedStmtEtc
proc48: after remUnusedStmtEtc
proc48: before find final parameters.
finding final parameters for proc48
potential param r28
found new parameter r28
potential param m[r28{0} - 436]
found new parameter m[r28{0} - 436]
potential param m[r28{0} - 176]
found new parameter m[r28{0} - 176]
potential param r2
found new parameter r2
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r14
found new parameter r14
potential param r27
found new parameter r27
potential param r31
found new parameter r31
proc48: after find final parameters.
proc48: before updating arguments
proc48: after updating arguments
proc48: before branch analysis.
proc48: after branch analysis.
proc48: after final
proc48: before removing redundant parameters
proc48: after removing redundant parameters
proc49: before final
proc49: before remUnusedStmtEtc
proc49: after remUnusedStmtEtc
proc49: before find final parameters.
finding final parameters for proc49
potential param m[r28{0} - 432]
found new parameter m[r28{0} - 432]
potential param m[r28{0} - 172]
found new parameter m[r28{0} - 172]
potential param r2
found new parameter r2
potential param r8
found new parameter r8
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r14
found new parameter r14
potential param r27
found new parameter r27
potential param r31
found new parameter r31
proc49: after find final parameters.
proc49: before updating arguments
proc49: after updating arguments
proc49: before branch analysis.
proc49: after branch analysis.
proc49: after final
proc49: before removing redundant parameters
proc49: after removing redundant parameters
proc50: after removing unused and redundant returns
proc32: before removing unused returns
proc32: before removing redundant parameters
proc32: after removing redundant parameters
proc32: before removing redundant parameters
proc32: after removing redundant parameters
proc32: after removing unused and redundant returns
proc48: before removing unused returns
proc48: before removing redundant parameters
proc48: after removing redundant parameters
proc48: before removing redundant parameters
proc48: after removing redundant parameters
proc48: after removing unused and redundant returns
proc49: before removing unused returns
proc49: before removing redundant parameters
proc49: after removing redundant parameters
proc49: before removing redundant parameters
proc49: after removing redundant parameters
proc49: after removing unused and redundant returns
proc51: before removing unused returns
proc51: before removing redundant parameters
proc51: after removing redundant parameters
proc51: before removing redundant parameters
proc51: after removing redundant parameters
proc51: before final
proc51: before remUnusedStmtEtc
proc51: after remUnusedStmtEtc
proc51: before find final parameters.
finding final parameters for proc51
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r2
found new parameter r2
potential param r26
found new parameter r26
potential param r14
found new parameter r14
proc51: after find final parameters.
proc51: before updating arguments
proc51: after updating arguments
proc51: before branch analysis.
proc51: after branch analysis.
proc51: after final
proc51: before removing redundant parameters
proc51: after removing redundant parameters
proc50: before final
proc50: before remUnusedStmtEtc
proc50: after remUnusedStmtEtc
proc50: before find final parameters.
finding final parameters for proc50
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 424]
found new parameter m[r28{0} - 424]
potential param r2
found new parameter r2
potential param r14
found new parameter r14
potential param r10
found new parameter r10
potential param r31
found new parameter r31
potential param m[r28{0} - 164]
found new parameter m[r28{0} - 164]
potential param r8
found new parameter r8
potential param r12
found new parameter r12
potential param r27
found new parameter r27
proc50: after find final parameters.
proc50: before updating arguments
proc50: after updating arguments
proc50: before branch analysis.
proc50: after branch analysis.
proc50: after final
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc51: after removing unused and redundant returns
proc50: before removing unused returns
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc50: after removing unused and redundant returns
proc52: before removing unused returns
proc52: before removing redundant parameters
proc52: after removing redundant parameters
proc52: before removing redundant parameters
proc52: after removing redundant parameters
proc52: before final
proc52: before remUnusedStmtEtc
proc52: after remUnusedStmtEtc
proc52: before find final parameters.
finding final parameters for proc52
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r24
found new parameter r24
potential param r10
found new parameter r10
potential param r14
found new parameter r14
potential param r26
found new parameter r26
proc52: after find final parameters.
proc52: before updating arguments
proc52: after updating arguments
proc52: before branch analysis.
proc52: after branch analysis.
proc52: after final
proc52: before removing redundant parameters
proc52: after removing redundant parameters
proc50: before final
proc50: before remUnusedStmtEtc
proc50: after remUnusedStmtEtc
proc50: before find final parameters.
finding final parameters for proc50
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 424]
found new parameter m[r28{0} - 424]
potential param r2
found new parameter r2
potential param r14
found new parameter r14
potential param r10
found new parameter r10
potential param r31
found new parameter r31
potential param m[r28{0} - 164]
found new parameter m[r28{0} - 164]
potential param r8
found new parameter r8
potential param r12
found new parameter r12
potential param r27
found new parameter r27
proc50: after find final parameters.
proc50: before updating arguments
proc50: after updating arguments
proc50: before branch analysis.
proc50: after branch analysis.
proc50: after final
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc52: after removing unused and redundant returns
proc50: before removing unused returns
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc50: after removing unused and redundant returns
proc53: before removing unused returns
proc53: before removing redundant parameters
proc53: after removing redundant parameters
proc53: before removing redundant parameters
proc53: after removing redundant parameters
proc53: before final
proc53: before remUnusedStmtEtc
proc53: after remUnusedStmtEtc
proc53: before find final parameters.
finding final parameters for proc53
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r24
found new parameter r24
potential param r2
found new parameter r2
potential param r14
found new parameter r14
potential param r26
found new parameter r26
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
proc53: after find final parameters.
proc53: before updating arguments
proc53: after updating arguments
proc53: before branch analysis.
proc53: after branch analysis.
proc53: after final
proc53: before removing redundant parameters
proc53: after removing redundant parameters
proc50: before final
proc50: before remUnusedStmtEtc
proc50: after remUnusedStmtEtc
proc50: before find final parameters.
finding final parameters for proc50
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 424]
found new parameter m[r28{0} - 424]
potential param r2
found new parameter r2
potential param r14
found new parameter r14
potential param r10
found new parameter r10
potential param r31
found new parameter r31
potential param m[r28{0} - 164]
found new parameter m[r28{0} - 164]
potential param r8
found new parameter r8
potential param r12
found new parameter r12
potential param r27
found new parameter r27
proc50: after find final parameters.
proc50: before updating arguments
proc50: after updating arguments
proc50: before branch analysis.
proc50: after branch analysis.
proc50: after final
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc53: after removing unused and redundant returns
proc50: before removing unused returns
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc50: after removing unused and redundant returns
proc54: before removing unused returns
proc54: before removing redundant parameters
proc54: after removing redundant parameters
proc54: before removing redundant parameters
proc54: after removing redundant parameters
proc54: before final
proc54: before remUnusedStmtEtc
proc54: after remUnusedStmtEtc
proc54: before find final parameters.
finding final parameters for proc54
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r25
found new parameter r25
potential param r26
found new parameter r26
proc54: after find final parameters.
proc54: before updating arguments
proc54: after updating arguments
proc54: before branch analysis.
proc54: after branch analysis.
proc54: after final
proc54: before removing redundant parameters
proc54: after removing redundant parameters
proc50: before final
proc50: before remUnusedStmtEtc
proc50: after remUnusedStmtEtc
proc50: before find final parameters.
finding final parameters for proc50
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 424]
found new parameter m[r28{0} - 424]
potential param r2
found new parameter r2
potential param r14
found new parameter r14
potential param r10
found new parameter r10
potential param r31
found new parameter r31
potential param m[r28{0} - 164]
found new parameter m[r28{0} - 164]
potential param r8
found new parameter r8
potential param r12
found new parameter r12
potential param r27
found new parameter r27
proc50: after find final parameters.
proc50: before updating arguments
proc50: after updating arguments
proc50: before branch analysis.
proc50: after branch analysis.
proc50: after final
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc54: after removing unused and redundant returns
proc26: before removing unused returns
proc26: before removing redundant parameters
proc26: after removing redundant parameters
proc50: before removing unused returns
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc50: after removing unused and redundant returns
proc3: before removing unused returns
proc3: before removing redundant parameters
proc3: after removing redundant parameters
proc3: before removing redundant parameters
proc3: after removing redundant parameters
proc3: after removing unused and redundant returns
proc4: before removing unused returns
proc4: before removing redundant parameters
proc4: after removing redundant parameters
proc4: before removing redundant parameters
proc4: after removing redundant parameters
proc4: after removing unused and redundant returns
proc2: before removing unused returns
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc2: before removing redundant parameters
proc2: after removing redundant parameters
proc2: after removing unused and redundant returns
proc1: before removing unused returns
proc1: before removing redundant parameters
proc1: after removing redundant parameters
proc1: before removing redundant parameters
proc1: after removing redundant parameters
proc1: after removing unused and redundant returns
WinMain: before removing unused returns
proc5: before removing unused returns
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc5: before removing redundant parameters
proc5: after removing redundant parameters
proc5: after removing unused and redundant returns
proc6: before removing unused returns
proc6: before removing redundant parameters
proc6: after removing redundant parameters
proc6: before removing redundant parameters
proc6: after removing redundant parameters
proc6: after removing unused and redundant returns
proc7: before removing unused returns
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: before removing redundant parameters
proc7: after removing redundant parameters
proc7: after removing unused and redundant returns
proc8: before removing unused returns
proc8: before removing redundant parameters
proc8: after removing redundant parameters
proc8: before removing redundant parameters
proc8: after removing redundant parameters
proc8: after removing unused and redundant returns
proc9: before removing unused returns
proc9: before removing redundant parameters
proc9: after removing redundant parameters
proc9: before removing redundant parameters
proc9: after removing redundant parameters
proc9: after removing unused and redundant returns
proc10: before removing unused returns
proc10: before removing redundant parameters
proc10: after removing redundant parameters
proc10: before removing redundant parameters
proc10: after removing redundant parameters
proc10: after removing unused and redundant returns
proc11: before removing unused returns
proc11: before removing redundant parameters
proc11: after removing redundant parameters
proc11: before removing redundant parameters
proc11: after removing redundant parameters
proc11: after removing unused and redundant returns
proc12: before removing unused returns
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc12: before removing redundant parameters
proc12: after removing redundant parameters
proc12: after removing unused and redundant returns
proc13: before removing unused returns
proc13: before removing redundant parameters
proc13: after removing redundant parameters
proc13: before removing redundant parameters
proc13: after removing redundant parameters
proc13: after removing unused and redundant returns
proc14: before removing unused returns
proc14: before removing redundant parameters
proc14: after removing redundant parameters
proc14: before removing redundant parameters
proc14: after removing redundant parameters
proc14: after removing unused and redundant returns
proc15: before removing unused returns
proc15: before removing redundant parameters
proc15: after removing redundant parameters
proc15: before removing redundant parameters
proc15: after removing redundant parameters
proc15: after removing unused and redundant returns
proc16: before removing unused returns
proc16: before removing redundant parameters
proc16: after removing redundant parameters
proc16: before removing redundant parameters
proc16: after removing redundant parameters
proc16: after removing unused and redundant returns
proc17: before removing unused returns
proc17: before removing redundant parameters
proc17: after removing redundant parameters
proc17: before removing redundant parameters
proc17: after removing redundant parameters
proc17: after removing unused and redundant returns
proc18: before removing unused returns
proc18: before removing redundant parameters
proc18: after removing redundant parameters
proc18: before removing redundant parameters
proc18: after removing redundant parameters
proc18: after removing unused and redundant returns
proc19: before removing unused returns
proc19: before removing redundant parameters
proc19: after removing redundant parameters
proc19: before removing redundant parameters
proc19: after removing redundant parameters
proc19: after removing unused and redundant returns
proc20: before removing unused returns
proc20: before removing redundant parameters
proc20: after removing redundant parameters
proc20: before removing redundant parameters
proc20: after removing redundant parameters
proc20: after removing unused and redundant returns
proc21: before removing unused returns
proc21: before removing redundant parameters
proc21: after removing redundant parameters
proc21: before removing redundant parameters
proc21: after removing redundant parameters
proc21: after removing unused and redundant returns
proc22: before removing unused returns
proc22: before removing redundant parameters
proc22: after removing redundant parameters
proc22: before removing redundant parameters
proc22: after removing redundant parameters
proc22: after removing unused and redundant returns
proc23: before removing unused returns
proc23: before removing redundant parameters
proc23: after removing redundant parameters
proc23: before removing redundant parameters
proc23: after removing redundant parameters
proc23: after removing unused and redundant returns
proc24: before removing unused returns
proc24: before removing redundant parameters
proc24: after removing redundant parameters
proc24: before removing redundant parameters
proc24: after removing redundant parameters
proc24: after removing unused and redundant returns
proc25: before removing unused returns
proc25: before removing redundant parameters
proc25: after removing redundant parameters
proc25: before removing redundant parameters
proc25: after removing redundant parameters
proc25: after removing unused and redundant returns
proc26: before removing unused returns
proc26: before removing redundant parameters
proc26: after removing redundant parameters
proc27: before removing unused returns
proc27: before removing redundant parameters
proc27: after removing redundant parameters
proc27: before removing redundant parameters
proc27: after removing redundant parameters
proc27: after removing unused and redundant returns
proc28: before removing unused returns
proc28: before removing redundant parameters
proc28: after removing redundant parameters
proc28: before removing redundant parameters
proc28: after removing redundant parameters
proc28: after removing unused and redundant returns
proc29: before removing unused returns
proc29: before removing redundant parameters
proc29: after removing redundant parameters
proc29: before removing redundant parameters
proc29: after removing redundant parameters
proc29: after removing unused and redundant returns
proc30: before removing unused returns
proc30: before removing redundant parameters
proc30: after removing redundant parameters
proc30: before removing redundant parameters
proc30: after removing redundant parameters
proc30: after removing unused and redundant returns
proc31: before removing unused returns
proc31: before removing redundant parameters
proc31: after removing redundant parameters
proc31: before removing redundant parameters
proc31: after removing redundant parameters
proc31: after removing unused and redundant returns
proc32: before removing unused returns
proc32: before removing redundant parameters
proc32: after removing redundant parameters
proc32: before removing redundant parameters
proc32: after removing redundant parameters
proc32: after removing unused and redundant returns
proc33: before removing unused returns
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc33: before removing redundant parameters
proc33: after removing redundant parameters
proc33: after removing unused and redundant returns
proc34: before removing unused returns
proc34: before removing redundant parameters
proc34: after removing redundant parameters
proc34: before removing redundant parameters
proc34: after removing redundant parameters
proc34: after removing unused and redundant returns
proc35: before removing unused returns
proc35: before removing redundant parameters
proc35: after removing redundant parameters
proc35: before removing redundant parameters
proc35: after removing redundant parameters
proc35: after removing unused and redundant returns
proc36: before removing unused returns
proc36: before removing redundant parameters
proc36: after removing redundant parameters
proc36: before removing redundant parameters
proc36: after removing redundant parameters
proc36: after removing unused and redundant returns
proc37: before removing unused returns
proc37: before removing redundant parameters
proc37: after removing redundant parameters
proc37: before removing redundant parameters
proc37: after removing redundant parameters
proc37: after removing unused and redundant returns
proc38: before removing unused returns
proc38: before removing redundant parameters
proc38: after removing redundant parameters
proc38: before removing redundant parameters
proc38: after removing redundant parameters
proc38: after removing unused and redundant returns
proc39: before removing unused returns
proc39: before removing redundant parameters
proc39: after removing redundant parameters
proc39: before removing redundant parameters
proc39: after removing redundant parameters
proc39: after removing unused and redundant returns
proc40: before removing unused returns
proc40: before removing redundant parameters
proc40: after removing redundant parameters
proc40: before removing redundant parameters
proc40: after removing redundant parameters
proc40: after removing unused and redundant returns
proc41: before removing unused returns
proc41: before removing redundant parameters
proc41: after removing redundant parameters
proc41: before removing redundant parameters
proc41: after removing redundant parameters
proc41: after removing unused and redundant returns
proc42: before removing unused returns
proc42: before removing redundant parameters
proc42: after removing redundant parameters
proc42: before removing redundant parameters
proc42: after removing redundant parameters
proc42: after removing unused and redundant returns
proc43: before removing unused returns
proc43: before removing redundant parameters
proc43: after removing redundant parameters
proc43: before removing redundant parameters
proc43: after removing redundant parameters
proc43: after removing unused and redundant returns
proc44: before removing unused returns
proc44: before removing redundant parameters
proc44: after removing redundant parameters
proc44: before removing redundant parameters
proc44: after removing redundant parameters
proc44: after removing unused and redundant returns
proc45: before removing unused returns
proc45: before removing redundant parameters
proc45: after removing redundant parameters
proc45: before removing redundant parameters
proc45: after removing redundant parameters
proc45: after removing unused and redundant returns
proc46: before removing unused returns
proc46: before removing redundant parameters
proc46: after removing redundant parameters
proc46: before removing redundant parameters
proc46: after removing redundant parameters
proc46: after removing unused and redundant returns
proc47: before removing unused returns
proc47: before removing redundant parameters
proc47: after removing redundant parameters
proc47: before removing redundant parameters
proc47: after removing redundant parameters
proc47: after removing unused and redundant returns
proc48: before removing unused returns
proc48: before removing redundant parameters
proc48: after removing redundant parameters
proc48: before removing redundant parameters
proc48: after removing redundant parameters
proc48: after removing unused and redundant returns
proc49: before removing unused returns
proc49: before removing redundant parameters
proc49: after removing redundant parameters
proc49: before removing redundant parameters
proc49: after removing redundant parameters
proc49: after removing unused and redundant returns
proc50: before removing unused returns
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc50: before removing redundant parameters
proc50: after removing redundant parameters
proc50: after removing unused and redundant returns
proc51: before removing unused returns
proc51: before removing redundant parameters
proc51: after removing redundant parameters
proc51: before removing redundant parameters
proc51: after removing redundant parameters
proc51: after removing unused and redundant returns
proc52: before removing unused returns
proc52: before removing redundant parameters
proc52: after removing redundant parameters
proc52: before removing redundant parameters
proc52: after removing redundant parameters
proc52: after removing unused and redundant returns
proc53: before removing unused returns
proc53: before removing redundant parameters
proc53: after removing redundant parameters
proc53: before removing redundant parameters
proc53: after removing redundant parameters
proc53: after removing unused and redundant returns
proc54: before removing unused returns
proc54: before removing redundant parameters
proc54: after removing redundant parameters
proc54: before removing redundant parameters
proc54: after removing redundant parameters
proc54: after removing unused and redundant returns
WinMain: before transforming from SSA form
WinMain: before mapping locals from dfa type analysis
local esp has type unsigned int that doesn't agree with type of define void of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
WinMain: after transforming from SSA form
proc1: before transforming from SSA form
proc1: before mapping locals from dfa type analysis
proc1: after transforming from SSA form
proc2: before transforming from SSA form
proc2: before mapping locals from dfa type analysis
proc2: after transforming from SSA form
proc3: before transforming from SSA form
proc3: before mapping locals from dfa type analysis
local esp has type unsigned int that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
proc3: after transforming from SSA form
proc4: before transforming from SSA form
proc4: before mapping locals from dfa type analysis
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type HWND that doesn't agree with type of define __size32 of a library, why?
proc4: after transforming from SSA form
proc5: before transforming from SSA form
proc5: before mapping locals from dfa type analysis
proc5: after transforming from SSA form
proc6: before transforming from SSA form
proc6: before mapping locals from dfa type analysis
proc6: after transforming from SSA form
proc7: before transforming from SSA form
proc7: before mapping locals from dfa type analysis
proc7: after transforming from SSA form
proc8: before transforming from SSA form
proc8: before mapping locals from dfa type analysis
proc8: after transforming from SSA form
proc9: before transforming from SSA form
proc9: before mapping locals from dfa type analysis
proc9: after transforming from SSA form
proc10: before transforming from SSA form
proc10: before mapping locals from dfa type analysis
proc10: after transforming from SSA form
proc11: before transforming from SSA form
proc11: before mapping locals from dfa type analysis
proc11: after transforming from SSA form
proc12: before transforming from SSA form
proc12: before mapping locals from dfa type analysis
local eax has type union { unsigned int x2765; __size8 * x2766; } that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type union { unsigned int x2761; unsigned int * x2762; __size8 * x2780; } that doesn't agree with type of define unsigned int of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
local eax has type unsigned int that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
proc12: after transforming from SSA form
proc13: before transforming from SSA form
proc13: before mapping locals from dfa type analysis
local ecx has type void * that doesn't agree with type of define union { unsigned int x2709; void * x2710; } of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local eax_1 has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
proc13: after transforming from SSA form
proc14: before transforming from SSA form
proc14: before mapping locals from dfa type analysis
proc14: after transforming from SSA form
proc15: before transforming from SSA form
proc15: before mapping locals from dfa type analysis
proc15: after transforming from SSA form
proc16: before transforming from SSA form
proc16: before mapping locals from dfa type analysis
proc16: after transforming from SSA form
proc17: before transforming from SSA form
proc17: before mapping locals from dfa type analysis
local esp has type void * that doesn't agree with type of define union { __size32 * x2657; /*signed?*/int x2658; } of a library, why?
proc17: after transforming from SSA form
proc18: before transforming from SSA form
proc18: before mapping locals from dfa type analysis
proc18: after transforming from SSA form
proc19: before transforming from SSA form
proc19: before mapping locals from dfa type analysis
proc19: after transforming from SSA form
proc20: before transforming from SSA form
proc20: before mapping locals from dfa type analysis
local eax_1 has type __size32 * that doesn't agree with type of define void * of a library, why?
local ecx has type union { union { unsigned int x1969; union { unsigned int x1969; unsigned char * x1970; __size8 x2081; } * x1970; } * x2059; int x2060; } that doesn't agree with type of define union { int x2433; __size32 * x2434; } of a library, why?
local edx has type union { union { unsigned int x1969; union { unsigned int x1969; unsigned char * x1970; __size8 x2081; } * x1970; } * x2059; int x2060; } that doesn't agree with type of define /*signed?*/int of a library, why?
proc20: after transforming from SSA form
proc21: before transforming from SSA form
proc21: before mapping locals from dfa type analysis
local esp has type __size32 that doesn't agree with type of define void of a library, why?
proc21: after transforming from SSA form
proc22: before transforming from SSA form
proc22: before mapping locals from dfa type analysis
local esp has type void * that doesn't agree with type of define __size32 * of a library, why?
proc22: after transforming from SSA form
proc23: before transforming from SSA form
proc23: before mapping locals from dfa type analysis
proc23: after transforming from SSA form
proc24: before transforming from SSA form
proc24: before mapping locals from dfa type analysis
proc24: after transforming from SSA form
proc25: before transforming from SSA form
proc25: before mapping locals from dfa type analysis
local esp has type void * that doesn't agree with type of define __size32 * of a library, why?
local eax has type __size32 * that doesn't agree with type of define union { unsigned int x2373; __size32 * x2374; } of a library, why?
local eax has type union { unsigned int x2373; __size32 * x2374; } that doesn't agree with type of define __size32 * of a library, why?
proc25: after transforming from SSA form
proc26: before transforming from SSA form
proc26: before mapping locals from dfa type analysis
proc26: after transforming from SSA form
proc27: before transforming from SSA form
proc27: before mapping locals from dfa type analysis
proc27: after transforming from SSA form
proc28: before transforming from SSA form
proc28: before mapping locals from dfa type analysis
proc28: after transforming from SSA form
proc29: before transforming from SSA form
proc29: before mapping locals from dfa type analysis
proc29: after transforming from SSA form
proc30: before transforming from SSA form
proc30: before mapping locals from dfa type analysis
local esp has type void * that doesn't agree with type of define __size32 * of a library, why?
proc30: after transforming from SSA form
proc31: before transforming from SSA form
proc31: before mapping locals from dfa type analysis
proc31: after transforming from SSA form
proc32: before transforming from SSA form
proc32: before mapping locals from dfa type analysis
proc32: after transforming from SSA form
proc33: before transforming from SSA form
proc33: before mapping locals from dfa type analysis
local eax has type unsigned char * that doesn't agree with type of define __size32 of a library, why?
proc33: after transforming from SSA form
proc34: before transforming from SSA form
proc34: before mapping locals from dfa type analysis
proc34: after transforming from SSA form
proc35: before transforming from SSA form
proc35: before mapping locals from dfa type analysis
proc35: after transforming from SSA form
proc36: before transforming from SSA form
proc36: before mapping locals from dfa type analysis
proc36: after transforming from SSA form
proc37: before transforming from SSA form
proc37: before mapping locals from dfa type analysis
proc37: after transforming from SSA form
proc38: before transforming from SSA form
proc38: before mapping locals from dfa type analysis
proc38: after transforming from SSA form
proc39: before transforming from SSA form
proc39: before mapping locals from dfa type analysis
proc39: after transforming from SSA form
proc40: before transforming from SSA form
proc40: before mapping locals from dfa type analysis
proc40: after transforming from SSA form
proc41: before transforming from SSA form
proc41: before mapping locals from dfa type analysis
local eax has type /*signed?*/int * that doesn't agree with type of define __size32 of a library, why?
local ecx has type int * that doesn't agree with type of define void of a library, why?
local edx has type int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
proc41: after transforming from SSA form
proc42: before transforming from SSA form
proc42: before mapping locals from dfa type analysis
proc42: after transforming from SSA form
proc43: before transforming from SSA form
proc43: before mapping locals from dfa type analysis
proc43: after transforming from SSA form
proc44: before transforming from SSA form
proc44: before mapping locals from dfa type analysis
proc44: after transforming from SSA form
proc45: before transforming from SSA form
proc45: before mapping locals from dfa type analysis
local eax has type union { unsigned int x3127; __size32 * x3128; } that doesn't agree with type of define __size32 * of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
proc45: after transforming from SSA form
proc46: before transforming from SSA form
proc46: before mapping locals from dfa type analysis
local esp has type void * that doesn't agree with type of define void of a library, why?
proc46: after transforming from SSA form
proc47: before transforming from SSA form
proc47: before mapping locals from dfa type analysis
proc47: after transforming from SSA form
proc48: before transforming from SSA form
proc48: before mapping locals from dfa type analysis
local esp has type void * that doesn't agree with type of define void of a library, why?
proc48: after transforming from SSA form
proc49: before transforming from SSA form
proc49: before mapping locals from dfa type analysis
proc49: after transforming from SSA form
proc50: before transforming from SSA form
proc50: before mapping locals from dfa type analysis
local eax has type /*signed?*/int * that doesn't agree with type of define __size32 of a library, why?
local ecx has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define HANDLE of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define /*signed?*/int * of a library, why?
local ecx has type void that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local esp_1 has type union { __size32 * x6387; /*signed?*/int x6388; } that doesn't agree with type of define __size32 * of a library, why?
proc50: after transforming from SSA form
proc51: before transforming from SSA form
proc51: before mapping locals from dfa type analysis
proc51: after transforming from SSA form
proc52: before transforming from SSA form
proc52: before mapping locals from dfa type analysis
proc52: after transforming from SSA form
proc53: before transforming from SSA form
proc53: before mapping locals from dfa type analysis
proc53: after transforming from SSA form
proc54: before transforming from SSA form
proc54: before mapping locals from dfa type analysis
local esp has type void * that doesn't agree with type of define __size32 * of a library, why?
proc54: after transforming from SSA form
WARNING: CHLLCode::appendTypeIdent: declaring type void as int for param1
WARNING: CHLLCode::appendTypeIdent: declaring type void as int for param1
WARNING: CHLLCode::appendTypeIdent: declaring type void as int for param1
WinMain: before removing unused locals
WinMain: after removing unused locals
proc1: before removing unused locals
proc1: after removing unused locals
Warning: CHLLCode::AddProcDec: Proc proc1 has 11 parameters
proc2: before removing unused locals
proc2: after removing unused locals
Warning: CHLLCode::AddProcDec: Proc proc2 has 11 parameters
proc3: before removing unused locals
proc3: after removing unused locals
proc4: before removing unused locals
proc4: after removing unused locals
proc5: before removing unused locals
proc5: after removing unused locals
Warning: CHLLCode::AddProcDec: Proc proc5 has 11 parameters
proc6: before removing unused locals
proc6: after removing unused locals
proc7: before removing unused locals
proc7: after removing unused locals
Warning: CHLLCode::AddProcDec: Proc proc7 has 14 parameters
proc8: before removing unused locals
proc8: after removing unused locals
WARNING: CHLLCode::appendTypeIdent: declaring type void as int for param1
proc9: before removing unused locals
proc9: after removing unused locals
proc10: before removing unused locals
proc10: after removing unused locals
Warning: CHLLCode::AddProcDec: Proc proc10 has 11 parameters
proc11: before removing unused locals
proc11: after removing unused locals
WARNING: CHLLCode::appendTypeIdent: declaring type void as int for param1
proc12: before removing unused locals
proc12: after removing unused locals
WARNING: CHLLCode::appendTypeIdent: declaring type void as int for param1
proc13: before removing unused locals
proc13: after removing unused locals
proc14: before removing unused locals
proc14: after removing unused locals
proc15: before removing unused locals
proc15: after removing unused locals
proc16: before removing unused locals
proc16: after removing unused locals
Warning: CHLLCode::AddProcDec: Proc proc16 has 11 parameters
proc17: before removing unused locals
proc17: after removing unused locals
Warning: CHLLCode::AddProcDec: Proc proc17 has 16 parameters
proc18: before removing unused locals
proc18: after removing unused locals
proc19: before removing unused locals
proc19: after removing unused locals
proc20: before removing unused locals
proc20: after removing unused locals
Warning: CHLLCode::AddProcDec: Proc proc20 has 11 parameters
proc21: before removing unused locals
proc21: after removing unused locals
proc22: before removing unused locals
proc22: after removing unused locals
proc23: before removing unused locals
proc23: after removing unused locals
proc24: before removing unused locals
proc24: after removing unused locals
proc25: before removing unused locals
proc25: after removing unused locals
proc26: before removing unused locals
proc26: after removing unused locals
proc27: before removing unused locals
proc27: after removing unused locals
proc28: before removing unused locals
proc28: after removing unused locals
proc29: before removing unused locals
proc29: after removing unused locals
proc30: before removing unused locals
proc30: after removing unused locals
proc31: before removing unused locals
proc31: after removing unused locals
proc32: before removing unused locals
proc32: after removing unused locals
proc33: before removing unused locals
proc33: after removing unused locals
proc34: before removing unused locals
proc34: after removing unused locals
proc35: before removing unused locals
proc35: after removing unused locals
proc36: before removing unused locals
proc36: after removing unused locals
proc37: before removing unused locals
proc37: after removing unused locals
proc38: before removing unused locals
proc38: after removing unused locals
proc39: before removing unused locals
proc39: after removing unused locals
proc40: before removing unused locals
proc40: after removing unused locals
proc41: before removing unused locals
proc41: after removing unused locals
proc42: before removing unused locals
proc42: after removing unused locals
proc43: before removing unused locals
proc43: after removing unused locals
proc44: before removing unused locals
proc44: after removing unused locals
proc45: before removing unused locals
proc45: after removing unused locals
proc46: before removing unused locals
proc46: after removing unused locals
proc47: before removing unused locals
proc47: after removing unused locals
proc48: before removing unused locals
proc48: after removing unused locals
proc49: before removing unused locals
proc49: after removing unused locals
proc50: before removing unused locals
proc50: after removing unused locals
proc51: before removing unused locals
proc51: after removing unused locals
proc52: before removing unused locals
proc52: after removing unused locals
proc53: before removing unused locals
proc53: after removing unused locals
proc54: before removing unused locals
proc54: after removing unused locals
